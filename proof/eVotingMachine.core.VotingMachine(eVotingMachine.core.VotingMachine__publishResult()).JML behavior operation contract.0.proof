\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Sep 25 21:57:23 CEST 2014
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=wdChecks-wdChecks\\:off , JavaCard-JavaCard\\:on , bigint-bigint\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , sequences-sequences\\:on , runtimeExceptions-runtimeExceptions\\:allow , integerSimplificationRules-integerSimplificationRules\\:full , Strings-Strings\\:on , reach-reach\\:on , assertions-assertions\\:on , modelFields-modelFields\\:showSatisfiability , initialisation-initialisation\\:disableStaticInitialisation , wdOperator-wdOperator\\:L , optimisedSelectRules-optimisedSelectRules\\:on
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Thu Sep 25 21:57:23 CEST 2014
name=de.uni.trier.infsec.eVotingMachine.core.VotingMachine[de.uni.trier.infsec.eVotingMachine.core.VotingMachine\\:\\:publishResult()].JML behavior operation contract.0
contract=de.uni.trier.infsec.eVotingMachine.core.VotingMachine[de.uni.trier.infsec.eVotingMachine.core.VotingMachine\\:\\:publishResult()].JML behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "miki" ) (keyVersion "c781f49facff0f907c1d2349143b682c313d0e46"))

(autoModeTime "1252")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "heapAtPre"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "insert_constant_string_value" (formula "9") (term "0") (ifseqformula "1"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "6"))
(rule "notLeft" (formula "2"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "7"))
(rule "eqSymm" (formula "18") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "16"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,1,1,1,0,1,1,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0,0,1,1,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0,1,1,0,1,1,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0,1,0,1,1,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "5"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
(rule "assignment" (formula "18") (term "1"))
(builtin "One Step Simplification" (formula "18"))
(rule "applyEq" (formula "8") (term "0,1,0,0,1,0,0") (ifseqformula "6"))
(rule "applyEq" (formula "7") (term "1") (ifseqformula "6"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
(rule "elementOfUnion" (formula "18") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "18") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "18") (term "1,0,0,0,0,1,0,1"))
(rule "nnf_imp2or" (formula "8") (term "0"))
(rule "nnf_notAnd" (formula "8") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
(rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
(rule "mul_literals" (formula "8") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
(rule "methodBodyExpand" (formula "18") (term "1") (newnames "heapBefore_publishResult,savedHeapBefore_publishResult"))
(builtin "One Step Simplification" (formula "18"))
(rule "methodCallUnfoldArguments" (formula "18") (term "1"))
(rule "variableDeclarationAssign" (formula "18") (term "1"))
(rule "variableDeclaration" (formula "18") (term "1") (newnames "var"))
(rule "activeUseStaticFieldReadAccess" (formula "18") (term "1"))
(rule "assignment_read_static_attribute" (formula "18") (term "1"))
(builtin "One Step Simplification" (formula "18"))
(rule "variableDeclarationAssign" (formula "18") (term "1"))
(rule "variableDeclaration" (formula "18") (term "1") (newnames "var_1"))
(builtin "Use Operation Contract" (formula "18") (newnames "heapBefore_getResult,result,exc_0,heapAfter_getResult,anon_heap_getResult") (contract "de.uni.trier.infsec.eVotingMachine.core.VotingMachine[de.uni.trier.infsec.eVotingMachine.core.VotingMachine::getResult()].JML behavior operation contract.0#de.uni.trier.infsec.eVotingMachine.core.VotingMachine[de.uni.trier.infsec.eVotingMachine.core.VotingMachine::getResult()].JML behavior operation contract.1"))
(branch "Post (getResult)"
   (builtin "One Step Simplification" (formula "20"))
   (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "17")) (ifInst ""  (formula "16")) (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "6")) (ifInst ""  (formula "17")) (ifInst ""  (formula "16")) (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "6")))
   (rule "andLeft" (formula "10"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,1,0") (ifseqformula "10"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "typeEqDerived" (formula "13") (term "0,1,1,1,1,0") (ifseqformula "11"))
   (rule "typeEqDerived" (formula "13") (term "0,1,1,1,1,1") (ifseqformula "11"))
   (rule "typeEqDerived" (formula "13") (term "0,0,0,1,1,1,1") (ifseqformula "11"))
   (rule "typeEqDerived" (formula "13") (term "0,0,0,1,1,1,0") (ifseqformula "11"))
   (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
   (rule "andLeft" (formula "13"))
   (rule "eqSymm" (formula "14") (term "0,0"))
   (rule "eqSymm" (formula "13") (term "0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
   (rule "times_zero_1" (formula "13") (term "1,0,0,0,1,0"))
   (rule "add_zero_right" (formula "13") (term "0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0,0"))
   (rule "assignment" (formula "24") (term "1"))
   (builtin "One Step Simplification" (formula "24"))
   (rule "variableDeclarationAssign" (formula "24") (term "1"))
   (rule "variableDeclaration" (formula "24") (term "1") (newnames "var_2"))
   (rule "assignment_read_attribute_this" (formula "24") (term "1"))
   (builtin "One Step Simplification" (formula "24"))
   (rule "pullOutSelect" (formula "24") (term "0,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingMachine_core_VotingMachine_signer_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "3")))
   (rule "applyEqReverse" (formula "25") (term "0,1,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "applyEq" (formula "13") (term "1,0,0,1,0") (ifseqformula "6"))
   (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "7"))
   (rule "eqSymm" (formula "14") (term "0,0"))
   (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "applyEq" (formula "13") (term "0,0,0,0") (ifseqformula "7"))
   (rule "eqSymm" (formula "13") (term "0,0,0"))
   (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0,0,0") (ifseqformula "6"))
   (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0,0") (ifseqformula "6"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,1,0"))
   (rule "mul_literals" (formula "13") (term "1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0,0"))
   (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "13") (term "1,0"))
   (rule "mul_literals" (formula "13") (term "1,0,0,1,0"))
   (rule "add_literals" (formula "13") (term "0,0,1,0"))
   (rule "add_zero_left" (formula "13") (term "0,1,0"))
   (rule "nnf_imp2or" (formula "14") (term "0,0"))
   (rule "nnf_imp2or" (formula "13") (term "0,0,0"))
   (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
   (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0"))
   (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0"))
   (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0"))
   (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0"))
   (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0"))
   (rule "mul_literals" (formula "14") (term "1,0,0,0,0"))
   (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "8"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "notLeft" (formula "14"))
   (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "14"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "replace_known_right" (formula "13") (term "0,1") (ifseqformula "14"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "true_left" (formula "13"))
   (builtin "Use Operation Contract" (formula "23") (newnames "heapBefore_signAndPost,exc_1,heapAfter_signAndPost,anon_heap_signAndPost") (contract "de.uni.trier.infsec.eVotingMachine.core.VotingMachine[de.uni.trier.infsec.eVotingMachine.core.VotingMachine::signAndPost([B,[B,de.uni.trier.infsec.functionalities.pkisig.Signer)].JML behavior operation contract.0"))
   (branch "Post (signAndPost)"
      (builtin "One Step Simplification" (formula "25"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "15"))
      (rule "typeEqDerived" (formula "16") (term "0,1,1,1,1") (ifseqformula "15"))
      (rule "typeEqDerived" (formula "16") (term "0,1,0,1,1,1") (ifseqformula "15"))
      (rule "typeEqDerived" (formula "16") (term "0,0,0,0,1,1") (ifseqformula "15"))
      (rule "typeEqDerived" (formula "16") (term "0,0,0,1,0,1,1") (ifseqformula "15"))
      (rule "typeEqDerived" (formula "16") (term "0,1,0,0,1,1,1") (ifseqformula "15"))
      (rule "typeEqDerived" (formula "16") (term "0,0,0,0,1,1,1") (ifseqformula "15"))
      (rule "typeEqDerived" (formula "16") (term "0,0,1,1,1,0,1,1") (ifseqformula "15"))
      (rule "typeEqDerived" (formula "16") (term "0,0,0,1,1,0,1,1") (ifseqformula "15"))
      (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
      (rule "andLeft" (formula "16"))
      (rule "notLeft" (formula "16"))
      (rule "inEqSimp_commuteLeq" (formula "16"))
      (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=de_uni_trier_infsec_environment_Environment_inputValues_2"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=de_uni_trier_infsec_environment_Environment_inputCounter_2"))
      (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "elementOfUnion" (formula "16") (term "0,0"))
      (rule "elementOfSingleton" (formula "16") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "16"))
      (rule "hideAuxiliaryEq" (formula "16"))
      (rule "methodCallEmpty" (formula "27") (term "1"))
      (rule "tryEmpty" (formula "27") (term "1"))
      (rule "emptyModality" (formula "27") (term "1"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "replaceKnownSelect_taclet00_2" (formula "27") (term "0,0,0,0"))
      (rule "replaceKnownSelect_taclet00_5" (formula "27") (term "0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_4" (formula "27") (term "0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_6" (formula "27") (term "0,0,1,0"))
      (rule "eqSymm" (formula "27") (term "1,0,0,1"))
      (rule "replace_known_right" (formula "27") (term "0,0,0") (ifseqformula "18"))
      (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "16")))
      (rule "pullOutSelect" (formula "27") (term "1,0") (inst "selectSK=de_uni_trier_infsec_eVotingMachine_core_VotingMachine_numberOfCandidates_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "11"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "3")))
      (rule "applyEqReverse" (formula "28") (term "1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "6"))
      (rule "pullOutSelect" (formula "27") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_eVotingMachine_core_VotingMachine_votesForCandidates_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "11"))
      (rule "eqSymm" (formula "28") (term "0"))
      (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "3")))
      (rule "applyEqReverse" (formula "28") (term "0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "eqSymm" (formula "27") (term "0"))
      (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "allRight" (formula "27") (inst "sk=f_1"))
      (rule "allRight" (formula "27") (inst "sk=o_1"))
      (rule "orRight" (formula "27"))
      (rule "orRight" (formula "27"))
      (rule "orRight" (formula "27"))
      (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=f_1_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "11"))
      (rule "eqSymm" (formula "31"))
      (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
      (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
      (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "28"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
      (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "29"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
      (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "commute_and" (formula "28"))
      (rule "commute_and" (formula "29"))
      (rule "arrayLengthNotNegative" (formula "7") (term "1"))
      (rule "arrayLengthIsAShort" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "arrayLengthNotNegative" (formula "9") (term "0"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
      (rule "arrayLengthIsAShort" (formula "9") (term "0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "ifthenelse_split" (formula "1") (term "0"))
      (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_getResult«anonHeapFunction» = TRUE) TRUE"
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "2"))
         (rule "notLeft" (formula "1"))
         (rule "orRight" (formula "20"))
         (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "eqSymm" (formula "34"))
         (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "18"))
         (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "19")))
         (rule "closeTrue" (formula "33"))
      )
      (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_getResult«anonHeapFunction» = TRUE) FALSE"
         (rule "close" (formula "33") (ifseqformula "1"))
      )
   )
   (branch "Exceptional Post (signAndPost)"
      (builtin "One Step Simplification" (formula "25"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1,0") (ifseqformula "14"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,1,0") (ifseqformula "10"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "15"))
      (rule "notLeft" (formula "15"))
      (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "18"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "true_left" (formula "16"))
      (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "17"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "18"))
      (rule "inEqSimp_commuteLeq" (formula "16") (term "1,1"))
      (rule "inEqSimp_commuteLeq" (formula "17") (term "1,1"))
      (rule "inEqSimp_commuteLeq" (formula "19") (term "1,1"))
      (rule "inEqSimp_commuteLeq" (formula "18") (term "1,1"))
      (rule "pullOutSelect" (formula "16") (term "0,0,0,1") (inst "selectSK=de_uni_trier_infsec_environment_Environment_inputValues_1"))
      (rule "applyEq" (formula "18") (term "0,0,0,1") (ifseqformula "16"))
      (rule "applyEq" (formula "19") (term "0,0,0,1") (ifseqformula "16"))
      (rule "applyEq" (formula "20") (term "0,0,0,1") (ifseqformula "16"))
      (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "elementOfUnion" (formula "16") (term "0,0"))
      (rule "elementOfSingleton" (formula "16") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "elementOfSingleton" (formula "16") (term "0,0"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "10"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "applyEqReverse" (formula "20") (term "0,0,0,1") (ifseqformula "16"))
      (rule "applyEqReverse" (formula "17") (term "0,0,0,1") (ifseqformula "16"))
      (rule "applyEqReverse" (formula "18") (term "0,0,0,1") (ifseqformula "16"))
      (rule "applyEqReverse" (formula "19") (term "0,0,0,1") (ifseqformula "16"))
      (rule "hideAuxiliaryEq" (formula "16"))
      (rule "replace_known_right" (formula "19") (term "0,0,1") (ifseqformula "23"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "replace_known_right" (formula "16") (term "0,0,1") (ifseqformula "23"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "replace_known_right" (formula "17") (term "0,0,1") (ifseqformula "23"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "replace_known_right" (formula "18") (term "0,0,1") (ifseqformula "23"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "pullOutSelect" (formula "19") (term "0,1") (inst "selectSK=de_uni_trier_infsec_environment_Environment_inputCounter_1"))
      (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "19"))
      (rule "applyEq" (formula "16") (term "0,1") (ifseqformula "19"))
      (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "19"))
      (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "elementOfUnion" (formula "19") (term "0,0"))
      (rule "elementOfSingleton" (formula "19") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "applyEqReverse" (formula "20") (term "0,1") (ifseqformula "19"))
      (rule "applyEqReverse" (formula "17") (term "0,1") (ifseqformula "19"))
      (rule "applyEqReverse" (formula "16") (term "0,1") (ifseqformula "19"))
      (rule "applyEqReverse" (formula "18") (term "0,1") (ifseqformula "19"))
      (rule "hideAuxiliaryEq" (formula "19"))
      (rule "commute_or_2" (formula "20"))
      (rule "methodCallThrow" (formula "32") (term "1"))
      (rule "arrayLengthNotNegative" (formula "6") (term "1"))
      (rule "arrayLengthIsAShort" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "arrayLengthNotNegative" (formula "8") (term "0"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
      (rule "arrayLengthIsAShort" (formula "8") (term "0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "tryCatchThrow" (formula "33") (term "1"))
      (rule "ifElseUnfold" (formula "33") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "33") (term "1") (newnames "x"))
      (rule "equality_comparison_simple" (formula "33") (term "1"))
      (builtin "One Step Simplification" (formula "33"))
      (rule "replace_known_right" (formula "33") (term "0,0,1,0") (ifseqformula "22"))
      (builtin "One Step Simplification" (formula "33"))
      (rule "ifElseSplit" (formula "33"))
      (branch "if x true"
         (builtin "One Step Simplification" (formula "34"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x false"
         (builtin "One Step Simplification" (formula "34"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "ifElseSplit" (formula "33"))
         (branch "if exc_1 instanceof java.lang.Throwable true"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
            (rule "true_left" (formula "1"))
            (rule "variableDeclaration" (formula "33") (term "1") (newnames "e"))
            (rule "reference_type_cast" (formula "33") (term "1"))
            (branch "Normal Execution (exc_1 instanceof java.lang.Throwable)"
               (builtin "One Step Simplification" (formula "34"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "assignment" (formula "33") (term "1"))
               (builtin "One Step Simplification" (formula "33"))
               (rule "emptyModality" (formula "33") (term "1"))
               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
               (rule "replaceKnownSelect_taclet10_5" (formula "33") (term "0,1,1,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10_6" (formula "33") (term "0,1,1,0,0,0"))
               (rule "replaceKnownSelect_taclet10_5" (formula "33") (term "0,1,1,0,1,0,0"))
               (rule "replaceKnownSelect_taclet10_2" (formula "33") (term "0,0,0,1,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10_6" (formula "33") (term "0,1,1,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10_4" (formula "33") (term "0,0,0,1,0,0,0"))
               (rule "replaceKnownSelect_taclet10_2" (formula "33") (term "0,0,0,1,0,1,0,0"))
               (rule "replaceKnownSelect_taclet10_5" (formula "33") (term "0,1,1,0,1,1,0,0"))
               (rule "replaceKnownSelect_taclet10_5" (formula "33") (term "0,1,1,1,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10_4" (formula "33") (term "0,0,0,1,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10_6" (formula "33") (term "0,1,1,0,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10_6" (formula "33") (term "0,1,1,1,1,1,0,0"))
               (rule "replaceKnownSelect_taclet10_2" (formula "33") (term "0,0,0,1,1,1,1,0,0"))
               (rule "replaceKnownSelect_taclet10_2" (formula "33") (term "0,0,0,1,0,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10_4" (formula "33") (term "0,0,0,1,1,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10_4" (formula "33") (term "0,0,0,1,0,1,1,0,0"))
               (rule "eqSymm" (formula "33") (term "1,0,0,1"))
               (rule "replace_known_right" (formula "33") (term "0,0,1,0,1,0,0") (ifseqformula "24"))
               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "20")) (ifInst ""  (formula "17")) (ifInst ""  (formula "19")) (ifInst ""  (formula "18")))
               (rule "commute_or_2" (formula "33") (term "0"))
               (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "21"))
               (builtin "One Step Simplification" (formula "33"))
               (rule "allRight" (formula "33") (inst "sk=f_0"))
               (rule "allRight" (formula "33") (inst "sk=o_0"))
               (rule "orRight" (formula "33"))
               (rule "orRight" (formula "33"))
               (rule "orRight" (formula "33"))
               (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=f_0_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "12"))
               (rule "eqSymm" (formula "37"))
               (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "34"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "commute_and" (formula "34"))
               (rule "commute_and" (formula "35"))
               (rule "ifthenelse_split" (formula "1") (term "0"))
               (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_getResult«anonHeapFunction» = TRUE) TRUE"
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "orRight" (formula "23"))
                  (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "eqSymm" (formula "39"))
                  (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "24"))
                  (builtin "One Step Simplification" (formula "36"))
                  (rule "false_right" (formula "36"))
                  (rule "replace_known_right" (formula "37") (term "0,1") (ifseqformula "22"))
                  (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "24")))
                  (rule "closeTrue" (formula "37"))
               )
               (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_getResult«anonHeapFunction» = TRUE) FALSE"
                  (rule "close" (formula "38") (ifseqformula "1"))
               )
            )
            (branch "ClassCastException (!(exc_1 instanceof java.lang.Throwable))"
               (builtin "One Step Simplification" (formula "33"))
               (rule "closeTrue" (formula "33"))
            )
         )
         (branch "if exc_1 instanceof java.lang.Throwable false"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Pre (signAndPost)"
      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "22")) (ifInst ""  (formula "16")) (ifInst ""  (formula "22")) (ifInst ""  (formula "13")) (ifInst ""  (formula "16")))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1,1") (ifseqformula "10"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1,0,1") (ifseqformula "10"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1,0,0,1") (ifseqformula "10"))
      (rule "insert_constant_string_value" (formula "23") (term "0,0,0,0") (ifseqformula "1"))
      (rule "wellFormedAnonEQ" (formula "23") (term "0,0,0,1") (ifseqformula "10"))
      (rule "eqSymm" (formula "23") (term "0,0,0"))
      (rule "replace_known_left" (formula "23") (term "0,0,0,0,1") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "21")) (ifInst ""  (formula "9")) (ifInst ""  (formula "12")))
      (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0"))
      (rule "pullOutSelect" (formula "23") (term "0,0,0,0") (inst "selectSK=de_uni_trier_infsec_environment_Environment_inputValues_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "24") (term "0,0,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "23") (term "0,0,0") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "pullOutSelect" (formula "23") (term "0,0") (inst "selectSK=de_uni_trier_infsec_environment_Environment_inputCounter_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "5"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "arrayLengthNotNegative" (formula "6") (term "1"))
      (rule "arrayLengthIsAShort" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "arrayLengthIsAShort" (formula "8") (term "0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "arrayLengthNotNegative" (formula "8") (term "0"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
      (rule "andRight" (formula "24"))
      (branch
         (rule "orRight" (formula "24"))
         (rule "referencedObjectIsCreatedRight" (formula "24") (ifseqformula "23"))
         (rule "close" (formula "24") (ifseqformula "1"))
      )
      (branch
         (rule "orRight" (formula "24"))
         (rule "referencedObjectIsCreatedRight" (formula "24") (ifseqformula "17"))
         (rule "close" (formula "24") (ifseqformula "1"))
      )
   )
)
(branch "Exceptional Post (getResult)"
   (builtin "One Step Simplification" (formula "20"))
   (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "17")) (ifInst ""  (formula "16")) (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "6")) (ifInst ""  (formula "17")) (ifInst ""  (formula "16")) (ifInst ""  (formula "14")) (ifInst ""  (formula "13")) (ifInst ""  (formula "12")) (ifInst ""  (formula "6")))
   (rule "andLeft" (formula "10"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,0") (ifseqformula "10"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "11"))
   (rule "notLeft" (formula "11"))
   (rule "eqSymm" (formula "12") (term "0,0,0"))
   (rule "eqSymm" (formula "13") (term "0,0"))
   (rule "replace_known_right" (formula "13") (term "0,0,1") (ifseqformula "14"))
   (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "14")))
   (rule "replace_known_right" (formula "12") (term "0,0,1") (ifseqformula "14"))
   (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "14")))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,1"))
   (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,1"))
   (rule "add_literals" (formula "13") (term "0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,1"))
   (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,1"))
   (rule "add_zero_right" (formula "12") (term "0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,0"))
   (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,0"))
   (rule "add_zero_right" (formula "12") (term "0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0,0"))
   (rule "applyEq" (formula "12") (term "0,0,0,0") (ifseqformula "7"))
   (rule "eqSymm" (formula "12") (term "0,0,0"))
   (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "7"))
   (rule "eqSymm" (formula "13") (term "0,0"))
   (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "applyEq" (formula "12") (term "1,0,0,1,0") (ifseqformula "6"))
   (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0,0,0") (ifseqformula "6"))
   (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0,0") (ifseqformula "6"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,1"))
   (rule "mul_literals" (formula "12") (term "1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,1"))
   (rule "mul_literals" (formula "13") (term "1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,0"))
   (rule "mul_literals" (formula "12") (term "1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0,0"))
   (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0"))
   (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0"))
   (rule "pullOutSelect" (formula "12") (term "0,1,0,1") (inst "selectSK=de_uni_trier_infsec_eVotingMachine_core_VotingMachine_numberOfCandidates_0"))
   (rule "applyEq" (formula "14") (term "0,1,0,1") (ifseqformula "12"))
   (rule "simplifySelectOfAnonEQ" (formula "12") (ifseqformula "10"))
   (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "20")) (ifInst ""  (formula "2")))
   (rule "applyEqReverse" (formula "13") (term "0,1,0,1") (ifseqformula "12"))
   (rule "applyEqReverse" (formula "14") (term "0,1,0,1") (ifseqformula "12"))
   (rule "hideAuxiliaryEq" (formula "12"))
   (rule "applyEq" (formula "13") (term "0,1,0,1") (ifseqformula "6"))
   (rule "applyEq" (formula "12") (term "0,1,0,1") (ifseqformula "6"))
   (rule "inEqSimp_notLeq" (formula "12") (term "1,0"))
   (rule "mul_literals" (formula "12") (term "1,0,0,1,0"))
   (rule "add_literals" (formula "12") (term "0,0,1,0"))
   (rule "add_zero_left" (formula "12") (term "0,1,0"))
   (rule "nnf_imp2or" (formula "13") (term "0,0"))
   (rule "nnf_imp2or" (formula "12") (term "0,0,0"))
   (rule "nnf_notAnd" (formula "13") (term "0,0,0"))
   (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0"))
   (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0"))
   (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,0"))
   (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0"))
   (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0"))
   (rule "mul_literals" (formula "13") (term "1,0,0,0,0"))
   (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "8"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "14"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "replace_known_left" (formula "12") (term "1,1") (ifseqformula "14"))
   (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
   (rule "true_left" (formula "12"))
   (rule "methodCallThrow" (formula "24") (term "1"))
   (builtin "One Step Simplification" (formula "24"))
   (rule "tryCatchThrow" (formula "24") (term "1"))
   (rule "arrayLengthNotNegative" (formula "6") (term "1"))
   (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "6"))
   (rule "qeq_literals" (formula "13") (term "0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "closeFalse" (formula "13"))
)
(branch "Pre (getResult)"
   (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "15")) (ifInst ""  (formula "14")) (ifInst ""  (formula "12")) (ifInst ""  (formula "11")) (ifInst ""  (formula "10")) (ifInst ""  (formula "6")) (ifInst ""  (formula "15")) (ifInst ""  (formula "14")) (ifInst ""  (formula "12")) (ifInst ""  (formula "11")) (ifInst ""  (formula "10")) (ifInst ""  (formula "6")) (ifInst ""  (formula "1")))
   (rule "orRight" (formula "18"))
   (rule "eqSymm" (formula "19") (term "0"))
   (rule "eqSymm" (formula "18") (term "0,0"))
   (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "19"))
   (builtin "One Step Simplification" (formula "18"))
   (rule "false_right" (formula "18"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1"))
   (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "7"))
   (rule "eqSymm" (formula "18") (term "0"))
   (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "18"))
   (rule "allRight" (formula "18") (inst "sk=j_0"))
   (rule "impRight" (formula "18"))
   (rule "andLeft" (formula "1"))
   (rule "polySimp_addComm1" (formula "2") (term "0"))
   (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "8"))
   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
   (rule "polySimp_elimOne" (formula "2") (term "0"))
   (rule "allLeft" (formula "10") (inst "t=j_0"))
   (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "21"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
   (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "2"))
   (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
   (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
   (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
   (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
   (rule "add_literals" (formula "10") (term "0,0,1"))
   (rule "leq_literals" (formula "10") (term "0,1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "1"))
   (rule "qeq_literals" (formula "10") (term "0"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "closeFalse" (formula "10"))
)
)

}
