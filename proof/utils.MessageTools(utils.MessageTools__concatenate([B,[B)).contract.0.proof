\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Jan 30 10:40:06 CET 2015
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=wdChecks-wdChecks\\:off , JavaCard-JavaCard\\:on , bigint-bigint\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , sequences-sequences\\:on , runtimeExceptions-runtimeExceptions\\:allow , integerSimplificationRules-integerSimplificationRules\\:full , Strings-Strings\\:on , reach-reach\\:on , assertions-assertions\\:on , modelFields-modelFields\\:treatAsAxiom , initialisation-initialisation\\:disableStaticInitialisation , wdOperator-wdOperator\\:L , moreSeqRules-moreSeqRules\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Fri Jan 30 10:40:06 CET 2015
name=de.uni.trier.infsec.utils.MessageTools[de.uni.trier.infsec.utils.MessageTools\\:\\:concatenate([B,[B)].JML behavior operation contract.0
contract=de.uni.trier.infsec.utils.MessageTools[de.uni.trier.infsec.utils.MessageTools\\:\\:concatenate([B,[B)].JML behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "miki" ) (keyVersion "8ba82498c6938c8c5fb8b06e092b978f30dda885"))

(autoModeTime "12454")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "heapAtPre"))
(rule "translateJavaAddInt" (formula "1") (term "0,1,1,0,1,0,1,0,0,0,1,1"))
(rule "translateJavaAddInt" (formula "1") (term "1,1,0,1,0,1,0,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "eqSymm" (formula "5") (term "1,0,0,1,0,1"))
(rule "polySimp_addComm1" (formula "5") (term "1,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "5") (term "0,1,1,0,1,0,1,0,0,0,1"))
(rule "assignment" (formula "5") (term "1"))
(builtin "One Step Simplification" (formula "5"))
(rule "nnf_imp2or" (formula "5") (term "0,1,1,1,0,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "5") (term "1,0,1,1,1,0,1,0,0,0,1"))
(builtin "One Step Simplification" (formula "5"))
(rule "nnf_notAnd" (formula "5") (term "0,0,1,1,1,0,1,0,0,0,1"))
(builtin "One Step Simplification" (formula "5"))
(rule "nnf_notAnd" (formula "5") (term "0,0,0,1,1,1,0,1,0,0,0,1"))
(builtin "One Step Simplification" (formula "5"))
(rule "nnf_notOr" (formula "5") (term "1,0,0,0,1,1,1,0,1,0,0,0,1"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_concatenate,savedHeapBefore_concatenate,_m1Before_concatenate,_m2Before_concatenate"))
(builtin "One Step Simplification" (formula "5"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "out"))
(rule "arrayCreation" (formula "5") (term "1") (inst "#v0=x_arr"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "x_arr"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "dim0"))
(rule "compound_addition_1" (formula "5") (term "1") (inst "#v=x"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "x"))
(rule "compound_addition_2" (formula "5") (term "1") (inst "#v1=x_2") (inst "#v0=x_1"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "x_1"))
(rule "assignment_read_length" (formula "5") (term "1"))
(branch "Normal Execution (_m1 != null)"
   (builtin "One Step Simplification" (formula "6"))
   (builtin "One Step Simplification" (formula "5"))
   (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "5"))
   (builtin "One Step Simplification" (formula "2"))
   (rule "variableDeclarationAssign" (formula "6") (term "1"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_3"))
   (rule "assignment_read_length" (formula "6") (term "1"))
   (branch "Normal Execution (_m2 != null)"
      (builtin "One Step Simplification" (formula "7"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "6"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "assignmentAdditionInt" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "translateJavaAddInt" (formula "7") (term "0,1,0"))
      (rule "assignmentAdditionInt" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "translateJavaAddInt" (formula "7") (term "0,1,0"))
      (rule "polySimp_addComm1" (formula "7") (term "0,1,0"))
      (rule "polySimp_addComm0" (formula "7") (term "0,0,1,0"))
      (rule "ifUnfold" (formula "7") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_5"))
      (rule "less_than_comparison_simple" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,1,0"))
      (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,1,0"))
      (rule "add_zero_right" (formula "7") (term "0,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,1,0"))
      (rule "add_literals" (formula "7") (term "0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0"))
      (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0"))
      (rule "ifSplit" (formula "7"))
      (branch "if x_5 true"
         (builtin "One Step Simplification" (formula "8"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "blockThrow" (formula "8") (term "1"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "throwUnfold" (formula "8") (term "1") (inst "#v0=n"))
         (rule "variableDeclarationAssign" (formula "8") (term "1"))
         (rule "variableDeclaration" (formula "8") (term "1") (newnames "n_2"))
         (rule "arrayLengthIsAShort" (formula "1") (term "0,1,1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "arrayLengthNotNegative" (formula "1") (term "0"))
         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
         (rule "times_zero_1" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "arrayLengthNotNegative" (formula "3") (term "0,1,1"))
         (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
         (rule "qeq_literals" (formula "3") (term "0"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "closeFalse" (formula "3"))
      )
      (branch "if x_5 false"
         (builtin "One Step Simplification" (formula "8"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "inEqSimp_leqRight" (formula "5"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "0,1"))
         (rule "arrayLengthIsAShort" (formula "8") (term "1,0,1,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "arrayLengthNotNegative" (formula "8") (term "1,0,1,0"))
         (rule "arrayLengthIsAShort" (formula "9") (term "1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "arrayLengthNotNegative" (formula "9") (term "1,0,0,1,0"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "10") (term "1") (inst "#v0=x_arr_1"))
         (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_arr_1"))
         (rule "variableDeclarationAssign" (formula "10") (term "1"))
         (rule "variableDeclaration" (formula "10") (term "1") (newnames "length_1"))
         (rule "assignment" (formula "10") (term "1"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "variableDeclaration" (formula "10") (term "1") (newnames "newObject"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "10") (term "1") (inst "#v0=x_arr_2"))
         (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_arr_2"))
         (rule "variableDeclarationAssign" (formula "10") (term "1"))
         (rule "variableDeclaration" (formula "10") (term "1") (newnames "length_2"))
         (rule "assignment" (formula "10") (term "1"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "allocateInstanceWithLength" (formula "10"))
         (builtin "One Step Simplification" (formula "11"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "blockEmpty" (formula "14") (term "1"))
         (rule "assignment" (formula "14") (term "1"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "arrayLengthNotNegative" (formula "1") (term "0"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "0,1"))
         (rule "arrayLengthIsAShort" (formula "1") (term "0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "methodCall" (formula "14") (term "1"))
         (branch "Normal Execution (newObject != null )"
            (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "11")))
            (rule "false_right" (formula "14"))
            (rule "methodBodyExpand" (formula "14") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "assignment_write_attribute_this" (formula "14") (term "1"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "methodCallWithinClass" (formula "14") (term "1"))
            (rule "methodBodyExpand" (formula "14") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "arrayInitialisation" (formula "14") (term "1"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "polySimp_elimSub" (formula "14") (term "2,1,0,1,0"))
            (rule "mul_literals" (formula "14") (term "1,2,1,0,1,0"))
            (rule "polySimp_addComm0" (formula "14") (term "2,1,0,1,0"))
            (rule "applyEq" (formula "14") (term "1,2,1,0,1,0") (ifseqformula "1"))
            (rule "polySimp_addAssoc" (formula "14") (term "2,1,0,1,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,2,1,0,1,0"))
            (rule "add_literals" (formula "14") (term "0,0,2,1,0,1,0"))
            (rule "methodCallEmpty" (formula "14") (term "1"))
            (rule "blockEmpty" (formula "14") (term "1"))
            (rule "assignment_write_attribute_this" (formula "14") (term "1"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "methodCallReturnIgnoreResult" (formula "14") (term "1"))
            (rule "blockEmpty" (formula "14") (term "1"))
            (rule "methodCallReturn" (formula "14") (term "1"))
            (rule "assignment" (formula "14") (term "1"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "methodCallEmpty" (formula "14") (term "1"))
            (rule "blockEmpty" (formula "14") (term "1"))
            (rule "assignment" (formula "14") (term "1"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "blockEmpty" (formula "14") (term "1"))
            (rule "assignment" (formula "14") (term "1"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "variableDeclarationAssign" (formula "14") (term "1"))
            (rule "variableDeclaration" (formula "14") (term "1") (newnames "len"))
            (rule "methodCallWithAssignmentUnfoldArguments" (formula "14") (term "1"))
            (rule "variableDeclarationAssign" (formula "14") (term "1"))
            (rule "variableDeclaration" (formula "14") (term "1") (newnames "var"))
            (rule "assignment_read_length" (formula "14") (term "1"))
            (branch "Normal Execution (_m1 != null)"
               (builtin "One Step Simplification" (formula "15"))
               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "12")))
               (rule "false_right" (formula "14"))
               (builtin "Use Operation Contract" (formula "14") (newnames "heapBefore_intToByteArray,result_0,exc_2,heapAfter_intToByteArray,anon_heap_intToByteArray") (contract "de.uni.trier.infsec.utils.MessageTools[de.uni.trier.infsec.utils.MessageTools::intToByteArray(int)].JML normal_behavior operation contract.0"))
               (branch "Post (intToByteArray)"
                  (builtin "One Step Simplification" (formula "11"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "andLeft" (formula "11"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,1,0") (ifseqformula "11"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,1,0,0,0,1,1,1,0,0,1") (ifseqformula "11"))
                  (rule "andLeft" (formula "12"))
                  (rule "andLeft" (formula "12"))
                  (rule "andLeft" (formula "14"))
                  (rule "andLeft" (formula "14"))
                  (rule "andLeft" (formula "14"))
                  (rule "notLeft" (formula "16"))
                  (rule "andLeft" (formula "15"))
                  (rule "andLeft" (formula "15"))
                  (rule "andLeft" (formula "17"))
                  (rule "notLeft" (formula "16"))
                  (rule "notLeft" (formula "15"))
                  (rule "replace_known_right" (formula "13") (term "0,1") (ifseqformula "17"))
                  (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "18")))
                  (rule "dismissNonSelectedField" (formula "16") (term "0,0,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "16") (term "0,0,1,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0"))
                  (rule "assignment" (formula "23") (term "1"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "blockEmpty" (formula "23") (term "1"))
                  (rule "variableDeclarationAssign" (formula "23") (term "1"))
                  (rule "variableDeclaration" (formula "23") (term "1") (newnames "j"))
                  (rule "assignment" (formula "23") (term "1"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "variableDeclarationAssign" (formula "23") (term "1"))
                  (rule "variableDeclaration" (formula "23") (term "1") (newnames "i"))
                  (rule "assignment" (formula "23") (term "1"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=java_lang_Object_created__0"))
                  (rule "simplifySelectOfMemset" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "orRight" (formula "17"))
                  (rule "nnf_imp2or" (formula "16") (term "0"))
                  (rule "hideAuxiliaryEqConcrete2" (formula "19"))
                  (rule "nnf_notAnd" (formula "16") (term "1,0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "nnf_notAnd" (formula "16") (term "0,0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "nnf_notOr" (formula "16") (term "1,0,0,0"))
                  (rule "nnf_notOr" (formula "16") (term "1,1,0,0,0"))
                  (rule "commute_or" (formula "16") (term "1,0"))
                  (rule "commute_or_2" (formula "16") (term "0,0"))
                  (rule "commute_or_2" (formula "16") (term "0"))
                  (rule "commute_or" (formula "16") (term "0,0,0"))
                  (rule "shift_paren_or" (formula "16") (term "0,0"))
                  (rule "commute_or_2" (formula "16") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "cnf_rightDist" (formula "16") (term "0"))
                  (rule "distr_forallAnd" (formula "16"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "castDel" (formula "16") (term "1,0,1,0"))
                  (rule "castDel" (formula "16") (term "0,0,0,0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "commute_or" (formula "16") (term "0"))
                  (rule "cnf_rightDist" (formula "16") (term "0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "shift_paren_or" (formula "16") (term "0"))
                  (rule "commute_or" (formula "16") (term "0,0"))
                  (rule "for_to_while" (formula "24") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
                  (rule "assignment" (formula "24") (term "1"))
                  (builtin "One Step Simplification" (formula "24"))
                  (builtin "Loop Invariant" (formula "24") (newnames "variant,b,heapBefore_LOOP,iBefore_LOOP,jBefore_LOOP,i_0,j_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
                  (branch "Invariant Initially Valid"
                     (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "19")) (ifInst ""  (formula "21")) (ifInst ""  (formula "22")) (ifInst ""  (formula "23")) (ifInst ""  (formula "2")) (ifInst ""  (formula "15")) (ifInst ""  (formula "14")))
                     (rule "wellFormedAnonEQ" (formula "24") (term "1") (ifseqformula "11"))
                     (rule "wellFormedStorePrimitive" (formula "24") (term "0,1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "1,1,0,0,0,1,1,1,1,1,0") (ifseqformula "11"))
                     (rule "translateJavaAddInt" (formula "24") (term "0,1,0,1,1,1,1,0"))
                     (rule "translateJavaAddInt" (formula "24") (term "1,0,1,1,1,1,0"))
                     (rule "leq_literals" (formula "24") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "10")))
                     (rule "leq_literals" (formula "24") (term "0,0"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "polySimp_addComm1" (formula "24") (term "1,0,1,1,0"))
                     (rule "polySimp_addComm0" (formula "24") (term "0,1,0,1,1,0"))
                     (rule "replace_known_left" (formula "24") (term "0,1,1,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "dismissNonSelectedField" (formula "24") (term "0,0,1,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "24") (term "0,1,0"))
                     (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "24") (term "0,0,0") (ifseqformula "14"))
                     (rule "qeq_literals" (formula "24") (term "0,0"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,0,0"))
                     (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "wellFormedMemsetArrayPrimitive" (formula "24") (term "1"))
                     (rule "wellFormedStorePrimitive" (formula "24") (term "1"))
                     (rule "wellFormedStorePrimitive" (formula "24") (term "1"))
                     (rule "wellFormedStorePrimitive" (formula "24") (term "1"))
                     (rule "wellFormedCreate" (formula "24") (term "1"))
                     (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "allRight" (formula "24") (inst "sk=o_12"))
                     (rule "impRight" (formula "24"))
                     (rule "notRight" (formula "25"))
                     (rule "andLeft" (formula "2"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "2"))
                     (rule "notLeft" (formula "4"))
                     (rule "notLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=java_lang_Object_created__13"))
                     (rule "simplifySelectOfMemset" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "arrayLengthIsAShort" (formula "15") (term "0"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "arrayLengthNotNegative" (formula "15") (term "0"))
                     (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                     (rule "qeq_literals" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "instAll" (formula "18") (term "0") (ifseqformula "17") (userinteraction))
                     (rule "replaceKnownSelect_taclet0000100_6" (formula "1") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0000100_11" (formula "1") (term "0,1"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "19"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")) (ifInst ""  (formula "2")) (ifInst ""  (formula "21")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Body Preserves Invariant"
                     (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "21")) (ifInst ""  (formula "23")) (ifInst ""  (formula "24")) (ifInst ""  (formula "25")) (ifInst ""  (formula "2")) (ifInst ""  (formula "15")) (ifInst ""  (formula "14")))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "0,1,1,0,0,0,1,1,1,1,1,1") (ifseqformula "11"))
                     (rule "translateJavaAddInt" (formula "18") (term "1,0,1,1,1,1"))
                     (rule "translateJavaAddInt" (formula "26") (term "1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1"))
                     (rule "translateJavaAddInt" (formula "18") (term "0,1,0,1,1,1,1"))
                     (rule "translateJavaAddInt" (formula "26") (term "0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1"))
                     (rule "andLeft" (formula "18"))
                     (rule "impRight" (formula "27"))
                     (rule "andLeft" (formula "20"))
                     (rule "andLeft" (formula "21"))
                     (rule "andLeft" (formula "22"))
                     (rule "andLeft" (formula "23"))
                     (rule "andLeft" (formula "24"))
                     (rule "eqSymm" (formula "33") (term "1,0,0,1,1,1,0,1"))
                     (rule "polySimp_addComm1" (formula "33") (term "1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                     (rule "polySimp_addComm1" (formula "23") (term "1"))
                     (rule "polySimp_addComm0" (formula "33") (term "0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                     (rule "polySimp_addComm0" (formula "23") (term "0,1"))
                     (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,1,1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "19"))
                     (rule "inEqSimp_commuteLeq" (formula "32") (term "0,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,1,1,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "32") (term "0,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "32") (term "0,1,1,1,1,1,1,1,0,1,1,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "20"))
                     (rule "inEqSimp_commuteLeq" (formula "21"))
                     (rule "inEqSimp_commuteLeq" (formula "22"))
                     (rule "variableDeclarationAssign" (formula "1") (term "1"))
                     (rule "variableDeclarationAssign" (formula "32") (term "1"))
                     (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_3"))
                     (rule "variableDeclaration" (formula "32") (term "1") (newnames "exc_5"))
                     (rule "assignment" (formula "32") (term "1"))
                     (builtin "One Step Simplification" (formula "32"))
                     (rule "variableDeclaration" (formula "32") (term "1") (newnames "thrownExc_2"))
                     (rule "applyEq" (formula "22") (term "1") (ifseqformula "23"))
                     (rule "applyEq" (formula "21") (term "0") (ifseqformula "15"))
                     (rule "inEqSimp_commuteGeq" (formula "21"))
                     (rule "applyEq" (formula "20") (term "0") (ifseqformula "23"))
                     (rule "applyEqRigid" (formula "31") (term "0,1,0,1,1,0,0") (ifseqformula "22"))
                     (rule "applyEq" (formula "21") (term "0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "0,1,0"))
                     (rule "mul_literals" (formula "21") (term "0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "21") (term "0,0,0"))
                     (rule "applyEq" (formula "20") (term "0") (ifseqformula "22"))
                     (rule "blockThrow" (formula "31") (term "1,0,0,1"))
                     (rule "blockThrow" (formula "31") (term "1,0,0,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                     (rule "polySimp_elimOne" (formula "21") (term "0"))
                     (rule "boxToDiamond" (formula "1") (term "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "nnf_imp2or" (formula "22") (term "0"))
                     (rule "nnf_notAnd" (formula "22") (term "1,0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "nnf_notAnd" (formula "22") (term "0,0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "nnf_notAnd" (formula "22") (term "0,0,0"))
                     (rule "nnf_notOr" (formula "22") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "22") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "nnf_notOr" (formula "22") (term "1,1,0,0,0"))
                     (rule "nnf_notOr" (formula "22") (term "0,1,1,0,0,0"))
                     (rule "nnf_imp2or" (formula "31") (term "0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                     (rule "nnf_notAnd" (formula "31") (term "1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "nnf_notAnd" (formula "31") (term "0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "nnf_notAnd" (formula "31") (term "0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                     (rule "nnf_notAnd" (formula "31") (term "0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "nnf_notOr" (formula "31") (term "1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                     (rule "commute_or" (formula "22") (term "1,0"))
                     (rule "commute_or_2" (formula "22") (term "0,0"))
                     (rule "commute_or_2" (formula "22") (term "0"))
                     (rule "commute_or_2" (formula "22") (term "0,0,0"))
                     (rule "shift_paren_or" (formula "22") (term "0,0"))
                     (rule "commute_or_2" (formula "22") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "cnf_rightDist" (formula "22") (term "0"))
                     (rule "distr_forallAnd" (formula "22"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "castDel" (formula "22") (term "0,0,0,0,0"))
                     (rule "castDel" (formula "22") (term "1,0,1,0"))
                     (rule "castDel" (formula "22") (term "0,1,0,0,0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "commute_or" (formula "22") (term "0"))
                     (rule "cnf_rightDist" (formula "22") (term "0"))
                     (rule "distr_forallAnd" (formula "22"))
                     (rule "andLeft" (formula "22"))
                     (rule "commute_or" (formula "23") (term "0"))
                     (rule "cnf_rightDist" (formula "22") (term "0"))
                     (rule "distr_forallAnd" (formula "22"))
                     (rule "andLeft" (formula "22"))
                     (rule "commute_or" (formula "23") (term "0"))
                     (rule "commute_or" (formula "24") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "24") (term "0,0,0"))
                     (rule "commute_or" (formula "22") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "22") (term "0,0,0"))
                     (rule "commute_or" (formula "23") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "23") (term "0,0,0"))
                     (rule "compound_less_than_comparison_2" (formula "25") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
                     (rule "variableDeclarationAssign" (formula "25") (term "1"))
                     (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_40"))
                     (rule "assignment" (formula "25") (term "1"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "variableDeclarationAssign" (formula "25") (term "1"))
                     (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_41"))
                     (rule "assignment_read_length" (formula "25") (term "1"))
                     (branch "Normal Execution (len != null)"
                        (builtin "One Step Simplification" (formula "26"))
                        (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "29")))
                        (rule "false_right" (formula "25"))
                        (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "14"))
                        (rule "less_than_comparison_simple" (formula "25") (term "1"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,1,0"))
                        (rule "mul_literals" (formula "25") (term "1,0,0,0,0,1,0"))
                        (rule "add_literals" (formula "25") (term "0,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,1,0"))
                        (rule "mul_literals" (formula "25") (term "1,0,0,1,0"))
                        (rule "methodCallEmpty" (formula "25") (term "1"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "emptyModality" (formula "25") (term "1"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "notRight" (formula "25"))
                        (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "1"))
                        (rule "leq_literals" (formula "20") (term "0"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "arrayLengthIsAShort" (formula "15") (term "0"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "arrayLengthNotNegative" (formula "15") (term "0"))
                        (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                        (rule "qeq_literals" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "ifUnfold" (formula "32") (term "1") (inst "#boolv=x"))
                        (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_42"))
                        (rule "compound_less_than_comparison_2" (formula "32") (term "1") (inst "#v1=x_44") (inst "#v0=x_43"))
                        (rule "variableDeclarationAssign" (formula "32") (term "1"))
                        (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_43"))
                        (rule "assignment" (formula "32") (term "1"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "variableDeclarationAssign" (formula "32") (term "1"))
                        (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_44"))
                        (rule "assignment_read_length" (formula "32") (term "1"))
                        (branch "Normal Execution (len != null)"
                           (builtin "One Step Simplification" (formula "33"))
                           (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "27")))
                           (rule "false_right" (formula "32"))
                           (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "15"))
                           (rule "less_than_comparison_simple" (formula "32") (term "1"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "1,0,0,0,0,1,0"))
                           (rule "add_literals" (formula "32") (term "0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "1,0,0,1,0"))
                           (rule "replace_known_left" (formula "32") (term "0,0,1,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "ifSplit" (formula "32"))
                           (branch "if x_42 true"
                              (builtin "One Step Simplification" (formula "33"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "eval_order_array_access2" (formula "32") (term "1") (inst "#v0=x") (inst "#ar1=x_arr"))
                              (rule "variableDeclarationAssign" (formula "32") (term "1"))
                              (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_arr_9"))
                              (rule "assignment" (formula "32") (term "1"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "variableDeclarationAssign" (formula "32") (term "1"))
                              (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_45"))
                              (rule "postincrement_assignment" (formula "32") (term "1") (inst "#v=x_46"))
                              (rule "variableDeclarationAssign" (formula "32") (term "1"))
                              (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_46"))
                              (rule "assignment" (formula "32") (term "1"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "compound_int_cast_expression" (formula "32") (term "1") (inst "#v=x_47"))
                              (rule "variableDeclarationAssign" (formula "32") (term "1"))
                              (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_47"))
                              (rule "remove_parentheses_right" (formula "32") (term "1"))
                              (rule "assignmentAdditionInt" (formula "32") (term "1"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "translateJavaAddInt" (formula "32") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "32") (term "0,1,0"))
                              (rule "widening_identity_cast_5" (formula "32") (term "1"))
                              (rule "assignment" (formula "32") (term "1"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "assignment" (formula "32") (term "1"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "eval_order_array_access3" (formula "32") (term "1") (inst "#v1=x_47") (inst "#v2=x_46") (inst "#v0=x_arr_10"))
                              (rule "variableDeclarationAssign" (formula "32") (term "1"))
                              (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_arr_10"))
                              (rule "assignment" (formula "32") (term "1"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "variableDeclarationAssign" (formula "32") (term "1"))
                              (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_48"))
                              (rule "assignment" (formula "32") (term "1"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "ifUnfold" (formula "32") (term "1") (inst "#boolv=x_49"))
                              (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_49"))
                              (rule "compound_assignment_5_nonsimple" (formula "32") (term "1"))
                              (rule "ifElseUnfold" (formula "32") (term "1") (inst "#boolv=x_50"))
                              (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_50"))
                              (rule "compound_less_equal_than_comparison_1" (formula "32") (term "1") (inst "#v0=x_51"))
                              (rule "variableDeclarationAssign" (formula "32") (term "1"))
                              (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_51"))
                              (rule "eval_order_array_access6" (formula "32") (term "1") (inst "#v0=x_arr_11"))
                              (rule "variableDeclarationAssign" (formula "32") (term "1"))
                              (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_arr_11"))
                              (rule "remove_parentheses_right" (formula "32") (term "1"))
                              (rule "assignment" (formula "32") (term "1"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "assignment_read_length" (formula "32") (term "1"))
                              (branch "Normal Execution (x_arr_11 != null)"
                                 (builtin "One Step Simplification" (formula "33"))
                                 (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "29")))
                                 (rule "false_right" (formula "32"))
                                 (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "2"))
                                 (rule "less_equal_than_comparison_simple" (formula "32") (term "1"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "inEqSimp_homoInEq0" (formula "32") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "32") (term "0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "0,0,0,1,0"))
                                 (rule "ifElseSplit" (formula "32"))
                                 (branch "if x_50 true"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "ifEnterThen" (formula "33") (term "1"))
                                    (rule "assignment" (formula "33") (term "1"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "blockThrow" (formula "33") (term "1"))
                                    (rule "inEqSimp_antiSymm" (formula "21") (ifseqformula "1"))
                                    (rule "applyEq" (formula "7") (term "0") (ifseqformula "21"))
                                    (rule "inEqSimp_homoInEq1" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,1,0"))
                                    (rule "mul_literals" (formula "7") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "7") (term "0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0"))
                                    (rule "add_zero_right" (formula "7") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                    (rule "add_literals" (formula "7") (term "0,0"))
                                    (rule "add_zero_left" (formula "7") (term "0"))
                                    (rule "applyEq" (formula "6") (term "0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "18") (term "1,2,1,0,0,1,0") (ifseqformula "21"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "2,1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,2,1,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "2,1,0,0,1,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,2,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,2,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "18") (term "2,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "2,1,0,0,1,0"))
                                    (rule "add_literals" (formula "18") (term "0,2,1,0,0,1,0"))
                                    (rule "applyEq" (formula "24") (term "1,2,1,0,0,0,1,0") (ifseqformula "21"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "2,1,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,2,1,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "2,1,0,0,0,1,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,2,1,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,2,1,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "24") (term "2,1,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "2,1,0,0,0,1,0"))
                                    (rule "add_literals" (formula "24") (term "0,2,1,0,0,0,1,0"))
                                    (rule "applyEq" (formula "13") (term "1,2,1,0,0,0") (ifseqformula "21"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "2,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,2,1,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "13") (term "2,1,0,0,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,2,1,0,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,2,1,0,0,0"))
                                    (rule "add_zero_right" (formula "13") (term "2,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "2,1,0,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,2,1,0,0,0"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "21"))
                                    (rule "inEqSimp_homoInEq0" (formula "1"))
                                    (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,0"))
                                    (rule "times_zero_1" (formula "1") (term "0"))
                                    (rule "qeq_literals" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
                                    (rule "inEqSimp_homoInEq1" (formula "21"))
                                    (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
                                    (rule "add_literals" (formula "21") (term "1,0"))
                                    (rule "times_zero_1" (formula "21") (term "0"))
                                    (rule "leq_literals" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "20"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "1"))
                                    (rule "add_literals" (formula "2") (term "1,1,1"))
                                    (rule "times_zero_1" (formula "2") (term "1,1"))
                                    (rule "add_zero_right" (formula "2") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                    (rule "add_literals" (formula "2") (term "0,1"))
                                    (rule "add_zero_left" (formula "2") (term "1"))
                                    (rule "inEqSimp_invertInEq0" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                    (rule "mul_literals" (formula "6") (term "1"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                                    (rule "times_zero_1" (formula "4") (term "0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                    (rule "mul_literals" (formula "4") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "4"))
                                    (rule "leq_literals" (formula "19") (term "0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "4") (term "0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                                 (branch "if x_50 false"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "inEqSimp_leqRight" (formula "25"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                    (rule "mul_literals" (formula "1") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                                    (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0"))
                                    (rule "qeq_literals" (formula "21") (term "0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "less_than_comparison_simple" (formula "32") (term "1"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,0"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "32") (term "0,0,0,0,1,0"))
                                    (rule "blockEmpty" (formula "32") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,1,0"))
                                    (rule "mul_literals" (formula "32") (term "1,0,0,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0,1,0") (ifseqformula "20"))
                                    (rule "qeq_literals" (formula "32") (term "0,0,0,1,0"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "ifSplit" (formula "32"))
                                    (branch "if x_49 true"
                                       (builtin "One Step Simplification" (formula "33"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "if x_49 false"
                                       (builtin "One Step Simplification" (formula "33"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "variableDeclarationAssign" (formula "32") (term "1"))
                                       (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_52"))
                                       (rule "assignment_array2" (formula "32") (term "1"))
                                       (branch "Normal Execution (len != null)"
                                          (builtin "One Step Simplification" (formula "33"))
                                          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "27")))
                                          (rule "orRight" (formula "32"))
                                          (rule "inEqSimp_ltRight" (formula "33"))
                                          (rule "times_zero_1" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "32"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "pullOutSelect" (formula "33") (term "0,1,0") (inst "selectSK=arr_9"))
                                          (rule "simplifySelectOfAnon" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "15"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "1,0,1,0,0") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                          (rule "replaceKnownSelect_taclet000100_0" (formula "1") (term "0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet000100_5" (formula "1") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "34") (term "0,1,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "assignment_to_primitive_array_component" (formula "33") (term "1"))
                                          (branch "Normal Execution (x_arr_10 != null)"
                                             (builtin "One Step Simplification" (formula "34"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")) (ifInst ""  (formula "22")))
                                             (rule "inEqSimp_ltToLeq" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "18"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "5"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "preincrement" (formula "32") (term "1"))
                                             (rule "compound_int_cast_expression" (formula "32") (term "1") (inst "#v=x"))
                                             (rule "variableDeclarationAssign" (formula "32") (term "1"))
                                             (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_53"))
                                             (rule "remove_parentheses_right" (formula "32") (term "1"))
                                             (rule "assignmentAdditionInt" (formula "32") (term "1"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "translateJavaAddInt" (formula "32") (term "0,1,0"))
                                             (rule "polySimp_addComm0" (formula "32") (term "0,1,0"))
                                             (rule "widening_identity_cast_5" (formula "32") (term "1"))
                                             (rule "assignment" (formula "32") (term "1"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "tryEmpty" (formula "32") (term "1"))
                                             (rule "methodCallEmpty" (formula "32") (term "1"))
                                             (rule "emptyModality" (formula "32") (term "1"))
                                             (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "27")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")) (ifInst ""  (formula "4")) (ifInst ""  (formula "17")) (ifInst ""  (formula "16")) (ifInst ""  (formula "3")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,1,1,0,0,0,1") (ifseqformula "13"))
                                             (rule "eqSymm" (formula "32") (term "1,0,0,1"))
                                             (rule "dismissNonSelectedField" (formula "32") (term "0,0,1,1,0,0,0,1,1,1,1,0"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,0,1,1,0,0,0,1,1,1,1,0") (ifseqformula "13"))
                                             (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,1,1,0,0,0,1"))
                                             (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0,1,1,0,0,0,1,1,1,1,0"))
                                             (rule "applyEq" (formula "32") (term "0,0,1,1,1,0") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0,1,1,1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,0,1,0,0,1,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,1,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,1,1,1,0"))
                                             (rule "add_literals" (formula "32") (term "0,0,0,0,0,1,1,1,0"))
                                             (rule "applyEq" (formula "32") (term "0,0,1,1,0") (ifseqformula "16"))
                                             (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,1,0"))
                                             (rule "mul_literals" (formula "32") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0,0,1,1,0"))
                                             (rule "add_literals" (formula "32") (term "0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0"))
                                             (rule "mul_literals" (formula "32") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,1,0"))
                                             (rule "mul_literals" (formula "32") (term "1,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0,1,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "0,0,1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "0,0,1,1,1,0"))
                                             (rule "replace_known_left" (formula "32") (term "0,1,1,1,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,1,1,0"))
                                             (rule "mul_literals" (formula "32") (term "1,0,1,1,0"))
                                             (rule "replace_known_left" (formula "32") (term "0,1,1,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "inEqSimp_subsumption1" (formula "32") (term "0,0") (ifseqformula "20"))
                                             (rule "leq_literals" (formula "32") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "inEqSimp_subsumption1" (formula "32") (term "0,0") (ifseqformula "20"))
                                             (rule "leq_literals" (formula "32") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "nnf_notOr" (formula "32") (term "1,1,0,0,0,0"))
                                             (rule "nnf_notOr" (formula "32") (term "1,1,0,0,0,1"))
                                             (rule "nnf_notOr" (formula "32") (term "0,1,1,0,0,0,0"))
                                             (rule "andRight" (formula "32"))
                                             (branch "Case 1"
                                                (rule "allRight" (formula "32") (inst "sk=o_11"))
                                                (rule "orRight" (formula "32"))
                                                (rule "orRight" (formula "33"))
                                                (rule "orRight" (formula "32"))
                                                (rule "orRight" (formula "32"))
                                                (rule "orRight" (formula "32"))
                                                (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "pullOutSelect" (formula "34") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__12"))
                                                (rule "simplifySelectOfMemset" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "1") (term "0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "33"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "35") (term "0,0,0,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "35"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "commute_and" (formula "34"))
                                                (rule "cut_direct" (formula "34") (term "0,0"))
                                                (branch "CUT: o_11.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "false_right" (formula "35"))
                                                   (rule "instAll" (formula "33") (term "0") (ifseqformula "25") (userinteraction))
                                                   (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "34"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "35")) (ifInst ""  (formula "36")) (ifInst ""  (formula "2")))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "CUT: o_11.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "notRight" (formula "35"))
                                                   (rule "instAll" (formula "33") (term "0") (ifseqformula "24") (userinteraction))
                                                   (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "35"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")) (ifInst ""  (formula "34")) (ifInst ""  (formula "37")) (ifInst ""  (formula "2")))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                             (branch
                                                (rule "allRight" (formula "32") (inst "sk=f_5"))
                                                (rule "allRight" (formula "32") (inst "sk=o_10"))
                                                (rule "orRight" (formula "32"))
                                                (rule "orRight" (formula "32"))
                                                (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=f_5_0"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "35"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "33"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfAnon" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "pullOutSelect" (formula "34") (term "0,0,0,1") (inst "selectSK=java_lang_Object_created__11"))
                                                (rule "applyEq" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "simplifySelectOfMemset" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "1") (term "0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "34"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "35") (term "0,0,0,1") (ifseqformula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=f_5_1"))
                                                (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                (rule "replaceKnownSelect_taclet1001100001000100_11" (formula "1") (term "0,0,1,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1001100001000100_16" (formula "1") (term "0,0,1,0,0"))
                                                (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_5_2"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "35"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfMemset" (formula "1"))
                                                (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "35"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "35"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "35"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "shift_paren_and" (formula "35"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch "¬o_10 = null ∧ ¬o_10.<created> = TRUE TRUE"
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "26"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                                   (rule "replace_known_right" (formula "36") (term "0,1,0") (ifseqformula "27"))
                                                   (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "26")))
                                                   (rule "notRight" (formula "36"))
                                                   (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                                (branch "¬o_10 = null ∧ ¬o_10.<created> = TRUE FALSE"
                                                   (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "26"))
                                                   (builtin "One Step Simplification" (formula "35"))
                                                   (rule "false_right" (formula "35"))
                                                   (rule "ifthenelse_split" (formula "1") (term "0"))
                                                   (branch " ¬o_10 = null ∧ ¬( o_10.<created> = TRUE ∨ o_10.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "orRight" (formula "26"))
                                                      (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "eqSymm" (formula "37"))
                                                      (rule "replace_known_right" (formula "28") (term "0,1") (ifseqformula "25"))
                                                      (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "27")))
                                                      (rule "closeTrue" (formula "28"))
                                                   )
                                                   (branch " ¬o_10 = null ∧ ¬( o_10.<created> = TRUE ∨ o_10.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                      (rule "close" (formula "36") (ifseqformula "1"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "Null Reference (x_arr_10 = null)"
                                             (builtin "One Step Simplification" (formula "34"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "Index Out of Bounds (x_arr_10 != null, but x_48 Out of Bounds!)"
                                             (builtin "One Step Simplification" (formula "34"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                             (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                             (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "18"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "21"))
                                             (rule "qeq_literals" (formula "1") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                             (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0"))
                                             (rule "add_zero_right" (formula "2") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0"))
                                             (rule "add_literals" (formula "2") (term "0"))
                                             (rule "leq_literals" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                       (branch "Null Reference (len = null)"
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Index Out of Bounds (len != null, but i Out of Bounds!)"
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                          (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "17"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (term "0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "1") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "21") (term "0"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "closeFalse" (formula "21"))
                                       )
                                    )
                                 )
                              )
                              (branch "Null Reference (x_arr_11 = null)"
                                 (builtin "One Step Simplification" (formula "33"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "if x_42 false"
                              (builtin "One Step Simplification" (formula "33"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Null Reference (len = null)"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "Null Reference (len = null)"
                        (builtin "One Step Simplification" (formula "26"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Use Case"
                     (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "21")) (ifInst ""  (formula "23")) (ifInst ""  (formula "24")) (ifInst ""  (formula "25")) (ifInst ""  (formula "2")) (ifInst ""  (formula "15")) (ifInst ""  (formula "14")))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "0,1,1,0,0,0,1,1,1,1,1,1") (ifseqformula "11"))
                     (rule "translateJavaAddInt" (formula "18") (term "1,0,1,1,1,1"))
                     (rule "translateJavaAddInt" (formula "18") (term "0,1,0,1,1,1,1"))
                     (rule "andLeft" (formula "18"))
                     (rule "andLeft" (formula "19"))
                     (rule "andLeft" (formula "20"))
                     (rule "andLeft" (formula "21"))
                     (rule "andLeft" (formula "22"))
                     (rule "andLeft" (formula "23"))
                     (rule "polySimp_addComm1" (formula "22") (term "1"))
                     (rule "polySimp_addComm0" (formula "22") (term "0,1"))
                     (rule "dismissNonSelectedField" (formula "23") (term "0,0,0,1,1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "18"))
                     (rule "inEqSimp_commuteLeq" (formula "19"))
                     (rule "inEqSimp_commuteLeq" (formula "20"))
                     (rule "inEqSimp_commuteLeq" (formula "21"))
                     (rule "variableDeclarationAssign" (formula "31") (term "1"))
                     (rule "variableDeclaration" (formula "31") (term "1") (newnames "b_1"))
                     (rule "applyEq" (formula "21") (term "1") (ifseqformula "22"))
                     (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "0,1,0"))
                     (rule "mul_literals" (formula "21") (term "0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "21") (term "0,0,0"))
                     (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "22"))
                     (rule "applyEq" (formula "19") (term "0") (ifseqformula "14"))
                     (rule "inEqSimp_commuteGeq" (formula "19"))
                     (rule "applyEqRigid" (formula "30") (term "0,1,0,1,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "19") (term "0") (ifseqformula "21"))
                     (rule "blockEmpty" (formula "30") (term "1,0,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                     (rule "polySimp_elimOne" (formula "20") (term "0"))
                     (rule "nnf_imp2or" (formula "22") (term "0"))
                     (rule "nnf_notAnd" (formula "22") (term "0,0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "nnf_notAnd" (formula "22") (term "1,0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "nnf_notAnd" (formula "22") (term "0,0,0"))
                     (rule "nnf_notOr" (formula "22") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "22") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "nnf_notOr" (formula "22") (term "1,1,0,0,0"))
                     (rule "nnf_notOr" (formula "22") (term "0,1,1,0,0,0"))
                     (rule "commute_or" (formula "22") (term "1,0"))
                     (rule "commute_or_2" (formula "22") (term "0,0"))
                     (rule "commute_or_2" (formula "22") (term "0"))
                     (rule "commute_or_2" (formula "22") (term "0,0,0"))
                     (rule "shift_paren_or" (formula "22") (term "0,0"))
                     (rule "commute_or_2" (formula "22") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "cnf_rightDist" (formula "22") (term "0"))
                     (rule "distr_forallAnd" (formula "22"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "castDel" (formula "22") (term "1,0,1,0"))
                     (rule "castDel" (formula "22") (term "0,0,0,0,0"))
                     (rule "castDel" (formula "22") (term "0,1,0,0,0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "commute_or" (formula "22") (term "0"))
                     (rule "cnf_rightDist" (formula "22") (term "0"))
                     (rule "distr_forallAnd" (formula "22"))
                     (rule "andLeft" (formula "22"))
                     (rule "commute_or" (formula "23") (term "0"))
                     (rule "cnf_rightDist" (formula "22") (term "0"))
                     (rule "distr_forallAnd" (formula "22"))
                     (rule "andLeft" (formula "22"))
                     (rule "commute_or" (formula "23") (term "0"))
                     (rule "commute_or" (formula "24") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "24") (term "0,0,0"))
                     (rule "commute_or" (formula "22") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "22") (term "0,0,0"))
                     (rule "commute_or" (formula "23") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "23") (term "0,0,0"))
                     (rule "compound_less_than_comparison_2" (formula "32") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
                     (rule "variableDeclarationAssign" (formula "32") (term "1"))
                     (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_6"))
                     (rule "assignment" (formula "32") (term "1"))
                     (builtin "One Step Simplification" (formula "32"))
                     (rule "variableDeclarationAssign" (formula "32") (term "1"))
                     (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_7"))
                     (rule "assignment_read_length" (formula "32") (term "1"))
                     (branch "Normal Execution (len != null)"
                        (builtin "One Step Simplification" (formula "33"))
                        (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "27")))
                        (rule "false_right" (formula "32"))
                        (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "14"))
                        (rule "less_than_comparison_simple" (formula "32") (term "1"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,0"))
                        (rule "mul_literals" (formula "32") (term "1,0,0,0,0,1,0"))
                        (rule "add_literals" (formula "32") (term "0,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,1,0"))
                        (rule "mul_literals" (formula "32") (term "1,0,0,1,0"))
                        (rule "methodCallEmpty" (formula "32") (term "1"))
                        (rule "emptyModality" (formula "32") (term "1"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "impRight" (formula "32"))
                        (rule "notLeft" (formula "1"))
                        (rule "inEqSimp_leqRight" (formula "25"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
                        (rule "leq_literals" (formula "19") (term "0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "19"))
                        (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "1"))
                        (rule "leq_literals" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "applyEqRigid" (formula "32") (term "0,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "applyEq" (formula "31") (term "0,1,0,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "20") (term "1") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "19") (term "1,0,1") (ifseqformula "1"))
                        (rule "add_literals" (formula "19") (term "0,1"))
                        (rule "add_zero_left" (formula "19") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "19"))
                        (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                        (rule "add_literals" (formula "6") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0"))
                        (rule "qeq_literals" (formula "6") (term "0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "for_to_while" (formula "30") (term "1") (inst "#outerLabel=_label3") (inst "#innerLabel=_label2"))
                        (rule "assignment" (formula "30") (term "1"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "arrayLengthIsAShort" (formula "14") (term "0"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "arrayLengthNotNegative" (formula "14") (term "0"))
                        (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                        (rule "qeq_literals" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (builtin "Loop Invariant" (formula "30") (newnames "variant_0,b_0,heapBefore_LOOP_0,iBefore_LOOP_0,jBefore_LOOP_0,i_1,j_1,heap_After_LOOP_0,anon_heap_LOOP_0,o,f"))
                        (branch "Invariant Initially Valid"
                           (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "28")) (ifInst ""  (formula "27")) (ifInst ""  (formula "28")) (ifInst ""  (formula "29")) (ifInst ""  (formula "3")) (ifInst ""  (formula "15")))
                           (rule "wellFormedAnon" (formula "30") (term "1"))
                           (rule "wellFormedAnonEQ" (formula "30") (term "0,1") (ifseqformula "11"))
                           (rule "wellFormedStorePrimitive" (formula "30") (term "0,0,1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,1,1,0,0,0,1,1,1,1,1,1,0") (ifseqformula "11"))
                           (rule "translateJavaAddInt" (formula "30") (term "1,0,1,1,1,1,0"))
                           (rule "translateJavaAddInt" (formula "30") (term "1,0,1,1,1,1,1,0"))
                           (rule "translateJavaAddInt" (formula "30") (term "1,0,1,1,0"))
                           (rule "translateJavaAddInt" (formula "30") (term "0,1,0,1,1,1,1,0"))
                           (rule "leq_literals" (formula "30") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "10")) (ifInst ""  (formula "17")))
                           (rule "add_zero_left" (formula "30") (term "1,0,1,1,1,1,0"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "leq_literals" (formula "30") (term "0,0"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "polySimp_addComm1" (formula "30") (term "1,0,1,1,0"))
                           (rule "polySimp_addComm0" (formula "30") (term "1,0,0"))
                           (rule "polySimp_addComm0" (formula "30") (term "0,1,0,1,1,0"))
                           (rule "replace_known_left" (formula "30") (term "0,1,1,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "dismissNonSelectedField" (formula "30") (term "0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "30") (term "0,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "30") (term "0,0"))
                           (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                           (rule "add_literals" (formula "30") (term "0,0,0,0"))
                           (rule "add_zero_left" (formula "30") (term "0,0,0"))
                           (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "0,1,0,0,0"))
                           (rule "mul_literals" (formula "30") (term "0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0"))
                           (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                           (rule "add_zero_left" (formula "30") (term "0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "0,0,0"))
                           (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "18"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "wellFormedMemsetArrayPrimitive" (formula "30") (term "1"))
                           (rule "wellFormedStorePrimitive" (formula "30") (term "1"))
                           (rule "wellFormedStorePrimitive" (formula "30") (term "1"))
                           (rule "wellFormedStorePrimitive" (formula "30") (term "1"))
                           (rule "wellFormedCreate" (formula "30") (term "1"))
                           (rule "replace_known_left" (formula "30") (term "1") (ifseqformula "6"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "allRight" (formula "30") (inst "sk=o_9"))
                           (rule "impRight" (formula "30"))
                           (rule "notRight" (formula "31"))
                           (rule "andLeft" (formula "2"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "3"))
                           (rule "andLeft" (formula "2"))
                           (rule "notLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "27"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=java_lang_Object_created__10"))
                           (rule "simplifySelectOfMemset" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "26"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "26"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "commute_or" (formula "1"))
                           (rule "cut_direct" (formula "1") (term "1"))
                           (branch "CUT: o_9.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "instAll" (formula "27") (term "0") (ifseqformula "22") (userinteraction))
                              (rule "replace_known_right" (formula "1") (term "1,0") (ifseqformula "27"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")) (ifInst ""  (formula "2")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "CUT: o_9.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "instAll" (formula "28") (term "0") (ifseqformula "23") (userinteraction))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")) (ifInst ""  (formula "27")) (ifInst ""  (formula "28")) (ifInst ""  (formula "2")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Body Preserves Invariant"
                           (builtin "One Step Simplification" (formula "32"))
                           (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "30")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")) (ifInst ""  (formula "3")) (ifInst ""  (formula "15")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,1,1,0,0,0,1,1,1,1,1,1") (ifseqformula "11"))
                           (rule "translateJavaAddInt" (formula "32") (term "1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1"))
                           (rule "translateJavaAddInt" (formula "32") (term "1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1"))
                           (rule "translateJavaAddInt" (formula "32") (term "1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1"))
                           (rule "translateJavaAddInt" (formula "24") (term "1,0,1,1"))
                           (rule "translateJavaAddInt" (formula "24") (term "1,0,1,1,1,1,1"))
                           (rule "translateJavaAddInt" (formula "24") (term "0,1,0,1,1,1,1"))
                           (rule "translateJavaAddInt" (formula "32") (term "0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1"))
                           (rule "translateJavaAddInt" (formula "24") (term "1,0,1,1,1,1"))
                           (rule "impRight" (formula "32"))
                           (rule "andLeft" (formula "25"))
                           (rule "andLeft" (formula "26"))
                           (rule "andLeft" (formula "27"))
                           (rule "andLeft" (formula "28"))
                           (rule "andLeft" (formula "29"))
                           (rule "andLeft" (formula "30"))
                           (rule "eqSymm" (formula "39") (term "1,0,0,1,1,1,0,1"))
                           (rule "polySimp_addComm1" (formula "39") (term "1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "39") (term "1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "39") (term "1,0,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "27") (term "1"))
                           (rule "polySimp_addComm1" (formula "29") (term "1"))
                           (rule "polySimp_addComm0" (formula "30") (term "1"))
                           (rule "polySimp_addComm0" (formula "39") (term "0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "29") (term "0,1"))
                           (rule "dismissNonSelectedField" (formula "30") (term "0,0,0,0,1,1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "38") (term "0,1,1,1,1,1,1,1,0,1,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "38") (term "0,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,1,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "25"))
                           (rule "inEqSimp_commuteLeq" (formula "26"))
                           (rule "inEqSimp_commuteLeq" (formula "28"))
                           (rule "inEqSimp_homoInEq0" (formula "38") (term "0,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                           (rule "polySimp_addComm1" (formula "38") (term "0,0,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "27"))
                           (rule "polySimp_addComm1" (formula "27") (term "0"))
                           (rule "variableDeclarationAssign" (formula "1") (term "1"))
                           (rule "variableDeclarationAssign" (formula "38") (term "1"))
                           (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_0_2"))
                           (rule "variableDeclaration" (formula "38") (term "1") (newnames "exc_4"))
                           (rule "assignment" (formula "38") (term "1"))
                           (builtin "One Step Simplification" (formula "38"))
                           (rule "variableDeclaration" (formula "38") (term "1") (newnames "thrownExc_1"))
                           (rule "applyEq" (formula "38") (term "0,1,0,1,1,0,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "28") (term "1") (ifseqformula "29"))
                           (rule "applyEq" (formula "26") (term "0") (ifseqformula "29"))
                           (rule "inEqSimp_homoInEq1" (formula "26"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0"))
                           (rule "add_literals" (formula "26") (term "0,0"))
                           (rule "add_zero_left" (formula "26") (term "0"))
                           (rule "applyEq" (formula "28") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "28"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "0,1,0"))
                           (rule "mul_literals" (formula "28") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                           (rule "add_literals" (formula "28") (term "0,0,0,0"))
                           (rule "add_zero_left" (formula "28") (term "0,0,0"))
                           (rule "applyEqRigid" (formula "27") (term "0,1,0,0") (ifseqformula "29"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                           (rule "add_literals" (formula "27") (term "0,0,0"))
                           (rule "add_zero_left" (formula "27") (term "0,0"))
                           (rule "blockThrow" (formula "38") (term "1,0,0,1"))
                           (rule "blockThrow" (formula "38") (term "1,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                           (rule "polySimp_rightDist" (formula "38") (term "1,0,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                           (rule "mul_literals" (formula "38") (term "0,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                           (rule "polySimp_elimOne" (formula "38") (term "1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                           (rule "inEqSimp_invertInEq0" (formula "26"))
                           (rule "times_zero_2" (formula "26") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                           (rule "polySimp_elimOne" (formula "26") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                           (rule "polySimp_elimOne" (formula "27") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1"))
                           (rule "polySimp_elimOne" (formula "26") (term "1"))
                           (rule "boxToDiamond" (formula "1") (term "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "nnf_imp2or" (formula "28") (term "0"))
                           (rule "nnf_notAnd" (formula "28") (term "1,0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "nnf_notAnd" (formula "28") (term "0,0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "nnf_notAnd" (formula "28") (term "0,0,0"))
                           (rule "nnf_notAnd" (formula "28") (term "0,0,0,0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "nnf_notOr" (formula "28") (term "1,0,0,0"))
                           (rule "nnf_notOr" (formula "28") (term "1,1,0,0,0"))
                           (rule "nnf_notOr" (formula "28") (term "0,1,1,0,0,0"))
                           (rule "nnf_notOr" (formula "28") (term "0,0,1,1,0,0,0"))
                           (rule "nnf_imp2or" (formula "37") (term "0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                           (rule "nnf_notAnd" (formula "37") (term "1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                           (builtin "One Step Simplification" (formula "37"))
                           (rule "nnf_notAnd" (formula "37") (term "0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                           (builtin "One Step Simplification" (formula "37"))
                           (rule "nnf_notAnd" (formula "37") (term "0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                           (rule "nnf_notOr" (formula "37") (term "1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                           (rule "nnf_notAnd" (formula "37") (term "0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                           (builtin "One Step Simplification" (formula "37"))
                           (rule "commute_or" (formula "28") (term "1,0"))
                           (rule "commute_or_2" (formula "28") (term "0,0"))
                           (rule "commute_or_2" (formula "28") (term "0"))
                           (rule "commute_or_2" (formula "28") (term "0,0,0"))
                           (rule "shift_paren_or" (formula "28") (term "0,0"))
                           (rule "commute_or_2" (formula "28") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "cnf_rightDist" (formula "28") (term "0"))
                           (rule "distr_forallAnd" (formula "28"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "castDel" (formula "28") (term "0,0,0,0,0"))
                           (rule "castDel" (formula "28") (term "0,1,0,0"))
                           (rule "castDel" (formula "28") (term "0,1,0,0,0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "commute_or" (formula "28") (term "0"))
                           (rule "cnf_rightDist" (formula "28") (term "0"))
                           (rule "distr_forallAnd" (formula "28"))
                           (rule "andLeft" (formula "28"))
                           (rule "commute_or" (formula "29") (term "0"))
                           (rule "cnf_rightDist" (formula "28") (term "0"))
                           (rule "distr_forallAnd" (formula "28"))
                           (rule "andLeft" (formula "28"))
                           (rule "commute_or" (formula "29") (term "0"))
                           (rule "cnf_rightDist" (formula "28") (term "0"))
                           (rule "distr_forallAnd" (formula "28"))
                           (rule "andLeft" (formula "28"))
                           (rule "commute_or" (formula "29") (term "0"))
                           (rule "commute_or" (formula "31") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "31") (term "0,0,0"))
                           (rule "commute_or" (formula "30") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "30") (term "0,0,0"))
                           (rule "commute_or" (formula "28") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "28") (term "0,0,0"))
                           (rule "commute_or" (formula "28") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "28") (term "0,0,0"))
                           (rule "compound_less_than_comparison_2" (formula "29") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
                           (rule "variableDeclarationAssign" (formula "29") (term "1"))
                           (rule "variableDeclaration" (formula "29") (term "1") (newnames "x_26"))
                           (rule "assignment" (formula "29") (term "1"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "variableDeclarationAssign" (formula "29") (term "1"))
                           (rule "variableDeclaration" (formula "29") (term "1") (newnames "x_27"))
                           (rule "assignment_read_length" (formula "29") (term "1"))
                           (branch "Normal Execution (_m1 != null)"
                              (builtin "One Step Simplification" (formula "30"))
                              (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "36")))
                              (rule "false_right" (formula "29"))
                              (rule "less_than_comparison_simple" (formula "29") (term "1"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "0,0,0,1,0"))
                              (rule "methodCallEmpty" (formula "29") (term "1"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "emptyModality" (formula "29") (term "1"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "notRight" (formula "29"))
                              (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                              (rule "add_literals" (formula "26") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "26") (term "1,0,0"))
                              (rule "add_zero_right" (formula "26") (term "0,0"))
                              (rule "qeq_literals" (formula "26") (term "0"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "ifUnfold" (formula "36") (term "1") (inst "#boolv=x"))
                              (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_28"))
                              (rule "compound_less_than_comparison_2" (formula "36") (term "1") (inst "#v1=x_30") (inst "#v0=x_29"))
                              (rule "variableDeclarationAssign" (formula "36") (term "1"))
                              (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_29"))
                              (rule "assignment" (formula "36") (term "1"))
                              (builtin "One Step Simplification" (formula "36"))
                              (rule "variableDeclarationAssign" (formula "36") (term "1"))
                              (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_30"))
                              (rule "assignment_read_length" (formula "36") (term "1"))
                              (branch "Normal Execution (_m1 != null)"
                                 (builtin "One Step Simplification" (formula "37"))
                                 (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "34")))
                                 (rule "false_right" (formula "36"))
                                 (rule "less_than_comparison_simple" (formula "36") (term "1"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "0,0,0,1,0"))
                                 (rule "replace_known_left" (formula "36") (term "0,0,1,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "ifSplit" (formula "36"))
                                 (branch "if x_28 true"
                                    (builtin "One Step Simplification" (formula "37"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "eval_order_array_access2" (formula "36") (term "1") (inst "#v0=x") (inst "#ar1=x_arr"))
                                    (rule "variableDeclarationAssign" (formula "36") (term "1"))
                                    (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_arr_6"))
                                    (rule "assignment" (formula "36") (term "1"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "variableDeclarationAssign" (formula "36") (term "1"))
                                    (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_31"))
                                    (rule "postincrement_assignment" (formula "36") (term "1") (inst "#v=x_32"))
                                    (rule "variableDeclarationAssign" (formula "36") (term "1"))
                                    (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_32"))
                                    (rule "assignment" (formula "36") (term "1"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "compound_int_cast_expression" (formula "36") (term "1") (inst "#v=x_33"))
                                    (rule "variableDeclarationAssign" (formula "36") (term "1"))
                                    (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_33"))
                                    (rule "remove_parentheses_right" (formula "36") (term "1"))
                                    (rule "assignmentAdditionInt" (formula "36") (term "1"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "translateJavaAddInt" (formula "36") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0,1,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                    (rule "widening_identity_cast_5" (formula "36") (term "1"))
                                    (rule "assignment" (formula "36") (term "1"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "assignment" (formula "36") (term "1"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "eval_order_array_access3" (formula "36") (term "1") (inst "#v1=x_33") (inst "#v2=x_32") (inst "#v0=x_arr_7"))
                                    (rule "variableDeclarationAssign" (formula "36") (term "1"))
                                    (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_arr_7"))
                                    (rule "assignment" (formula "36") (term "1"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "variableDeclarationAssign" (formula "36") (term "1"))
                                    (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_34"))
                                    (rule "assignment" (formula "36") (term "1"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "ifUnfold" (formula "36") (term "1") (inst "#boolv=x_35"))
                                    (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_35"))
                                    (rule "compound_assignment_5_nonsimple" (formula "36") (term "1"))
                                    (rule "ifElseUnfold" (formula "36") (term "1") (inst "#boolv=x_36"))
                                    (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_36"))
                                    (rule "compound_less_equal_than_comparison_1" (formula "36") (term "1") (inst "#v0=x_37"))
                                    (rule "variableDeclarationAssign" (formula "36") (term "1"))
                                    (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_37"))
                                    (rule "eval_order_array_access6" (formula "36") (term "1") (inst "#v0=x_arr_8"))
                                    (rule "variableDeclarationAssign" (formula "36") (term "1"))
                                    (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_arr_8"))
                                    (rule "remove_parentheses_right" (formula "36") (term "1"))
                                    (rule "assignment" (formula "36") (term "1"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "assignment_read_length" (formula "36") (term "1"))
                                    (branch "Normal Execution (x_arr_8 != null)"
                                       (builtin "One Step Simplification" (formula "37"))
                                       (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "33")))
                                       (rule "false_right" (formula "36"))
                                       (rule "applyEq" (formula "36") (term "0,1,0") (ifseqformula "3"))
                                       (rule "less_equal_than_comparison_simple" (formula "36") (term "1"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "36") (term "0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "0,0,0,1,0"))
                                       (rule "ifElseSplit" (formula "36"))
                                       (branch "if x_36 true"
                                          (builtin "One Step Simplification" (formula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "ifEnterThen" (formula "37") (term "1"))
                                          (rule "assignment" (formula "37") (term "1"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "blockThrow" (formula "37") (term "1"))
                                          (rule "inEqSimp_antiSymm" (formula "27") (ifseqformula "1"))
                                          (rule "applyEq" (formula "18") (term "1,2,1,0,0,1,0") (ifseqformula "27"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "2,1,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0,2,1,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "18") (term "2,1,0,0,1,0"))
                                          (rule "add_literals" (formula "18") (term "1,1,2,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "18") (term "1,2,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "18") (term "2,1,0,0,1,0"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "27"))
                                          (rule "inEqSimp_homoInEq0" (formula "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,0"))
                                          (rule "times_zero_1" (formula "1") (term "0"))
                                          (rule "qeq_literals" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "applyEq" (formula "19") (term "0") (ifseqformula "26"))
                                          (rule "inEqSimp_homoInEq1" (formula "19"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                          (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "19") (term "0"))
                                          (rule "add_literals" (formula "19") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0"))
                                          (rule "add_zero_right" (formula "19") (term "0"))
                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "27") (term "0") (ifseqformula "26"))
                                          (rule "inEqSimp_homoInEq1" (formula "27"))
                                          (rule "polySimp_pullOutFactor1" (formula "27") (term "0"))
                                          (rule "add_literals" (formula "27") (term "1,0"))
                                          (rule "times_zero_1" (formula "27") (term "0"))
                                          (rule "leq_literals" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "applyEq" (formula "21") (term "1,2,1,0,0,0,1,0") (ifseqformula "26"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "2,1,0,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0,2,1,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "21") (term "2,1,0,0,0,1,0"))
                                          (rule "add_literals" (formula "21") (term "1,1,2,1,0,0,0,1,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,2,1,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "21") (term "2,1,0,0,0,1,0"))
                                          (rule "applyEq" (formula "12") (term "1,2,1,0,0,0") (ifseqformula "26"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "2,1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0,2,1,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "12") (term "2,1,0,0,0"))
                                          (rule "add_literals" (formula "12") (term "1,1,2,1,0,0,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,2,1,0,0,0"))
                                          (rule "add_zero_right" (formula "12") (term "2,1,0,0,0"))
                                          (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "26"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "1"))
                                          (rule "add_literals" (formula "3") (term "1,1,1"))
                                          (rule "times_zero_1" (formula "3") (term "1,1"))
                                          (rule "add_zero_right" (formula "3") (term "1"))
                                          (rule "inEqSimp_invertInEq0" (formula "19"))
                                          (rule "times_zero_2" (formula "19") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "6"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "if x_36 false"
                                          (builtin "One Step Simplification" (formula "37"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "inEqSimp_leqRight" (formula "29"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                          (rule "mul_literals" (formula "1") (term "0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                                          (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "27") (term "0,0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0"))
                                          (rule "qeq_literals" (formula "27") (term "0"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "less_than_comparison_simple" (formula "36") (term "1"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0"))
                                          (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "36") (term "0,0,0,0,1,0"))
                                          (rule "blockEmpty" (formula "36") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,1,0"))
                                          (rule "mul_literals" (formula "36") (term "1,0,0,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0,1,0") (ifseqformula "26"))
                                          (rule "qeq_literals" (formula "36") (term "0,0,0,1,0"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "ifSplit" (formula "36"))
                                          (branch "if x_35 true"
                                             (builtin "One Step Simplification" (formula "37"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "if x_35 false"
                                             (builtin "One Step Simplification" (formula "37"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "variableDeclarationAssign" (formula "36") (term "1"))
                                             (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_38"))
                                             (rule "assignment_array2" (formula "36") (term "1"))
                                             (branch "Normal Execution (_m1 != null)"
                                                (builtin "One Step Simplification" (formula "37"))
                                                (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "34")))
                                                (rule "orRight" (formula "36"))
                                                (rule "inEqSimp_leqRight" (formula "36"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_ltRight" (formula "37"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "37") (term "0,1,0") (inst "selectSK=arr_5"))
                                                (rule "simplifySelectOfAnon" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "15"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,1,0,0"))
                                                (rule "assignment_to_primitive_array_component" (formula "38") (term "1"))
                                                (branch "Normal Execution (x_arr_7 != null)"
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "8"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                   (rule "mul_literals" (formula "4") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "mul_literals" (formula "2") (term "1"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "28"))
                                                   (rule "leq_literals" (formula "1") (term "0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_6"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "15"))
                                                   (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                                   (rule "pullOutSelect" (formula "2") (term "0,0,0,0,1,0,0") (inst "selectSK=java_lang_Object_created__7"))
                                                   (rule "applyEq" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "2"))
                                                   (rule "simplifySelectOfMemset" (formula "2"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "simplifySelectOfStore" (formula "2"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "simplifySelectOfStore" (formula "2"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "simplifySelectOfStore" (formula "2"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "simplifySelectOfCreate" (formula "2"))
                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                                                   (rule "castDel" (formula "2") (term "1,0"))
                                                   (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "applyEqReverse" (formula "3") (term "0,0,0,0,1,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_7"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownSelect_taclet00110000102000100_8" (formula "1") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00110000102000100_13" (formula "1") (term "0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "simplifySelectOfMemset" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_8"))
                                                   (rule "simplifySelectOfCreate" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "preincrement" (formula "39") (term "1"))
                                                   (rule "applyEq_and_int4" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "replace_known_left" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "29"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEq_and_int6" (formula "1") (term "0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,1,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,1,1,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,1,0,1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,1,1,0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,0,1,1,0,1,0,0"))
                                                   (rule "inEqSimp_subsumption1" (formula "1") (term "1,0,1,0,0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1,0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,1,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,1,0,1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,1,0,0,1,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0,1,0,1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,1,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,1,0,1,0,0"))
                                                   (rule "qeq_literals" (formula "1") (term "0,1,0,1,0,0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "compound_int_cast_expression" (formula "39") (term "1") (inst "#v=x"))
                                                   (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                                   (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_39"))
                                                   (rule "remove_parentheses_right" (formula "39") (term "1"))
                                                   (rule "assignmentAdditionInt" (formula "39") (term "1"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "translateJavaAddInt" (formula "39") (term "0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "39") (term "0,1,0"))
                                                   (rule "widening_identity_cast_5" (formula "39") (term "1"))
                                                   (rule "assignment" (formula "39") (term "1"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "tryEmpty" (formula "39") (term "1"))
                                                   (rule "methodCallEmpty" (formula "39") (term "1"))
                                                   (rule "emptyModality" (formula "39") (term "1"))
                                                   (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "37")) (ifInst ""  (formula "36")) (ifInst ""  (formula "37")) (ifInst ""  (formula "38")) (ifInst ""  (formula "8")) (ifInst ""  (formula "20")) (ifInst ""  (formula "7")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,0,1,1,0,0,0,1") (ifseqformula "16"))
                                                   (rule "eqSymm" (formula "39") (term "1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "1,0,1,1,0"))
                                                   (rule "add_literals" (formula "39") (term "0,1,0,1,1,0"))
                                                   (rule "replace_known_left" (formula "39") (term "0,1,1,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "1,0,1,1,1,0"))
                                                   (rule "add_literals" (formula "39") (term "0,1,0,1,1,1,0"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "dismissNonSelectedField" (formula "39") (term "0,0,1,1,0,0,0,1,1,1,0"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,0,0,1,1,0,0,0,1,1,1,0") (ifseqformula "16"))
                                                   (rule "dismissNonSelectedField" (formula "39") (term "0,0,0,0,1,1,0,0,0,1"))
                                                   (rule "dismissNonSelectedField" (formula "39") (term "0,0,0,0,0,1,1,0,0,0,1,1,1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "39") (term "0,0,0,1,0"))
                                                   (rule "applyEq" (formula "39") (term "0,0,1,1,0") (ifseqformula "7"))
                                                   (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "39") (term "0,1,0,0,1,1,0"))
                                                   (rule "mul_literals" (formula "39") (term "0,0,1,0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "39") (term "0,0,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0"))
                                                   (rule "mul_literals" (formula "39") (term "1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "0,0,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "39") (term "0,0,1,1,0"))
                                                   (rule "replace_known_left" (formula "39") (term "0,1,1,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "inEqSimp_subsumption1" (formula "39") (term "0,1,0") (ifseqformula "29"))
                                                   (rule "leq_literals" (formula "39") (term "0,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "inEqSimp_subsumption1" (formula "39") (term "0,0") (ifseqformula "29"))
                                                   (rule "leq_literals" (formula "39") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "nnf_notOr" (formula "39") (term "1,1,0,0,0,0"))
                                                   (rule "nnf_notOr" (formula "39") (term "1,1,0,0,0,1"))
                                                   (rule "nnf_notOr" (formula "39") (term "0,1,1,0,0,0,0"))
                                                   (rule "nnf_notOr" (formula "39") (term "0,1,1,0,0,0,1"))
                                                   (rule "nnf_notOr" (formula "39") (term "0,0,1,1,0,0,0,0"))
                                                   (rule "andRight" (formula "39"))
                                                   (branch "Case 1"
                                                      (rule "allRight" (formula "39") (inst "sk=o_8"))
                                                      (rule "orRight" (formula "39"))
                                                      (rule "orRight" (formula "40"))
                                                      (rule "orRight" (formula "39"))
                                                      (rule "orRight" (formula "39"))
                                                      (rule "orRight" (formula "39"))
                                                      (rule "replace_known_right" (formula "41") (term "0,0") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "pullOutSelect" (formula "41") (term "0,0,0,0,0") (inst "selectSK=java_lang_Object_created__9"))
                                                      (rule "simplifySelectOfMemset" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfCreate" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "eqSymm" (formula "1") (term "0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "42") (term "0,0,0,0,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "replace_known_right" (formula "41") (term "0,0,0,0") (ifseqformula "42"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "commute_and" (formula "41") (term "0"))
                                                      (rule "commute_and_2" (formula "41"))
                                                      (rule "ifthenelse_split" (formula "1") (term "0"))
                                                      (branch "x_arr_2 = m1 TRUE"
                                                         (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "applyEq" (formula "23") (term "1,0,0,0,0,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "37") (term "1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "23") (term "1,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "19") (term "0,1,0,0,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "14") (term "0,1,0,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "19") (term "1,0,0,0,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                                                         (rule "eqSymm" (formula "30"))
                                                         (rule "applyEq" (formula "14") (term "1,0,0,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "19") (term "1,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "19") (term "1,0,0,0,0,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "14") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "23") (term "1,0,0,0,0,0,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "1"))
                                                         (rule "close" (formula "33") (ifseqformula "10"))
                                                      )
                                                      (branch "x_arr_2 = m1 FALSE"
                                                         (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "30"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "cut_direct" (formula "39") (term "0,0,0"))
                                                         (branch "CUT: o_8.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "false_right" (formula "40"))
                                                            (rule "instAll" (formula "38") (term "0") (ifseqformula "25") (userinteraction))
                                                            (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")) (ifInst ""  (formula "40")) (ifInst ""  (formula "39")) (ifInst ""  (formula "41")))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                         (branch "CUT: o_8.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                            (builtin "One Step Simplification" (formula "40"))
                                                            (rule "cut_direct" (formula "40") (term "0,1"))
                                                            (branch "CUT: o_8.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE TRUE"
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "false_right" (formula "41"))
                                                               (rule "instAll" (formula "39") (term "0") (ifseqformula "24") (userinteraction))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")) (ifInst ""  (formula "39")) (ifInst ""  (formula "42")) (ifInst ""  (formula "2")))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch "CUT: o_8.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE FALSE"
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "notRight" (formula "41"))
                                                               (rule "instAll" (formula "39") (term "0") (ifseqformula "29") (userinteraction))
                                                               (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")) (ifInst ""  (formula "40")) (ifInst ""  (formula "39")) (ifInst ""  (formula "43")))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                   (branch
                                                      (rule "allRight" (formula "39") (inst "sk=f_4"))
                                                      (rule "allRight" (formula "39") (inst "sk=o_7"))
                                                      (rule "orRight" (formula "39"))
                                                      (rule "orRight" (formula "39"))
                                                      (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=f_4_0"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "eqSymm" (formula "42"))
                                                      (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                      (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "17"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,1,0,0"))
                                                      (rule "pullOutSelect" (formula "41") (term "0,0,0,0,1") (inst "selectSK=java_lang_Object_created__8"))
                                                      (rule "applyEq" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "1"))
                                                      (rule "simplifySelectOfMemset" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfCreate" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "eqSymm" (formula "1") (term "0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "41"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "42") (term "0,0,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=f_4_1"))
                                                      (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "18"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                                      (rule "replaceKnownSelect_taclet100110000102000100_20" (formula "1") (term "0,0,0,1,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet100110000102000100_25" (formula "1") (term "0,0,0,1,0,0"))
                                                      (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_4_2"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "replaceKnownSelect_taclet100110000102000100_20" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet100110000102000100_25" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_4_3"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                      (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfMemset" (formula "1"))
                                                      (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                                                      (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                      (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                      (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                      (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfCreate" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "43"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                                      (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "commute_and_2" (formula "43") (term "1"))
                                                      (rule "ifthenelse_split" (formula "4") (term "0"))
                                                      (branch "x_arr_2 = m1 TRUE"
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEq" (formula "37") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "22") (term "0,1,0,0,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "27") (term "1,1,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "17") (term "1,0,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "26") (term "1,0,0,0,0,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "39") (term "1") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "17") (term "1,0,0,0,0,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "26") (term "1,0,0,0,0,0,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "22") (term "1,0,0,0,0,0,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "33") (term "0") (ifseqformula "4"))
                                                         (rule "eqSymm" (formula "33"))
                                                         (rule "applyEq" (formula "22") (term "1,0,0,0,0,0,0,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "17") (term "1,0,0,0,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "22") (term "1,0,0,0,0,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "32") (term "1,1,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "28") (term "1,1,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "26") (term "1,0,0,0,0,0,0,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "4"))
                                                         (rule "close" (formula "36") (ifseqformula "13"))
                                                      )
                                                      (branch "x_arr_2 = m1 FALSE"
                                                         (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "34"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "33"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                                                         (rule "shift_paren_and" (formula "41"))
                                                         (rule "shift_paren_and" (formula "41") (term "0"))
                                                         (rule "ifthenelse_split" (formula "1") (term "0"))
                                                         (branch "¬o_7 = null ∧ ¬o_7.<created> = TRUE TRUE"
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "notLeft" (formula "2"))
                                                            (rule "notLeft" (formula "1"))
                                                            (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "32"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                                            (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "32")))
                                                            (rule "replace_known_right" (formula "42") (term "0,0,0,0") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "32")))
                                                            (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                            (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                            (rule "ifthenelse_split" (formula "1") (term "0"))
                                                            (branch " o_7.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE TRUE"
                                                               (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                                               (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "43")))
                                                               (rule "closeFalse" (formula "2"))
                                                            )
                                                            (branch " o_7.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE FALSE"
                                                               (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                                               (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "30"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "replace_known_right" (formula "42") (term "0,1") (ifseqformula "30"))
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "notRight" (formula "42"))
                                                               (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "43")))
                                                               (rule "closeFalse" (formula "2"))
                                                            )
                                                         )
                                                         (branch "¬o_7 = null ∧ ¬o_7.<created> = TRUE FALSE"
                                                            (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "replace_known_right" (formula "41") (term "0,0") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "41"))
                                                            (rule "false_right" (formula "41"))
                                                            (rule "ifthenelse_split" (formula "1") (term "0"))
                                                            (branch " ¬o_7 = null ∧ ¬( o_7.<created> = TRUE ∨ o_7.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "notLeft" (formula "2"))
                                                               (rule "notLeft" (formula "1"))
                                                               (rule "orRight" (formula "32"))
                                                               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                               (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "31"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")) (ifInst ""  (formula "32")))
                                                               (rule "replace_known_right" (formula "33") (term "0,1") (ifseqformula "31"))
                                                               (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "30")))
                                                               (rule "closeTrue" (formula "33"))
                                                            )
                                                            (branch " ¬o_7 = null ∧ ¬( o_7.<created> = TRUE ∨ o_7.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                               (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch " ¬o_7 = null ∧ ¬( o_7.<created> = TRUE ∨ o_7.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE ∨ o_7.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "notLeft" (formula "1"))
                                                                  (rule "notLeft" (formula "1"))
                                                                  (rule "orRight" (formula "30"))
                                                                  (rule "orRight" (formula "30"))
                                                                  (rule "applyEqReverse" (formula "45") (term "1") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "eqSymm" (formula "44"))
                                                                  (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "32"))
                                                                  (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "29")))
                                                                  (rule "closeTrue" (formula "34"))
                                                               )
                                                               (branch " ¬o_7 = null ∧ ¬( o_7.<created> = TRUE ∨ o_7.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE ∨ o_7.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                                  (rule "close" (formula "42") (ifseqformula "1"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "Null Reference (x_arr_7 = null)"
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "Index Out of Bounds (x_arr_7 != null, but x_34 Out of Bounds!)"
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                                   (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                                   (rule "add_literals" (formula "1") (term "0,0,1"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "7"))
                                                   (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "mul_literals" (formula "3") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "28"))
                                                   (rule "qeq_literals" (formula "1") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0"))
                                                   (rule "add_literals" (formula "1") (term "0"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                             (branch "Null Reference (_m1 = null)"
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "Index Out of Bounds (_m1 != null, but i Out of Bounds!)"
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                                (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "27"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "Null Reference (x_arr_8 = null)"
                                       (builtin "One Step Simplification" (formula "37"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch "if x_28 false"
                                    (builtin "One Step Simplification" (formula "37"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch "Null Reference (_m1 = null)"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "Null Reference (_m1 = null)"
                              (builtin "One Step Simplification" (formula "30"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Use Case"
                           (builtin "One Step Simplification" (formula "32"))
                           (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "30")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")) (ifInst ""  (formula "3")) (ifInst ""  (formula "15")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,1,1,0,0,0,1,1,1,1,1,1") (ifseqformula "11"))
                           (rule "translateJavaAddInt" (formula "24") (term "0,1,0,1,1,1,1"))
                           (rule "translateJavaAddInt" (formula "24") (term "1,0,1,1,1,1,1"))
                           (rule "translateJavaAddInt" (formula "24") (term "1,0,1,1"))
                           (rule "translateJavaAddInt" (formula "24") (term "1,0,1,1,1,1"))
                           (rule "andLeft" (formula "24"))
                           (rule "andLeft" (formula "25"))
                           (rule "andLeft" (formula "26"))
                           (rule "andLeft" (formula "27"))
                           (rule "andLeft" (formula "28"))
                           (rule "andLeft" (formula "29"))
                           (rule "polySimp_addComm0" (formula "26") (term "1"))
                           (rule "polySimp_addComm1" (formula "28") (term "1"))
                           (rule "polySimp_addComm0" (formula "29") (term "1"))
                           (rule "polySimp_addComm0" (formula "28") (term "0,1"))
                           (rule "dismissNonSelectedField" (formula "29") (term "0,0,0,0,1,1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "24"))
                           (rule "inEqSimp_commuteLeq" (formula "25"))
                           (rule "inEqSimp_commuteLeq" (formula "27"))
                           (rule "inEqSimp_homoInEq0" (formula "26"))
                           (rule "polySimp_addComm1" (formula "26") (term "0"))
                           (rule "variableDeclarationAssign" (formula "37") (term "1"))
                           (rule "variableDeclaration" (formula "37") (term "1") (newnames "b_0_1"))
                           (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "28"))
                           (rule "inEqSimp_homoInEq1" (formula "25"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                           (rule "mul_literals" (formula "25") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0"))
                           (rule "add_literals" (formula "25") (term "0,0"))
                           (rule "add_zero_left" (formula "25") (term "0"))
                           (rule "applyEq" (formula "27") (term "0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "0,1,0"))
                           (rule "mul_literals" (formula "27") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "27") (term "0,0,0"))
                           (rule "applyEq" (formula "37") (term "0,1,0,1,0") (ifseqformula "28"))
                           (rule "applyEqRigid" (formula "26") (term "0,1,0,0") (ifseqformula "28"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                           (rule "add_literals" (formula "26") (term "0,0,0"))
                           (rule "add_zero_left" (formula "26") (term "0,0"))
                           (rule "applyEq" (formula "27") (term "1,0,0,0") (ifseqformula "28"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                           (rule "add_literals" (formula "27") (term "0,0,0,0"))
                           (rule "add_zero_left" (formula "27") (term "0,0,0"))
                           (rule "blockEmpty" (formula "37") (term "1,0,1"))
                           (rule "inEqSimp_invertInEq0" (formula "25"))
                           (rule "times_zero_2" (formula "25") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                           (rule "polySimp_elimOne" (formula "25") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1"))
                           (rule "polySimp_elimOne" (formula "25") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                           (rule "polySimp_elimOne" (formula "26") (term "0"))
                           (rule "nnf_imp2or" (formula "28") (term "0"))
                           (rule "nnf_notAnd" (formula "28") (term "1,0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "nnf_notAnd" (formula "28") (term "0,0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "nnf_notAnd" (formula "28") (term "0,0,0"))
                           (rule "nnf_notAnd" (formula "28") (term "0,0,0,0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "nnf_notOr" (formula "28") (term "1,0,0,0"))
                           (rule "nnf_notOr" (formula "28") (term "1,1,0,0,0"))
                           (rule "nnf_notOr" (formula "28") (term "0,1,1,0,0,0"))
                           (rule "nnf_notOr" (formula "28") (term "0,0,1,1,0,0,0"))
                           (rule "commute_or" (formula "28") (term "1,0"))
                           (rule "commute_or_2" (formula "28") (term "0,0"))
                           (rule "commute_or_2" (formula "28") (term "0"))
                           (rule "commute_or_2" (formula "28") (term "0,0,0"))
                           (rule "shift_paren_or" (formula "28") (term "0,0"))
                           (rule "commute_or_2" (formula "28") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "cnf_rightDist" (formula "28") (term "0"))
                           (rule "distr_forallAnd" (formula "28"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "castDel" (formula "28") (term "0,0,0,0,0"))
                           (rule "castDel" (formula "28") (term "0,1,0,0"))
                           (rule "castDel" (formula "28") (term "0,1,0,0,0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "commute_or" (formula "28") (term "0"))
                           (rule "cnf_rightDist" (formula "28") (term "0"))
                           (rule "distr_forallAnd" (formula "28"))
                           (rule "andLeft" (formula "28"))
                           (rule "commute_or" (formula "29") (term "0"))
                           (rule "cnf_rightDist" (formula "28") (term "0"))
                           (rule "distr_forallAnd" (formula "28"))
                           (rule "andLeft" (formula "28"))
                           (rule "commute_or" (formula "29") (term "0"))
                           (rule "cnf_rightDist" (formula "28") (term "0"))
                           (rule "distr_forallAnd" (formula "28"))
                           (rule "andLeft" (formula "28"))
                           (rule "commute_or" (formula "29") (term "0"))
                           (rule "commute_or" (formula "31") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "31") (term "0,0,0"))
                           (rule "commute_or" (formula "30") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "30") (term "0,0,0"))
                           (rule "commute_or" (formula "28") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "28") (term "0,0,0"))
                           (rule "commute_or" (formula "28") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "28") (term "0,0,0"))
                           (rule "compound_less_than_comparison_2" (formula "36") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
                           (rule "variableDeclarationAssign" (formula "36") (term "1"))
                           (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_8"))
                           (rule "assignment" (formula "36") (term "1"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "variableDeclarationAssign" (formula "36") (term "1"))
                           (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_9"))
                           (rule "assignment_read_length" (formula "36") (term "1"))
                           (branch "Normal Execution (_m1 != null)"
                              (builtin "One Step Simplification" (formula "37"))
                              (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "34")))
                              (rule "false_right" (formula "36"))
                              (rule "less_than_comparison_simple" (formula "36") (term "1"))
                              (builtin "One Step Simplification" (formula "36"))
                              (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "36") (term "0,0,0,1,0"))
                              (rule "methodCallEmpty" (formula "36") (term "1"))
                              (rule "emptyModality" (formula "36") (term "1"))
                              (builtin "One Step Simplification" (formula "36"))
                              (rule "impRight" (formula "36"))
                              (rule "notLeft" (formula "1"))
                              (rule "inEqSimp_geqRight" (formula "29"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_antiSymm" (formula "26") (ifseqformula "1"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "26"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,0"))
                              (rule "times_zero_1" (formula "1") (term "0"))
                              (rule "qeq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "25"))
                              (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "24"))
                              (rule "polySimp_pullOutFactor1" (formula "26") (term "1"))
                              (rule "add_literals" (formula "26") (term "1,1"))
                              (rule "times_zero_1" (formula "26") (term "1"))
                              (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "24"))
                              (rule "applyEq" (formula "25") (term "0") (ifseqformula "24"))
                              (rule "inEqSimp_homoInEq1" (formula "25"))
                              (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                              (rule "add_literals" (formula "25") (term "1,0"))
                              (rule "times_zero_1" (formula "25") (term "0"))
                              (rule "leq_literals" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "applyEq" (formula "19") (term "1,0,2,1,0,0,0,1,0") (ifseqformula "24"))
                              (rule "applyEq" (formula "15") (term "1,0,2,1,0,0,1,0") (ifseqformula "24"))
                              (rule "applyEq" (formula "10") (term "1,0,2,1,0,0,0") (ifseqformula "24"))
                              (rule "applyEq" (formula "2") (term "1,0,1") (ifseqformula "24"))
                              (rule "for_to_while" (formula "34") (term "1") (inst "#outerLabel=_label5") (inst "#innerLabel=_label4"))
                              (rule "assignment" (formula "34") (term "1"))
                              (builtin "One Step Simplification" (formula "34"))
                              (builtin "Loop Invariant" (formula "34") (newnames "variant_1,b_2,heapBefore_LOOP_1,iBefore_LOOP_1,jBefore_LOOP_1,i_2,j_2,heap_After_LOOP_1,anon_heap_LOOP_1,o,f"))
                              (branch "Invariant Initially Valid"
                                 (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "33")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")) (ifInst ""  (formula "3")) (ifInst ""  (formula "14")))
                                 (rule "wellFormedAnon" (formula "34") (term "1"))
                                 (rule "wellFormedAnon" (formula "34") (term "0,1"))
                                 (rule "wellFormedAnonEQ" (formula "34") (term "0,0,1") (ifseqformula "10"))
                                 (rule "wellFormedStorePrimitive" (formula "34") (term "0,0,0,1"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,1,1,0,0,0,1,1,1,1,1,1,0") (ifseqformula "10"))
                                 (rule "translateJavaAddInt" (formula "34") (term "1,0,1,1,1,1,1,0"))
                                 (rule "translateJavaAddInt" (formula "34") (term "0,0,1,0"))
                                 (rule "translateJavaAddInt" (formula "34") (term "1,0,1,1,0"))
                                 (rule "translateJavaAddInt" (formula "34") (term "1,0,1,1,1,1,0"))
                                 (rule "translateJavaAddInt" (formula "34") (term "0,1,0,1,1,1,1,1,0"))
                                 (rule "translateJavaAddInt" (formula "34") (term "0,1,0,1,1,0"))
                                 (rule "translateJavaAddInt" (formula "34") (term "0,1,0,1,1,1,1,0"))
                                 (rule "leq_literals" (formula "34") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "9")) (ifInst ""  (formula "16")) (ifInst ""  (formula "22")))
                                 (rule "add_zero_left" (formula "34") (term "0,1,0,1,1,1,1,0"))
                                 (rule "polySimp_homoEq" (formula "34") (term "0,1,1,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,1,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "34") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "1,0,1,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "34") (term "0,1,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "34") (term "0,0,0,1,1,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "34") (term "0,1,0,1,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "1,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "34") (term "0,1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,1,1,1,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,0,1,1,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,1,1,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,0,1,1,0,0,0,1,1,1,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,1,1,1,1,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,0,0,1,1,1,1,0"))
                                 (rule "add_zero_left" (formula "34") (term "0,0,0,1,1,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "34") (term "0,1,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "34") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "34") (term "0,0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "34") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "34") (term "0,0,0,0,1,0"))
                                 (rule "applyEq" (formula "34") (term "0,0,1,1,0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "34") (term "0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "34") (term "0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "34") (term "0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "34") (term "1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "34") (term "0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "34") (term "0,0,1,1,0"))
                                 (rule "applyEq" (formula "34") (term "0,1,0,0,0") (ifseqformula "24"))
                                 (rule "polySimp_pullOutFactor1" (formula "34") (term "0,0,0"))
                                 (rule "add_literals" (formula "34") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "34") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "34") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "applyEq" (formula "34") (term "0,0,1,1,0") (ifseqformula "2"))
                                 (rule "polySimp_homoEq" (formula "34") (term "0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "34") (term "0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1,1,0"))
                                 (rule "add_literals" (formula "34") (term "1,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "34") (term "1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "34") (term "0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "34") (term "0,0,0,1,1,0"))
                                 (rule "applyEq" (formula "34") (term "1,0,0,1,1,1,0") (ifseqformula "24"))
                                 (rule "polySimp_pullOutFactor2" (formula "34") (term "0,0,1,1,1,0"))
                                 (rule "add_literals" (formula "34") (term "1,0,0,1,1,1,0"))
                                 (rule "times_zero_1" (formula "34") (term "0,0,1,1,1,0"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "applyEq" (formula "34") (term "1,0,0,1,1,0") (ifseqformula "24"))
                                 (rule "polySimp_pullOutFactor2" (formula "34") (term "0,0,1,1,0"))
                                 (rule "add_literals" (formula "34") (term "1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "34") (term "0,0,1,1,0"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "applyEq" (formula "34") (term "1,0,0,0,0") (ifseqformula "24"))
                                 (rule "polySimp_pullOutFactor2" (formula "34") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "34") (term "1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "34") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "34") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "inEqSimp_invertInEq0" (formula "34") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0"))
                                 (rule "times_zero_2" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "wellFormedMemsetArrayPrimitive" (formula "34") (term "1"))
                                 (rule "wellFormedStorePrimitive" (formula "34") (term "1"))
                                 (rule "wellFormedStorePrimitive" (formula "34") (term "1"))
                                 (rule "wellFormedStorePrimitive" (formula "34") (term "1"))
                                 (rule "wellFormedCreate" (formula "34") (term "1"))
                                 (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "allRight" (formula "34") (inst "sk=o_6"))
                                 (rule "impRight" (formula "34"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notRight" (formula "36"))
                                 (rule "notLeft" (formula "3"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "31"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "1") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__6"))
                                 (rule "simplifySelectOfMemset" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "commute_or" (formula "1") (term "0"))
                                 (rule "commute_or_2" (formula "1"))
                                 (rule "cut_direct" (formula "1") (term "0,0"))
                                 (branch "CUT: o_6.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "instAll" (formula "31") (term "0") (ifseqformula "22") (userinteraction))
                                    (rule "replace_known_right" (formula "1") (term "1,0") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")) (ifInst ""  (formula "30")) (ifInst ""  (formula "29")) (ifInst ""  (formula "2")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "CUT: o_6.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "cut_direct" (formula "1") (term "1"))
                                    (branch "CUT: o_6.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "instAll" (formula "31") (term "1,0") (ifseqformula "21") (userinteraction))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")) (ifInst ""  (formula "30")) (ifInst ""  (formula "32")) (ifInst ""  (formula "2")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "CUT: o_6.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "instAll" (formula "28") (term "1,0") (ifseqformula "27") (userinteraction))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")) (ifInst ""  (formula "31")) (ifInst ""  (formula "33")) (ifInst ""  (formula "2")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                              )
                              (branch "Body Preserves Invariant"
                                 (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "35")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")) (ifInst ""  (formula "3")) (ifInst ""  (formula "14")))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,0,1,1,0,0,0,1,1,1,1,1,1") (ifseqformula "10"))
                                 (rule "translateJavaAddInt" (formula "28") (term "0,1,0,1,1"))
                                 (rule "translateJavaAddInt" (formula "28") (term "0,0,1"))
                                 (rule "translateJavaAddInt" (formula "28") (term "0,1,0,1,1,1,1,1"))
                                 (rule "translateJavaAddInt" (formula "28") (term "0,1,0,1,1,1,1"))
                                 (rule "translateJavaAddInt" (formula "36") (term "0,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1"))
                                 (rule "translateJavaAddInt" (formula "36") (term "1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1"))
                                 (rule "translateJavaAddInt" (formula "36") (term "1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1"))
                                 (rule "translateJavaAddInt" (formula "36") (term "0,0,1,1,1,1,1,1,1,0,1,1,0,1,1"))
                                 (rule "translateJavaAddInt" (formula "28") (term "1,0,1,1"))
                                 (rule "translateJavaAddInt" (formula "28") (term "1,0,1,1,1,1,1"))
                                 (rule "translateJavaAddInt" (formula "28") (term "1,0,1,1,1,1"))
                                 (rule "translateJavaAddInt" (formula "36") (term "1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1"))
                                 (rule "translateJavaAddInt" (formula "36") (term "0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1"))
                                 (rule "translateJavaAddInt" (formula "36") (term "0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1"))
                                 (rule "andLeft" (formula "28"))
                                 (rule "impRight" (formula "37"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "andLeft" (formula "31"))
                                 (rule "andLeft" (formula "32"))
                                 (rule "andLeft" (formula "33"))
                                 (rule "andLeft" (formula "34"))
                                 (rule "eqSymm" (formula "43") (term "1,0,0,1,1,1,0,1"))
                                 (rule "polySimp_homoEq" (formula "43") (term "0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_homoEq" (formula "34"))
                                 (rule "polySimp_addComm0" (formula "43") (term "0,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "43") (term "0,0,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "43") (term "1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "30") (term "0"))
                                 (rule "polySimp_addComm0" (formula "31") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "33") (term "1"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "43") (term "1,0,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "43") (term "0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "31") (term "1"))
                                 (rule "polySimp_addComm0" (formula "33") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "34") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "43") (term "0,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "31") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "43") (term "0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0"))
                                 (rule "dismissNonSelectedField" (formula "35") (term "0,0,0,0,0,1,1,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "29"))
                                 (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,1,1,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "43") (term "0,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "32"))
                                 (rule "inEqSimp_homoInEq0" (formula "43") (term "0,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,0,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "43") (term "0,0,0,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "30"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                 (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "43") (term "0,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,0,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "31"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                 (rule "variableDeclarationAssign" (formula "1") (term "1"))
                                 (rule "variableDeclarationAssign" (formula "43") (term "1"))
                                 (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_2_2"))
                                 (rule "variableDeclaration" (formula "43") (term "1") (newnames "exc_3"))
                                 (rule "assignment" (formula "43") (term "1"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "variableDeclaration" (formula "43") (term "1") (newnames "thrownExc"))
                                 (rule "applyEq" (formula "33") (term "0") (ifseqformula "3"))
                                 (rule "polySimp_homoEq" (formula "33"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "0,1,0"))
                                 (rule "mul_literals" (formula "33") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                                 (rule "add_literals" (formula "33") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "33") (term "1,0"))
                                 (rule "add_zero_right" (formula "33") (term "0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "33") (term "0,0"))
                                 (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "25"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                 (rule "applyEq" (formula "32") (term "0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "32"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "0,1,0"))
                                 (rule "mul_literals" (formula "32") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                 (rule "polySimp_addComm0" (formula "32") (term "0,0"))
                                 (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "25"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0"))
                                 (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "25"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                 (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "25"))
                                 (rule "polySimp_pullOutFactor2" (formula "33") (term "0"))
                                 (rule "add_literals" (formula "33") (term "1,0"))
                                 (rule "times_zero_1" (formula "33") (term "0"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "blockThrow" (formula "42") (term "1,0,0,1"))
                                 (rule "blockThrow" (formula "42") (term "1,0,0,1"))
                                 (rule "polySimp_sepPosMonomial" (formula "42") (term "0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "42") (term "0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "mul_literals" (formula "42") (term "0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_sepNegMonomial" (formula "33"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "0"))
                                 (rule "applyEqRigid" (formula "30") (term "1,0") (ifseqformula "33"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                                 (rule "add_literals" (formula "30") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "30") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor2" (formula "30") (term "0,0"))
                                 (rule "add_literals" (formula "30") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "30") (term "0,0"))
                                 (rule "add_zero_left" (formula "30") (term "0"))
                                 (rule "applyEqRigid" (formula "41") (term "0,1,0,1,1,0,0") (ifseqformula "32"))
                                 (rule "applyEq" (formula "30") (term "0,1,0,0") (ifseqformula "32"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "30") (term "0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "30") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "30") (term "0,0,0"))
                                 (rule "add_literals" (formula "30") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "30") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "30") (term "0,0"))
                                 (rule "applyEqRigid" (formula "31") (term "1,0,0") (ifseqformula "32"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "31") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor2" (formula "31") (term "0,0,0"))
                                 (rule "add_literals" (formula "31") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "31") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "31") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "41") (term "0,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "mul_literals" (formula "41") (term "0,0,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,0,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "41") (term "0,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "41") (term "0,0,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "0"))
                                 (rule "boxToDiamond" (formula "1") (term "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "nnf_notAnd" (formula "31") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "nnf_imp2or" (formula "31") (term "0"))
                                 (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "nnf_notAnd" (formula "31") (term "0,0,0"))
                                 (rule "nnf_notAnd" (formula "31") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "nnf_notOr" (formula "31") (term "1,0,0,0"))
                                 (rule "nnf_notOr" (formula "31") (term "1,1,0,0,0"))
                                 (rule "nnf_notOr" (formula "31") (term "0,1,1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "40") (term "0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "nnf_notOr" (formula "31") (term "0,0,1,1,0,0,0"))
                                 (rule "nnf_notOr" (formula "31") (term "0,0,0,1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "40") (term "0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "nnf_notAnd" (formula "40") (term "1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "nnf_notAnd" (formula "40") (term "0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "nnf_notAnd" (formula "40") (term "0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "nnf_notOr" (formula "40") (term "1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1"))
                                 (rule "commute_or" (formula "31") (term "1,0"))
                                 (rule "commute_or_2" (formula "31") (term "0,0"))
                                 (rule "commute_or_2" (formula "31") (term "0"))
                                 (rule "shift_paren_or" (formula "31") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "commute_or_2" (formula "31") (term "0,0,0"))
                                 (rule "cnf_rightDist" (formula "31") (term "0"))
                                 (rule "distr_forallAnd" (formula "31"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "castDel" (formula "31") (term "0,1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "commute_or" (formula "31") (term "0"))
                                 (rule "cnf_rightDist" (formula "31") (term "0"))
                                 (rule "distr_forallAnd" (formula "31"))
                                 (rule "andLeft" (formula "31"))
                                 (rule "commute_or" (formula "32") (term "0"))
                                 (rule "cnf_rightDist" (formula "31") (term "0"))
                                 (rule "distr_forallAnd" (formula "31"))
                                 (rule "andLeft" (formula "31"))
                                 (rule "commute_or" (formula "32") (term "0"))
                                 (rule "cnf_rightDist" (formula "31") (term "0"))
                                 (rule "distr_forallAnd" (formula "31"))
                                 (rule "andLeft" (formula "31"))
                                 (rule "commute_or" (formula "32") (term "0"))
                                 (rule "cnf_rightDist" (formula "31") (term "0"))
                                 (rule "distr_forallAnd" (formula "31"))
                                 (rule "andLeft" (formula "31"))
                                 (rule "commute_or" (formula "32") (term "0"))
                                 (rule "commute_or" (formula "35") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "35") (term "0,0,0"))
                                 (rule "commute_or" (formula "34") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "34") (term "0,0,0"))
                                 (rule "commute_or" (formula "33") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "33") (term "0,0,0"))
                                 (rule "commute_or" (formula "31") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "31") (term "0,0,0"))
                                 (rule "commute_or" (formula "31") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "31") (term "0,0,0"))
                                 (rule "compound_less_than_comparison_2" (formula "32") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
                                 (rule "variableDeclarationAssign" (formula "32") (term "1"))
                                 (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_12"))
                                 (rule "assignment" (formula "32") (term "1"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "variableDeclarationAssign" (formula "32") (term "1"))
                                 (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_13"))
                                 (rule "assignment_read_length" (formula "32") (term "1"))
                                 (branch "Normal Execution (_m2 != null)"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "40")))
                                    (rule "false_right" (formula "32"))
                                    (rule "less_than_comparison_simple" (formula "32") (term "1"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "32") (term "0,0,0,1,0"))
                                    (rule "methodCallEmpty" (formula "32") (term "1"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "emptyModality" (formula "32") (term "1"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "notRight" (formula "32"))
                                    (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "30") (term "0,0"))
                                    (rule "qeq_literals" (formula "30") (term "0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "true_left" (formula "30"))
                                    (rule "ifUnfold" (formula "39") (term "1") (inst "#boolv=x"))
                                    (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_14"))
                                    (rule "compound_less_than_comparison_2" (formula "39") (term "1") (inst "#v1=x_16") (inst "#v0=x_15"))
                                    (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                    (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_15"))
                                    (rule "assignment" (formula "39") (term "1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                    (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_16"))
                                    (rule "assignment_read_length" (formula "39") (term "1"))
                                    (branch "Normal Execution (_m2 != null)"
                                       (builtin "One Step Simplification" (formula "40"))
                                       (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "38")))
                                       (rule "false_right" (formula "39"))
                                       (rule "less_than_comparison_simple" (formula "39") (term "1"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "0,0,0,1,0"))
                                       (rule "replace_known_left" (formula "39") (term "0,0,1,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "ifSplit" (formula "39"))
                                       (branch "if x_14 true"
                                          (builtin "One Step Simplification" (formula "40"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "eval_order_array_access2" (formula "39") (term "1") (inst "#v0=x") (inst "#ar1=x_arr"))
                                          (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                          (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_arr_3"))
                                          (rule "assignment" (formula "39") (term "1"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                          (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_17"))
                                          (rule "postincrement_assignment" (formula "39") (term "1") (inst "#v=x_18"))
                                          (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                          (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_18"))
                                          (rule "assignment" (formula "39") (term "1"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "compound_int_cast_expression" (formula "39") (term "1") (inst "#v=x_19"))
                                          (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                          (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_19"))
                                          (rule "remove_parentheses_right" (formula "39") (term "1"))
                                          (rule "assignmentAdditionInt" (formula "39") (term "1"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "translateJavaAddInt" (formula "39") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,1,0"))
                                          (rule "widening_identity_cast_5" (formula "39") (term "1"))
                                          (rule "assignment" (formula "39") (term "1"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "assignment" (formula "39") (term "1"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "eval_order_array_access3" (formula "39") (term "1") (inst "#v1=x_19") (inst "#v2=x_18") (inst "#v0=x_arr_4"))
                                          (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                          (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_arr_4"))
                                          (rule "assignment" (formula "39") (term "1"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                          (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_20"))
                                          (rule "assignment" (formula "39") (term "1"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "ifUnfold" (formula "39") (term "1") (inst "#boolv=x_21"))
                                          (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_21"))
                                          (rule "compound_assignment_5_nonsimple" (formula "39") (term "1"))
                                          (rule "ifElseUnfold" (formula "39") (term "1") (inst "#boolv=x_22"))
                                          (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_22"))
                                          (rule "compound_less_equal_than_comparison_1" (formula "39") (term "1") (inst "#v0=x_23"))
                                          (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                          (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_23"))
                                          (rule "eval_order_array_access6" (formula "39") (term "1") (inst "#v0=x_arr_5"))
                                          (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                          (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_arr_5"))
                                          (rule "remove_parentheses_right" (formula "39") (term "1"))
                                          (rule "assignment" (formula "39") (term "1"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "assignment_read_length" (formula "39") (term "1"))
                                          (branch "Normal Execution (x_arr_5 != null)"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "36")))
                                             (rule "false_right" (formula "39"))
                                             (rule "applyEq" (formula "39") (term "0,1,0") (ifseqformula "3"))
                                             (rule "less_equal_than_comparison_simple" (formula "39") (term "1"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "inEqSimp_homoInEq0" (formula "39") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "39") (term "0,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "39") (term "0,0,1,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "39") (term "0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "39") (term "1,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "39") (term "0,0,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "39") (term "0,0,0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "39") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0,1,0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "39") (term "0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "39") (term "1,1,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "39") (term "0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "39") (term "0,0,0,1,0"))
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "ifElseSplit" (formula "39"))
                                             (branch "if x_22 true"
                                                (builtin "One Step Simplification" (formula "40"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "if x_22 false"
                                                (builtin "One Step Simplification" (formula "40"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "less_than_comparison_simple" (formula "39") (term "1"))
                                                (builtin "One Step Simplification" (formula "39"))
                                                (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,0"))
                                                (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "39") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "39") (term "0,0,0,0,0,1,0"))
                                                (rule "blockEmpty" (formula "39") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0"))
                                                (rule "ifSplit" (formula "39"))
                                                (branch "if x_21 true"
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "blockThrow" (formula "40") (term "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "1"))
                                                   (rule "times_zero_1" (formula "30") (term "0,0"))
                                                   (rule "add_zero_left" (formula "30") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "25"))
                                                   (rule "qeq_literals" (formula "30") (term "0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "closeFalse" (formula "30"))
                                                )
                                                (branch "if x_21 false"
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "inEqSimp_leqRight" (formula "32"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "variableDeclarationAssign" (formula "40") (term "1"))
                                                   (rule "variableDeclaration" (formula "40") (term "1") (newnames "x_24"))
                                                   (rule "assignment_array2" (formula "40") (term "1"))
                                                   (branch "Normal Execution (_m2 != null)"
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "39")))
                                                      (rule "orRight" (formula "40"))
                                                      (rule "inEqSimp_leqRight" (formula "40"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_ltRight" (formula "41"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "pullOutSelect" (formula "41") (term "0,1,0") (inst "selectSK=arr_0"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "14"))
                                                      (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                      (rule "assignment_to_primitive_array_component" (formula "42") (term "1"))
                                                      (branch "Normal Execution (x_arr_4 != null)"
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")) (ifInst ""  (formula "4")))
                                                         (rule "inEqSimp_ltToLeq" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                         (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "7"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                         (rule "mul_literals" (formula "4") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "mul_literals" (formula "3") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_1"))
                                                         (rule "simplifySelectOfAnon" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "14"))
                                                         (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,1,0,0"))
                                                         (rule "pullOutSelect" (formula "2") (term "0,0,0,0,0,1,0,0") (inst "selectSK=java_lang_Object_created__3"))
                                                         (rule "applyEq" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "2"))
                                                         (rule "simplifySelectOfMemset" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "simplifySelectOfStore" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "simplifySelectOfStore" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "simplifySelectOfStore" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "simplifySelectOfCreate" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                                         (rule "castDel" (formula "2") (term "1,0"))
                                                         (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "12"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "applyEqReverse" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0,1,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_2"))
                                                         (rule "simplifySelectOfAnon" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "15"))
                                                         (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                                         (rule "replaceKnownSelect_taclet0011000010202000100_8" (formula "1") (term "0,0,0,1,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0011000010202000100_13" (formula "1") (term "0,0,0,1,0,0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                         (rule "replaceKnownSelect_taclet0011000010202000100_8" (formula "1") (term "0,0,0,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0011000010202000100_13" (formula "1") (term "0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "simplifySelectOfMemset" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0"))
                                                         (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0"))
                                                         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_4"))
                                                         (rule "simplifySelectOfCreate" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                                         (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "preincrement" (formula "44") (term "1"))
                                                         (rule "applyEq_and_int4" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "replace_known_left" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "34"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEq_and_int6" (formula "1") (term "0,1,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,1,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,1,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,1,1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,1,1,0,1,0,0"))
                                                         (rule "distr_existsAnd1" (formula "1") (term "1,0,0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "commute_and" (formula "1") (term "0,0"))
                                                         (rule "compound_int_cast_expression" (formula "44") (term "1") (inst "#v=x"))
                                                         (rule "variableDeclarationAssign" (formula "44") (term "1"))
                                                         (rule "variableDeclaration" (formula "44") (term "1") (newnames "x_25"))
                                                         (rule "remove_parentheses_right" (formula "44") (term "1"))
                                                         (rule "assignmentAdditionInt" (formula "44") (term "1"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "translateJavaAddInt" (formula "44") (term "0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "44") (term "0,1,0"))
                                                         (rule "widening_identity_cast_5" (formula "44") (term "1"))
                                                         (rule "assignment" (formula "44") (term "1"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "tryEmpty" (formula "44") (term "1"))
                                                         (rule "methodCallEmpty" (formula "44") (term "1"))
                                                         (rule "emptyModality" (formula "44") (term "1"))
                                                         (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "43")) (ifInst ""  (formula "41")) (ifInst ""  (formula "42")) (ifInst ""  (formula "43")) (ifInst ""  (formula "9")) (ifInst ""  (formula "20")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0,1,1,0,0,0,1") (ifseqformula "16"))
                                                         (rule "eqSymm" (formula "44") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0,1,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0,1,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,1,0,1,0,1,1,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,1,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,1,0,1,1,1,1,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,1,0,1,1,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,1,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0,1,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,1,0,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "1,0,1,1,1,1,1,0"))
                                                         (rule "polySimp_addComm1" (formula "44") (term "0,1,0,1,1,1,1,1,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "44") (term "1,0,1,1,1,1,1,0"))
                                                         (rule "add_literals" (formula "44") (term "1,1,1,0,1,1,1,1,1,0"))
                                                         (rule "times_zero_1" (formula "44") (term "1,1,0,1,1,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "44") (term "1,0,1,1,1,1,1,0"))
                                                         (rule "dismissNonSelectedField" (formula "44") (term "0,0,1,1,0,0,0,1,1,1,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0,0,1,1,0,0,0,1,1,1,1,1,1,0") (ifseqformula "16"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "1,0,1,1,1,1,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,1,0,1,1,1,1,1,0"))
                                                         (rule "add_zero_left" (formula "44") (term "1,0,1,1,1,1,1,0"))
                                                         (rule "replace_known_left" (formula "44") (term "0,1,1,1,1,1,0") (ifseqformula "30"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "dismissNonSelectedField" (formula "44") (term "0,0,0,0,0,1,1,0,0,0,1"))
                                                         (rule "dismissNonSelectedField" (formula "44") (term "0,0,0,0,0,0,1,1,0,0,0,1,1,1,1,1,0"))
                                                         (rule "applyEq" (formula "44") (term "0,0,1,1,1,1,0") (ifseqformula "8"))
                                                         (rule "polySimp_homoEq" (formula "44") (term "0,1,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "0,1,0,0,1,1,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,0,1,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,1,1,1,0"))
                                                         (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1,1,1,1,0"))
                                                         (rule "add_literals" (formula "44") (term "1,1,0,0,1,1,1,1,0"))
                                                         (rule "times_zero_1" (formula "44") (term "1,0,0,1,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "44") (term "0,0,1,1,1,1,0"))
                                                         (rule "polySimp_addComm1" (formula "44") (term "0,0,1,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0,0,1,1,1,1,0"))
                                                         (rule "add_zero_left" (formula "44") (term "0,0,0,1,1,1,1,0"))
                                                         (rule "applyEq" (formula "44") (term "0,0,1,1,1,0") (ifseqformula "8"))
                                                         (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "44") (term "0,1,0,0,1,1,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "0,0,1,0,0,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,1,1,0"))
                                                         (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_addComm1" (formula "44") (term "0,0,0,0,0,1,1,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0,0,0,0,1,1,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "add_literals" (formula "44") (term "1,1,0,0,0,0,1,1,1,0"))
                                                         (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,1,1,1,0"))
                                                         (rule "add_zero_right" (formula "44") (term "0,0,0,0,1,1,1,0"))
                                                         (rule "applyEq" (formula "44") (term "0,0,1,0") (ifseqformula "30"))
                                                         (rule "inEqSimp_homoInEq0" (formula "44") (term "0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "44") (term "0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "44") (term "1,1,0,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "44") (term "1,0,0,0,1,0"))
                                                         (rule "add_literals" (formula "44") (term "0,0,0,1,0"))
                                                         (rule "applyEq" (formula "44") (term "0,1,1,0,1,1,0") (ifseqformula "30"))
                                                         (rule "polySimp_addComm1" (formula "44") (term "1,0,1,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,1,0,1,1,0"))
                                                         (rule "add_literals" (formula "44") (term "1,1,0,1,0,1,1,0"))
                                                         (rule "times_zero_1" (formula "44") (term "1,0,1,0,1,1,0"))
                                                         (rule "add_zero_right" (formula "44") (term "0,1,0,1,1,0"))
                                                         (rule "replace_known_left" (formula "44") (term "0,1,1,0") (ifseqformula "6"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "applyEq" (formula "44") (term "1,0,0,1,1,1,0") (ifseqformula "30"))
                                                         (rule "polySimp_pullOutFactor2" (formula "44") (term "0,0,1,1,1,0"))
                                                         (rule "add_literals" (formula "44") (term "1,0,0,1,1,1,0"))
                                                         (rule "times_zero_1" (formula "44") (term "0,0,1,1,1,0"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,1,0"))
                                                         (rule "mul_literals" (formula "44") (term "1,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "0,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "0,0,1,1,0"))
                                                         (rule "replace_known_left" (formula "44") (term "0,1,1,0") (ifseqformula "6"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0"))
                                                         (rule "mul_literals" (formula "44") (term "1,0,0"))
                                                         (rule "inEqSimp_subsumption1" (formula "44") (term "0,1,0") (ifseqformula "34"))
                                                         (rule "leq_literals" (formula "44") (term "0,0,1,0"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "inEqSimp_subsumption1" (formula "44") (term "0,0") (ifseqformula "34"))
                                                         (rule "leq_literals" (formula "44") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "nnf_notOr" (formula "44") (term "1,1,0,0,0,0"))
                                                         (rule "nnf_notOr" (formula "44") (term "1,1,0,0,0,1"))
                                                         (rule "nnf_notOr" (formula "44") (term "0,1,1,0,0,0,0"))
                                                         (rule "nnf_notOr" (formula "44") (term "0,1,1,0,0,0,1"))
                                                         (rule "nnf_notOr" (formula "44") (term "0,0,1,1,0,0,0,0"))
                                                         (rule "nnf_notOr" (formula "44") (term "0,0,1,1,0,0,0,1"))
                                                         (rule "nnf_notOr" (formula "44") (term "0,0,0,1,1,0,0,0,0"))
                                                         (rule "ifthenelse_split" (formula "1") (term "0"))
                                                         (branch "m2.length ≥ -3 + i_1 * -1 + i_2 ∧ x_arr_2 = m2 TRUE"
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "43") (term "3,0,0,1,0,0,1") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "applyEq" (formula "39") (term "0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "19") (term "1,0,0,0,0,1,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "24") (term "1,1,0,0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "23") (term "1,0,0,0,0,0,1,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "19") (term "1,0,0,0,0,0,0,1,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "30") (term "1,1,0,0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "14") (term "1,0,0,0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "41") (term "1,0,0,0,0,0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "35") (term "0") (ifseqformula "2"))
                                                            (rule "eqSymm" (formula "35"))
                                                            (rule "applyEq" (formula "41") (term "0,1,0,0,0,0,0,1,0,0,1") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "41") (term "0,1,0,1,1,0,0,1") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "14") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "19") (term "1,0,0,0,1,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "23") (term "1,0,0,0,0,1,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "41") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "23") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "41") (term "1,0,0,1,0,0,1") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "14") (term "0,1,0,0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "41") (term "1,0,0,0,0,0,0,0,0,1,1,0,0,0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "19") (term "1,0,0,0,0,0,1,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "2"))
                                                            (rule "polySimp_homoEq" (formula "6"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                            (rule "add_literals" (formula "6") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "6") (term "1,0"))
                                                            (rule "add_zero_right" (formula "6") (term "0"))
                                                            (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "41") (term "1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "41") (term "1,0,0,0,0,1") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "41") (term "0,1,0,0,0,0,0,0,0,1,1,0,0,0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "41") (term "1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "41") (term "1,0,0,0,0,0,0,0,1,1,0,0,0,1") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "41") (term "0,1,0,0,1,1,0,0,1") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "25") (term "1,1,0,0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "41") (term "1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "23") (term "1,1,0,0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "19") (term "0,1,0,0,1,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "41") (term "0,1,0,0,0,1,0,0,1") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "34") (term "1,1,0,0,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "41") (term "1,0,0,0,0,0,0,0,0,1,1,0,0,0,1") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "23") (term "1,0,0,0,0,0,0,1,0") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "2"))
                                                            (rule "close" (formula "38") (ifseqformula "11"))
                                                         )
                                                         (branch "m2.length ≥ -3 + i_1 * -1 + i_2 ∧ x_arr_2 = m2 FALSE"
                                                            (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "andRight" (formula "44"))
                                                            (branch "Case 1"
                                                               (rule "allRight" (formula "44") (inst "sk=o_5"))
                                                               (rule "orRight" (formula "44"))
                                                               (rule "orRight" (formula "44"))
                                                               (rule "orRight" (formula "46"))
                                                               (rule "orRight" (formula "44"))
                                                               (rule "orRight" (formula "44"))
                                                               (rule "replace_known_right" (formula "46") (term "0,0") (ifseqformula "47"))
                                                               (builtin "One Step Simplification" (formula "46"))
                                                               (rule "pullOutSelect" (formula "46") (term "0,0,0,0,0,0") (inst "selectSK=java_lang_Object_created__5"))
                                                               (rule "simplifySelectOfMemset" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfCreate" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                               (rule "eqSymm" (formula "1") (term "0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "45"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "47") (term "0,0,0,0,0,0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "replace_known_right" (formula "46") (term "0,0,0,0,0") (ifseqformula "48"))
                                                               (builtin "One Step Simplification" (formula "46"))
                                                               (rule "commute_and" (formula "46") (term "0,0"))
                                                               (rule "commute_and_2" (formula "46") (term "0"))
                                                               (rule "commute_and_2" (formula "46"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch "x_arr_2 = m2 TRUE"
                                                                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "inEqSimp_geqRight" (formula "34"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                                  (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "2"))
                                                                  (rule "polySimp_homoEq" (formula "6"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                                  (rule "add_literals" (formula "6") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "6") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "6") (term "0"))
                                                                  (rule "applyEq" (formula "23") (term "1,0,0,0,0,0,1,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "25") (term "1,1,0,0,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "14") (term "1,0,0,0,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "19") (term "1,0,0,0,0,0,1,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "35") (term "0") (ifseqformula "2"))
                                                                  (rule "eqSymm" (formula "35"))
                                                                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "19") (term "1,0,0,0,0,0,0,1,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "23") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "23") (term "1,1,0,0,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "19") (term "1,0,0,0,0,1,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "39") (term "0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "30") (term "1,1,0,0,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "34") (term "1,1,0,0,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "19") (term "1,0,0,0,1,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "24") (term "1,1,0,0,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "2"))
                                                                  (rule "close" (formula "38") (ifseqformula "11"))
                                                               )
                                                               (branch "x_arr_2 = m2 FALSE"
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "35"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "34"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "34") (term "1") (ifseqformula "33"))
                                                                  (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "false_right" (formula "34"))
                                                                  (rule "cut_direct" (formula "43") (term "0,0,0,0"))
                                                                  (branch "CUT: o_5.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                     (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "false_right" (formula "44"))
                                                                     (rule "instAll" (formula "43") (term "0") (ifseqformula "24") (userinteraction))
                                                                     (rule "instAll" (formula "43") (term "0") (ifseqformula "24") (userinteraction))
                                                                     (rule "replace_known_right" (formula "2") (term "1,0") (ifseqformula "47"))
                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "46")) (ifInst ""  (formula "45")) (ifInst ""  (formula "44")) (ifInst ""  (formula "3")))
                                                                     (rule "closeFalse" (formula "2"))
                                                                  )
                                                                  (branch "CUT: o_5.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                     (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "cut_direct" (formula "44") (term "0,0,0"))
                                                                     (branch "CUT: o_5.<created>@anon_heap_LOOP_0«anonHeapFunction» = TRUE TRUE"
                                                                        (builtin "One Step Simplification" (formula "45"))
                                                                        (rule "false_right" (formula "45"))
                                                                        (rule "instAll" (formula "42") (term "0") (ifseqformula "23") (userinteraction))
                                                                        (rule "instAll" (formula "43") (term "0") (ifseqformula "30") (userinteraction))
                                                                        (rule "replace_known_right" (formula "2") (term "1,0,0,0") (ifseqformula "45"))
                                                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "47")) (ifInst ""  (formula "44")) (ifInst ""  (formula "48")))
                                                                        (rule "notLeft" (formula "2"))
                                                                        (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "47"))
                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")) (ifInst ""  (formula "44")) (ifInst ""  (formula "48")) (ifInst ""  (formula "2")))
                                                                        (rule "closeFalse" (formula "1"))
                                                                     )
                                                                     (branch "CUT: o_5.<created>@anon_heap_LOOP_0«anonHeapFunction» = TRUE FALSE"
                                                                        (builtin "One Step Simplification" (formula "45"))
                                                                        (rule "cut_direct" (formula "45") (term "0,1"))
                                                                        (branch "CUT: o_5.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE TRUE"
                                                                           (builtin "One Step Simplification" (formula "46"))
                                                                           (rule "false_right" (formula "46"))
                                                                           (rule "instAll" (formula "45") (term "1,0") (ifseqformula "24") (userinteraction))
                                                                           (rule "instAll" (formula "44") (term "0") (ifseqformula "24") (userinteraction))
                                                                           (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "44"))
                                                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")) (ifInst ""  (formula "45")) (ifInst ""  (formula "49")) (ifInst ""  (formula "46")))
                                                                           (rule "true_left" (formula "2"))
                                                                           (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "2"))
                                                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")) (ifInst ""  (formula "44")) (ifInst ""  (formula "43")) (ifInst ""  (formula "48")))
                                                                           (rule "closeFalse" (formula "1"))
                                                                        )
                                                                        (branch "CUT: o_5.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE FALSE"
                                                                           (builtin "One Step Simplification" (formula "46"))
                                                                           (rule "notRight" (formula "46"))
                                                                           (rule "instAll" (formula "44") (term "1,0") (ifseqformula "33") (userinteraction))
                                                                           (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "2"))
                                                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "44")) (ifInst ""  (formula "43")) (ifInst ""  (formula "49")))
                                                                           (rule "closeFalse" (formula "1"))
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                            (branch
                                                               (rule "allRight" (formula "44") (inst "sk=f_3"))
                                                               (rule "allRight" (formula "44") (inst "sk=o_4"))
                                                               (rule "orRight" (formula "44"))
                                                               (rule "orRight" (formula "44"))
                                                               (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=f_3_0"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                               (rule "eqSymm" (formula "47"))
                                                               (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                               (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "45"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfAnon" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "16"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0,1,0,0"))
                                                               (rule "pullOutSelect" (formula "46") (term "0,0,0,0,0,1") (inst "selectSK=java_lang_Object_created__4"))
                                                               (rule "applyEq" (formula "2") (term "0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                               (rule "simplifySelectOfMemset" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfCreate" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                               (rule "eqSymm" (formula "1") (term "0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "46"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0,1,0,0") (ifseqformula "1"))
                                                               (rule "applyEqReverse" (formula "47") (term "0,0,0,0,0,1") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=f_3_1"))
                                                               (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                                               (rule "simplifySelectOfAnon" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "17"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,1,0,0"))
                                                               (rule "replaceKnownSelect_taclet110011000010202000100_22" (formula "1") (term "0,0,0,0,1,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet110011000010202000100_27" (formula "1") (term "0,0,0,0,1,0,0"))
                                                               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_2"))
                                                               (rule "simplifySelectOfAnon" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "18"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                                               (rule "replaceKnownSelect_taclet110011000010202000100_22" (formula "1") (term "0,0,0,1,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet110011000010202000100_27" (formula "1") (term "0,0,0,1,0,0"))
                                                               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_3"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                               (rule "replaceKnownSelect_taclet110011000010202000100_22" (formula "1") (term "0,0,1,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet110011000010202000100_27" (formula "1") (term "0,0,1,0,0"))
                                                               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_4"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                               (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                               (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "49"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfMemset" (formula "1"))
                                                               (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                                                               (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "49"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                               (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                               (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "49"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                               (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                               (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "49"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                               (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                               (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "49"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfCreate" (formula "1"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                               (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "49"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "commute_and_2" (formula "49") (term "0,1"))
                                                               (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                                                               (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                                               (rule "commute_and_2" (formula "49") (term "1"))
                                                               (rule "ifthenelse_split" (formula "5") (term "0"))
                                                               (branch "x_arr_2 = m2 TRUE"
                                                                  (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                                  (rule "hideAuxiliaryEq" (formula "6"))
                                                                  (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "5"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                                  (rule "hideAuxiliaryEq" (formula "6"))
                                                                  (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "5"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "hideAuxiliaryEq" (formula "6"))
                                                                  (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "5"))
                                                                  (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "inEqSimp_geqRight" (formula "38"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                                  (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "6"))
                                                                  (rule "applyEq" (formula "27") (term "1,0,0,0,0,0,1,0") (ifseqformula "6"))
                                                                  (rule "applyEq" (formula "23") (term "1,0,0,0,1,0") (ifseqformula "6"))
                                                                  (rule "applyEq" (formula "23") (term "1,0,0,0,0,1,0") (ifseqformula "6"))
                                                                  (rule "applyEq" (formula "18") (term "1,0,0,0,0,0,0") (ifseqformula "6"))
                                                                  (rule "applyEq" (formula "34") (term "1,1,0,0,0") (ifseqformula "6"))
                                                                  (rule "applyEq" (formula "23") (term "1,0,0,0,0,0,1,0") (ifseqformula "6"))
                                                                  (rule "applyEq" (formula "39") (term "0") (ifseqformula "6"))
                                                                  (rule "eqSymm" (formula "39"))
                                                                  (rule "applyEq" (formula "28") (term "1,1,0,0,0") (ifseqformula "6"))
                                                                  (rule "applyEq" (formula "18") (term "0,1,0,0,0") (ifseqformula "6"))
                                                                  (rule "applyEq" (formula "18") (term "1,0,0,0,0") (ifseqformula "6"))
                                                                  (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "6"))
                                                                  (rule "polySimp_homoEq" (formula "10"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                                                                  (rule "add_literals" (formula "10") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "10") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "10") (term "0"))
                                                                  (rule "applyEq" (formula "27") (term "1,1,0,0,0") (ifseqformula "6"))
                                                                  (rule "applyEq" (formula "18") (term "1,0,0,0,0,0,0,0") (ifseqformula "6"))
                                                                  (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "6"))
                                                                  (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "6"))
                                                                  (rule "close" (formula "42") (ifseqformula "15"))
                                                               )
                                                               (branch "x_arr_2 = m2 FALSE"
                                                                  (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                                  (rule "hideAuxiliaryEq" (formula "5"))
                                                                  (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "39"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                                  (rule "hideAuxiliaryEq" (formula "5"))
                                                                  (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "38"))
                                                                  (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "hideAuxiliaryEq" (formula "5"))
                                                                  (rule "replace_known_right" (formula "38") (term "1") (ifseqformula "37"))
                                                                  (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "false_right" (formula "38"))
                                                                  (rule "commute_or_2" (formula "4") (term "0,1,0,0"))
                                                                  (rule "shift_paren_and" (formula "46"))
                                                                  (rule "shift_paren_and" (formula "46") (term "0"))
                                                                  (rule "shift_paren_and" (formula "46") (term "0,0"))
                                                                  (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                  (branch "¬o_4 = null ∧ ¬o_4.<created> = TRUE TRUE"
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "37"))
                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "37"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")))
                                                                     (rule "replace_known_right" (formula "47") (term "0,1,0,0,0") (ifseqformula "36"))
                                                                     (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "37")))
                                                                     (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                     (rule "ifthenelse_negated" (formula "3") (term "0"))
                                                                     (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                     (branch " o_4.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE TRUE"
                                                                        (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                                                        (rule "hideAuxiliaryEq" (formula "2"))
                                                                        (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "2"))
                                                                        (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                                                        (rule "hideAuxiliaryEq" (formula "2"))
                                                                        (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "47")))
                                                                        (rule "closeFalse" (formula "2"))
                                                                     )
                                                                     (branch " o_4.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE FALSE"
                                                                        (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "35"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "35"))
                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "replace_known_right" (formula "47") (term "0,1") (ifseqformula "35"))
                                                                        (builtin "One Step Simplification" (formula "47"))
                                                                        (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                        (branch "o_4.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                           (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                                                           (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "2"))
                                                                           (rule "hideAuxiliaryEq" (formula "2"))
                                                                           (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                        (branch "o_4.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                           (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                           (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                                                           (rule "hideAuxiliaryEq" (formula "1"))
                                                                           (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "34"))
                                                                           (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "replace_known_right" (formula "47") (term "0,0") (ifseqformula "34"))
                                                                           (builtin "One Step Simplification" (formula "47"))
                                                                           (rule "notRight" (formula "47"))
                                                                           (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                                                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch "¬o_4 = null ∧ ¬o_4.<created> = TRUE FALSE"
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "replace_known_right" (formula "46") (term "0,0,0") (ifseqformula "36"))
                                                                     (builtin "One Step Simplification" (formula "46"))
                                                                     (rule "false_right" (formula "46"))
                                                                     (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                     (branch " ¬o_4 = null ∧ ¬( o_4.<created> = TRUE ∨ o_4.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                                        (rule "andLeft" (formula "1"))
                                                                        (rule "notLeft" (formula "1"))
                                                                        (rule "notLeft" (formula "1"))
                                                                        (rule "orRight" (formula "36"))
                                                                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "36"))
                                                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "35")))
                                                                        (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "37"))
                                                                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")) (ifInst ""  (formula "36")))
                                                                        (rule "replace_known_right" (formula "38") (term "0,1") (ifseqformula "35"))
                                                                        (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "37")))
                                                                        (rule "closeTrue" (formula "38"))
                                                                     )
                                                                     (branch " ¬o_4 = null ∧ ¬( o_4.<created> = TRUE ∨ o_4.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                        (branch " ¬o_4 = null ∧ ¬( o_4.<created> = TRUE ∨ o_4.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE ∨ o_4.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                                           (rule "andLeft" (formula "1"))
                                                                           (rule "notLeft" (formula "1"))
                                                                           (rule "notLeft" (formula "1"))
                                                                           (rule "orRight" (formula "35"))
                                                                           (rule "orRight" (formula "35"))
                                                                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                           (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "1"))
                                                                           (rule "hideAuxiliaryEq" (formula "1"))
                                                                           (rule "replace_known_right" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "35"))
                                                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "34")) (ifInst ""  (formula "36")))
                                                                           (rule "replace_known_right" (formula "39") (term "0,1") (ifseqformula "34"))
                                                                           (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "37")))
                                                                           (rule "closeTrue" (formula "39"))
                                                                        )
                                                                        (branch " ¬o_4 = null ∧ ¬( o_4.<created> = TRUE ∨ o_4.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE ∨ o_4.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                                           (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                                                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                           (rule "hideAuxiliaryEq" (formula "1"))
                                                                           (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                           (branch " ¬o_4 = null ∧ ¬( o_4.<created> = TRUE ∨ o_4.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE ∨ o_4.<created>@anon_heap_LOOP_0«anonHeapFunction» = TRUE ∨ o_4.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                                              (rule "andLeft" (formula "1"))
                                                                              (rule "notLeft" (formula "2"))
                                                                              (rule "notLeft" (formula "1"))
                                                                              (rule "orRight" (formula "35"))
                                                                              (rule "orRight" (formula "35"))
                                                                              (rule "orRight" (formula "35"))
                                                                              (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "1"))
                                                                              (rule "hideAuxiliaryEq" (formula "1"))
                                                                              (rule "eqSymm" (formula "50"))
                                                                              (rule "replace_known_right" (formula "40") (term "0,1") (ifseqformula "34"))
                                                                              (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "33")))
                                                                              (rule "closeTrue" (formula "40"))
                                                                           )
                                                                           (branch " ¬o_4 = null ∧ ¬( o_4.<created> = TRUE ∨ o_4.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE ∨ o_4.<created>@anon_heap_LOOP_0«anonHeapFunction» = TRUE ∨ o_4.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                                              (rule "close" (formula "47") (ifseqformula "1"))
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "Null Reference (x_arr_4 = null)"
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch "Index Out of Bounds (x_arr_4 != null, but x_20 Out of Bounds!)"
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                                         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                         (rule "add_literals" (formula "1") (term "0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,1"))
                                                         (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "7"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "1") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "0,0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                         (rule "mul_literals" (formula "4") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "mul_literals" (formula "3") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "1") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0"))
                                                         (rule "add_literals" (formula "1") (term "0"))
                                                         (rule "leq_literals" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                   (branch "Null Reference (_m2 = null)"
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch "Index Out of Bounds (_m2 != null, but i Out of Bounds!)"
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                                      (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "1") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "31"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "Null Reference (x_arr_5 = null)"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch "if x_14 false"
                                          (builtin "One Step Simplification" (formula "40"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch "Null Reference (_m2 = null)"
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch "Null Reference (_m2 = null)"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch "Use Case"
                                 (builtin "One Step Simplification" (formula "36"))
                                 (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "35")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")) (ifInst ""  (formula "3")) (ifInst ""  (formula "14")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,0,1,1,0,0,0,1,1,1,1,1,1") (ifseqformula "10"))
                                 (rule "translateJavaAddInt" (formula "28") (term "1,0,1,1,1,1,1"))
                                 (rule "translateJavaAddInt" (formula "28") (term "1,0,1,1,1,1"))
                                 (rule "translateJavaAddInt" (formula "28") (term "1,0,1,1"))
                                 (rule "translateJavaAddInt" (formula "28") (term "0,0,1"))
                                 (rule "translateJavaAddInt" (formula "28") (term "0,1,0,1,1,1,1,1"))
                                 (rule "translateJavaAddInt" (formula "28") (term "0,1,0,1,1,1,1"))
                                 (rule "translateJavaAddInt" (formula "28") (term "0,1,0,1,1"))
                                 (rule "andLeft" (formula "28"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "andLeft" (formula "31"))
                                 (rule "andLeft" (formula "32"))
                                 (rule "andLeft" (formula "33"))
                                 (rule "polySimp_homoEq" (formula "33"))
                                 (rule "polySimp_addComm0" (formula "29") (term "0"))
                                 (rule "polySimp_addComm0" (formula "30") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "32") (term "1"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "1"))
                                 (rule "polySimp_addComm0" (formula "32") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0"))
                                 (rule "polySimp_addComm0" (formula "30") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "33") (term "0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "34") (term "0,0,0,0,0,1,1,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "28"))
                                 (rule "inEqSimp_commuteLeq" (formula "31"))
                                 (rule "inEqSimp_homoInEq0" (formula "29"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                 (rule "polySimp_addComm0" (formula "29") (term "0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "30"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                 (rule "variableDeclarationAssign" (formula "42") (term "1"))
                                 (rule "variableDeclaration" (formula "42") (term "1") (newnames "b_2_1"))
                                 (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "24"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "32"))
                                 (rule "polySimp_homoEq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                 (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "2") (term "0,0"))
                                 (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "24"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0"))
                                 (rule "applyEq" (formula "31") (term "0") (ifseqformula "32"))
                                 (rule "inEqSimp_homoInEq1" (formula "31"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "0,1,0"))
                                 (rule "mul_literals" (formula "31") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "31") (term "0,0,0"))
                                 (rule "applyEq" (formula "32") (term "1,0,1") (ifseqformula "24"))
                                 (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "24"))
                                 (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,0"))
                                 (rule "times_zero_1" (formula "2") (term "0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "applyEq" (formula "29") (term "1,0,0") (ifseqformula "23"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                 (rule "applyEq" (formula "30") (term "0,1,0,0") (ifseqformula "23"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                 (rule "blockEmpty" (formula "41") (term "1,0,1"))
                                 (rule "polySimp_sepNegMonomial" (formula "32"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "0"))
                                 (rule "applyEqRigid" (formula "28") (term "1,0") (ifseqformula "32"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "28") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor2" (formula "28") (term "0,0"))
                                 (rule "add_literals" (formula "28") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "28") (term "0,0"))
                                 (rule "add_zero_left" (formula "28") (term "0"))
                                 (rule "applyEq" (formula "28") (term "0,1,0,0") (ifseqformula "31"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "28") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "28") (term "0,0,0"))
                                 (rule "add_literals" (formula "28") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "28") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "28") (term "0,0"))
                                 (rule "applyEq" (formula "29") (term "1,0,0") (ifseqformula "31"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "29") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor2" (formula "29") (term "0,0,0"))
                                 (rule "add_literals" (formula "29") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "29") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "29") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "0"))
                                 (rule "nnf_notAnd" (formula "31") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "nnf_imp2or" (formula "31") (term "0"))
                                 (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "nnf_notAnd" (formula "31") (term "0,0,0"))
                                 (rule "nnf_notAnd" (formula "31") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "nnf_notOr" (formula "31") (term "1,0,0,0"))
                                 (rule "nnf_notOr" (formula "31") (term "1,1,0,0,0"))
                                 (rule "nnf_notOr" (formula "31") (term "0,1,1,0,0,0"))
                                 (rule "nnf_notOr" (formula "31") (term "0,0,1,1,0,0,0"))
                                 (rule "nnf_notOr" (formula "31") (term "0,0,0,1,1,0,0,0"))
                                 (rule "commute_or" (formula "31") (term "1,0"))
                                 (rule "commute_or_2" (formula "31") (term "0,0"))
                                 (rule "commute_or_2" (formula "31") (term "0"))
                                 (rule "commute_or_2" (formula "31") (term "0,0,0"))
                                 (rule "shift_paren_or" (formula "31") (term "0,0"))
                                 (rule "commute_or_2" (formula "31") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "cnf_rightDist" (formula "31") (term "0"))
                                 (rule "distr_forallAnd" (formula "31"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "castDel" (formula "31") (term "0,1,0,0,0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "commute_or" (formula "31") (term "0"))
                                 (rule "cnf_rightDist" (formula "31") (term "0"))
                                 (rule "distr_forallAnd" (formula "31"))
                                 (rule "andLeft" (formula "31"))
                                 (rule "commute_or" (formula "32") (term "0"))
                                 (rule "cnf_rightDist" (formula "31") (term "0"))
                                 (rule "distr_forallAnd" (formula "31"))
                                 (rule "andLeft" (formula "31"))
                                 (rule "commute_or" (formula "32") (term "0"))
                                 (rule "cnf_rightDist" (formula "31") (term "0"))
                                 (rule "distr_forallAnd" (formula "31"))
                                 (rule "andLeft" (formula "31"))
                                 (rule "commute_or" (formula "32") (term "0"))
                                 (rule "cnf_rightDist" (formula "31") (term "0"))
                                 (rule "distr_forallAnd" (formula "31"))
                                 (rule "andLeft" (formula "31"))
                                 (rule "commute_or" (formula "32") (term "0"))
                                 (rule "compound_less_than_comparison_2" (formula "43") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
                                 (rule "variableDeclarationAssign" (formula "43") (term "1"))
                                 (rule "variableDeclaration" (formula "43") (term "1") (newnames "x_10"))
                                 (rule "assignment" (formula "43") (term "1"))
                                 (builtin "One Step Simplification" (formula "43"))
                                 (rule "variableDeclarationAssign" (formula "43") (term "1"))
                                 (rule "variableDeclaration" (formula "43") (term "1") (newnames "x_11"))
                                 (rule "assignment_read_length" (formula "43") (term "1"))
                                 (branch "Normal Execution (_m2 != null)"
                                    (builtin "One Step Simplification" (formula "44"))
                                    (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "42")))
                                    (rule "false_right" (formula "43"))
                                    (rule "commute_or" (formula "35") (term "0,0,0,0"))
                                    (rule "commute_or" (formula "34") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "35") (term "0,0,0"))
                                    (rule "commute_or_2" (formula "34") (term "0,0,0"))
                                    (rule "commute_or" (formula "33") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "33") (term "0,0,0"))
                                    (rule "commute_or" (formula "31") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "31") (term "0,0,0"))
                                    (rule "commute_or" (formula "31") (term "0,0,0,0"))
                                    (rule "commute_or_2" (formula "31") (term "0,0,0"))
                                    (rule "less_than_comparison_simple" (formula "39") (term "1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "0,0,0,1,0"))
                                    (rule "methodCallEmpty" (formula "39") (term "1"))
                                    (rule "emptyModality" (formula "39") (term "1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "impRight" (formula "39"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "inEqSimp_geqRight" (formula "32"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "inEqSimp_antiSymm" (formula "29") (ifseqformula "1"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "29"))
                                    (rule "inEqSimp_homoInEq0" (formula "1"))
                                    (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,0"))
                                    (rule "times_zero_1" (formula "1") (term "0"))
                                    (rule "qeq_literals" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "13") (term "1,2,1,0,0,1,0") (ifseqformula "27"))
                                    (rule "applyEq" (formula "15") (term "0") (ifseqformula "27"))
                                    (rule "applyEq" (formula "8") (term "1,2,1,0,0,0") (ifseqformula "27"))
                                    (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,1,0") (ifseqformula "27"))
                                    (rule "applyEq" (formula "28") (term "0") (ifseqformula "27"))
                                    (rule "inEqSimp_homoInEq1" (formula "28"))
                                    (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                    (rule "add_literals" (formula "28") (term "1,0"))
                                    (rule "times_zero_1" (formula "28") (term "0"))
                                    (rule "leq_literals" (formula "28"))
                                    (rule "true_left" (formula "28"))
                                    (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "27"))
                                    (rule "methodCallReturn" (formula "38") (term "1"))
                                    (rule "assignment" (formula "38") (term "1"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "methodCallEmpty" (formula "38") (term "1"))
                                    (rule "tryEmpty" (formula "38") (term "1"))
                                    (rule "emptyModality" (formula "38") (term "1"))
                                    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "2")) (ifInst ""  (formula "36")) (ifInst ""  (formula "37")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")) (ifInst ""  (formula "35")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,0,0,0,1,1,0,0,0,1,0") (ifseqformula "8"))
                                    (rule "eqSymm" (formula "38") (term "1,0,0,1"))
                                    (rule "dismissNonSelectedField" (formula "38") (term "0,0,0,0,0,0,1,1,0,0,0,1,0"))
                                    (rule "applyEq" (formula "38") (term "0,0,0") (ifseqformula "28"))
                                    (rule "polySimp_homoEq" (formula "38") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "38") (term "0,0,0,0,0,0"))
                                    (rule "applyEq" (formula "38") (term "1,0,0,0") (ifseqformula "27"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "38") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "38") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,0,0"))
                                    (rule "applyEq" (formula "38") (term "1,0,0,0") (ifseqformula "22"))
                                    (rule "polySimp_pullOutFactor2" (formula "38") (term "0,0,0"))
                                    (rule "add_literals" (formula "38") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "38") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "nnf_notOr" (formula "38") (term "1,1,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "38") (term "0,1,1,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "38") (term "0,0,1,1,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "38") (term "0,0,0,1,1,0,0,0,0"))
                                    (rule "andRight" (formula "38"))
                                    (branch "Case 1"
                                       (rule "allRight" (formula "38") (inst "sk=o_3"))
                                       (rule "orRight" (formula "38"))
                                       (rule "orRight" (formula "39"))
                                       (rule "orRight" (formula "38"))
                                       (rule "orRight" (formula "38"))
                                       (rule "replace_known_right" (formula "39") (term "0,0") (ifseqformula "41"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "pullOutSelect" (formula "39") (term "0,0,0,0,0,0") (inst "selectSK=java_lang_Object_created__2"))
                                       (rule "simplifySelectOfMemset" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0"))
                                       (rule "apply_eq_boolean" (formula "1") (term "2,0") (ifseqformula "41"))
                                       (rule "commute_and_2" (formula "40") (term "0,0"))
                                       (rule "commute_and_2" (formula "40") (term "0"))
                                       (rule "commute_and_2" (formula "40"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "o_3 = x_arr_2 TRUE"
                                          (rule "applyEqReverse" (formula "41") (term "0,0,0,0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "41"))
                                          (rule "false_right" (formula "41"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEq" (formula "41") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "1"))
                                          (rule "close" (formula "39") (ifseqformula "3"))
                                       )
                                       (branch "o_3 = x_arr_2 FALSE"
                                          (rule "applyEqReverse" (formula "41") (term "0,0,0,0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "41"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "cut_direct" (formula "40") (term "0,0,0,0"))
                                          (branch "CUT: o_3.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "false_right" (formula "41"))
                                             (rule "instAll" (formula "41") (term "1,0") (ifseqformula "20") (userinteraction))
                                             (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "33")) (ifInst ""  (formula "42")))
                                             (rule "applyEq" (formula "33") (term "0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "33"))
                                             (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "41") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "1"))
                                             (rule "close" (formula "40") (ifseqformula "14"))
                                          )
                                          (branch "CUT: o_3.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "cut_direct" (formula "41") (term "0,1,0"))
                                             (branch "CUT: o_3.<created>@anon_heap_LOOP_1«anonHeapFunction» = TRUE TRUE"
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "false_right" (formula "42"))
                                                (rule "instAll" (formula "41") (term "1,0") (ifseqformula "25") (userinteraction))
                                                (rule "instAll" (formula "43") (term "1,0") (ifseqformula "32") (userinteraction))
                                                (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "34"))
                                                (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "45")) (ifInst ""  (formula "44")))
                                                (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")) (ifInst ""  (formula "34")) (ifInst ""  (formula "44")))
                                                (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "1"))
                                                (rule "close" (formula "41") (ifseqformula "14"))
                                             )
                                             (branch "CUT: o_3.<created>@anon_heap_LOOP_1«anonHeapFunction» = TRUE FALSE"
                                                (builtin "One Step Simplification" (formula "42"))
                                                (rule "cut_direct" (formula "42") (term "0,1"))
                                                (branch "CUT: o_3.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE TRUE"
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "false_right" (formula "43"))
                                                   (rule "instAll" (formula "41") (term "1,0") (ifseqformula "20") (userinteraction))
                                                   (rule "instAll" (formula "42") (term "1,0") (ifseqformula "20") (userinteraction))
                                                   (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "34"))
                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "46")) (ifInst ""  (formula "45")) (ifInst ""  (formula "43")))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "replace_known_right" (formula "1") (term "1,0") (ifseqformula "44"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")) (ifInst ""  (formula "33")) (ifInst ""  (formula "2")))
                                                   (rule "applyEq" (formula "33") (term "0") (ifseqformula "1"))
                                                   (rule "eqSymm" (formula "33"))
                                                   (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "43") (term "0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "1"))
                                                   (rule "close" (formula "40") (ifseqformula "14"))
                                                )
                                                (branch "CUT: o_3.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE FALSE"
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "notRight" (formula "43"))
                                                   (rule "instAll" (formula "32") (term "0") (ifseqformula "19") (userinteraction))
                                                   (rule "instAll" (formula "33") (term "0") (ifseqformula "26") (userinteraction))
                                                   (rule "replace_known_right" (formula "1") (term "1,0") (ifseqformula "46"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")) (ifInst ""  (formula "34")) (ifInst ""  (formula "3")))
                                                   (rule "replace_known_right" (formula "2") (term "0,1") (ifseqformula "45"))
                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "47")) (ifInst ""  (formula "1")) (ifInst ""  (formula "34")) (ifInst ""  (formula "46")))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "applyEq" (formula "46") (term "0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "42") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "1"))
                                                   (rule "close" (formula "41") (ifseqformula "14"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch
                                       (rule "allRight" (formula "38") (inst "sk=f_2"))
                                       (rule "allRight" (formula "38") (inst "sk=o_2"))
                                       (rule "orRight" (formula "38"))
                                       (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=f_2_0"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,1,0,0") (ifseqformula "9"))
                                       (rule "eqSymm" (formula "40"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0,1,1,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_1"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "10"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,1,1,0,0"))
                                       (rule "pullOutSelect" (formula "2") (term "0,0,0,0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__1"))
                                       (rule "applyEq" (formula "1") (term "0,0,0,0,1,1,0,0") (ifseqformula "2"))
                                       (rule "simplifySelectOfMemset" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "simplifySelectOfStore" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "simplifySelectOfStore" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "simplifySelectOfStore" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_2"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "12"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                                       (rule "replaceKnownSelect_taclet1020202000100_8" (formula "1") (term "0,0,0,1,1,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "replaceKnownSelect_taclet1020202000100_8" (formula "1") (term "0,0,1,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_4"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_5"))
                                       (rule "simplifySelectOfMemset" (formula "1"))
                                       (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_6"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_7"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_8"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_9"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "46"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "commute_and" (formula "11") (term "0,0,0"))
                                       (rule "commute_and" (formula "9") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "9") (term "0,1,1,0,0"))
                                       (rule "commute_and" (formula "7") (term "0,0"))
                                       (rule "commute_and" (formula "6") (term "0,0"))
                                       (rule "commute_and" (formula "8") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "11") (term "0,0,1,1,0,0"))
                                       (rule "commute_and" (formula "4") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0"))
                                       (rule "commute_and" (formula "1") (term "0,0"))
                                       (rule "commute_or_2" (formula "11") (term "0,1,1,0,0"))
                                       (rule "ifthenelse_split" (formula "10") (term "0"))
                                       (branch "o_2 = x_arr_2 TRUE"
                                          (rule "applyEqReverse" (formula "12") (term "0,0,0,0,0,1,1,0,0") (ifseqformula "11"))
                                          (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "10")))
                                          (rule "applyEqReverse" (formula "7") (term "0,0,0,0,0") (ifseqformula "11"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqReverse" (formula "8") (term "0,0,0,1,1,0,0") (ifseqformula "11"))
                                          (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "10")))
                                          (rule "applyEqReverse" (formula "9") (term "0,0,0,0,1,1,0,0") (ifseqformula "11"))
                                          (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "10")))
                                          (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "11"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "9"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "9"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "9"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "9"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "9"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "9"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "ifthenelse_negated" (formula "10") (term "0"))
                                          (rule "ifthenelse_negated" (formula "8") (term "0"))
                                          (rule "ifthenelse_negated" (formula "7") (term "0"))
                                          (rule "applyEq" (formula "10") (term "1,2,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "48") (term "1,0,0,1") (ifseqformula "9"))
                                          (rule "replace_known_right" (formula "48") (term "0,1") (ifseqformula "44"))
                                          (builtin "One Step Simplification" (formula "48"))
                                          (rule "notRight" (formula "48"))
                                          (rule "applyEq" (formula "9") (term "1,2,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "8") (term "1,2,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "49") (term "1,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "10"))
                                          (rule "close" (formula "46") (ifseqformula "1"))
                                       )
                                       (branch "o_2 = x_arr_2 FALSE"
                                          (rule "applyEqReverse" (formula "8") (term "0,0,0,1,1,0,0") (ifseqformula "10"))
                                          (rule "applyEqReverse" (formula "9") (term "0,0,0,0,1,1,0,0") (ifseqformula "10"))
                                          (rule "applyEqReverse" (formula "7") (term "0,0,0,0,0") (ifseqformula "10"))
                                          (rule "applyEqReverse" (formula "11") (term "0,0,0,0,0,1,1,0,0") (ifseqformula "10"))
                                          (rule "hideAuxiliaryEq" (formula "10"))
                                          (rule "replace_known_right" (formula "8") (term "1,0,0,0") (ifseqformula "41"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "41"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_right" (formula "7") (term "1,0,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "43"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "34"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")) (ifInst ""  (formula "33")))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")) (ifInst ""  (formula "34")))
                                             (rule "replace_known_right" (formula "44") (term "0,0") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "33")))
                                             (rule "closeTrue" (formula "44"))
                                          )
                                          (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE ∨ o_2.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "orRight" (formula "33"))
                                                (rule "orRight" (formula "33"))
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")))
                                                (rule "replace_known_right" (formula "45") (term "0,1") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "35")))
                                                (rule "closeTrue" (formula "45"))
                                             )
                                             (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE ∨ o_2.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE ∨ o_2.<created>@anon_heap_LOOP_0«anonHeapFunction» = TRUE ∨ o_2.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "orRight" (formula "32"))
                                                   (rule "orRight" (formula "32"))
                                                   (rule "orRight" (formula "32"))
                                                   (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "eqSymm" (formula "47"))
                                                   (rule "replace_known_right" (formula "46") (term "0,1") (ifseqformula "31"))
                                                   (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "35")))
                                                   (rule "closeTrue" (formula "46"))
                                                )
                                                (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE ∨ o_2.<created>@anon_heap_LOOP_0«anonHeapFunction» = TRUE ∨ o_2.<created>@anon_heap_intToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                   (rule "close" (formula "44") (ifseqformula "1"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "Null Reference (_m2 = null)"
                                    (builtin "One Step Simplification" (formula "44"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch "Null Reference (_m1 = null)"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "Null Reference (len = null)"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "Exceptional Post (intToByteArray)"
                  (builtin "One Step Simplification" (formula "11"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "andLeft" (formula "11"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,0") (ifseqformula "11"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,1,0,0,0,1,1,1,0,0,1") (ifseqformula "11"))
                  (rule "andLeft" (formula "12"))
                  (rule "andLeft" (formula "13"))
                  (rule "andLeft" (formula "12"))
                  (rule "andLeft" (formula "14"))
                  (rule "notLeft" (formula "12"))
                  (rule "close" (formula "16") (ifseqformula "15"))
               )
               (branch "Pre (intToByteArray)"
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "wellFormedStorePrimitive" (formula "14"))
                  (rule "wellFormedMemsetArrayPrimitive" (formula "14"))
                  (rule "wellFormedStorePrimitive" (formula "14"))
                  (rule "wellFormedStorePrimitive" (formula "14"))
                  (rule "wellFormedStorePrimitive" (formula "14"))
                  (rule "wellFormedCreate" (formula "14"))
                  (rule "close" (formula "14") (ifseqformula "6"))
               )
            )
            (branch "Null Reference (_m1 = null)"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (newObject = null)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Null Reference (_m2 = null)"
      (builtin "One Step Simplification" (formula "1"))
      (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "true_left" (formula "4"))
      (rule "applyEq" (formula "6") (term "0,1,0,0,0,0") (ifseqformula "1"))
      (rule "blockThrow" (formula "6") (term "1"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "throwUnfold" (formula "6") (term "1") (inst "#v0=n"))
      (rule "variableDeclarationAssign" (formula "6") (term "1"))
      (rule "variableDeclaration" (formula "6") (term "1") (newnames "n_1"))
      (builtin "Use Operation Contract" (formula "6") (newnames "heapBefore_NullPointerException_0,self_0,exc_1,heapAfter_NullPointerException_0,anon_heap_NullPointerException_0") (contract "java.lang.NullPointerException[java.lang.NullPointerException::NullPointerException()].JML normal_behavior operation contract.0"))
      (branch "Post (NullPointerException)"
         (builtin "One Step Simplification" (formula "8"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "andLeft" (formula "6"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "7") (term "1,1,0,1,0") (ifseqformula "6"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "8"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "8"))
         (rule "andLeft" (formula "11"))
         (rule "notLeft" (formula "8"))
         (rule "andLeft" (formula "8"))
         (rule "notLeft" (formula "8"))
         (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "assignment" (formula "16") (term "1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=java_lang_Throwable_cause_1"))
         (rule "simplifySelectOfAnonEQ" (formula "11") (ifseqformula "6"))
         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "15")) (ifInst ""  (formula "14")))
         (rule "applyEqReverse" (formula "12") (term "0") (ifseqformula "11"))
         (rule "hideAuxiliaryEq" (formula "11"))
         (rule "pullOutSelect" (formula "10") (term "0") (inst "selectSK=java_lang_Throwable_message_1"))
         (rule "simplifySelectOfAnonEQ" (formula "10") (ifseqformula "6"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "15")) (ifInst ""  (formula "14")))
         (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "10"))
         (rule "hideAuxiliaryEq" (formula "10"))
         (rule "commuteUnion" (formula "6") (term "1,0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "0") (ifseqformula "5"))
         (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "11"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "true_left" (formula "10"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0") (ifseqformula "5"))
         (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "true_left" (formula "11"))
         (rule "methodCallParamThrow" (formula "16") (term "1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "tryCatchThrow" (formula "16") (term "1"))
         (rule "ifElseUnfold" (formula "16") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_4"))
         (rule "equality_comparison_simple" (formula "16") (term "1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "replace_known_right" (formula "16") (term "0,0,1,0") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "ifElseSplit" (formula "16"))
         (branch "if x_4 true"
            (builtin "One Step Simplification" (formula "17"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_4 false"
            (builtin "One Step Simplification" (formula "17"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "ifElseSplit" (formula "16"))
            (branch "if n_1 instanceof java.lang.Throwable true"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
               (rule "true_left" (formula "1"))
               (rule "variableDeclaration" (formula "16") (term "1") (newnames "e_1"))
               (rule "reference_type_cast" (formula "16") (term "1"))
               (branch "Normal Execution (n_1 instanceof java.lang.Throwable)"
                  (builtin "One Step Simplification" (formula "17"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "assignment" (formula "16") (term "1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "emptyModality" (formula "16") (term "1"))
                  (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "14")) (ifInst ""  (formula "14")))
                  (rule "allRight" (formula "16") (inst "sk=f_1"))
                  (rule "allRight" (formula "16") (inst "sk=o_1"))
                  (rule "orRight" (formula "16"))
                  (rule "eqSymm" (formula "17"))
                  (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=f_1_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "7"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                  (rule "eqSymm" (formula "18"))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                  (rule "commute_and" (formula "1") (term "1,0,0,0"))
                  (rule "commute_and" (formula "1") (term "0,0,0,0"))
                  (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
                  (rule "commute_or" (formula "1") (term "0,0,0,0"))
                  (rule "cnf_rightDist" (formula "1") (term "1,0,0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "commute_or" (formula "1") (term "0,1,0,0,0"))
                  (rule "commute_and" (formula "1") (term "1,0,0,0"))
                  (rule "cnf_rightDist" (formula "1") (term "0,0,0,0"))
                  (rule "commute_and_2" (formula "1") (term "0,0,0"))
                  (rule "commute_or" (formula "1") (term "1,0,0,0"))
                  (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
                  (rule "shift_paren_and" (formula "1") (term "0,0,0,0"))
                  (rule "commute_and_2" (formula "1") (term "0,0"))
                  (rule "commute_and_2" (formula "1") (term "0,0,0"))
                  (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                  (rule "commute_and" (formula "1") (term "0,0,0,0,0"))
                  (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
                  (rule "ifthenelse_split" (formula "1") (term "0"))
                  (branch " ¬f_1 = java.lang.Object::<created> ∧ o_1 = self_0 ∧ (f_1 = Throwable::$cause ∨ f_1 = Throwable::$message) ∧ (f_1 = Throwable::$cause ∨ o_1 = self_0) ∧ (f_1 = Throwable::$message ∨ o_1 = self_0) TRUE"
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "eqSymm" (formula "22"))
                     (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "1"))
                     (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "notRight" (formula "19"))
                     (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "2"))
                     (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                     (rule "close" (formula "17") (ifseqformula "1"))
                  )
                  (branch " ¬f_1 = java.lang.Object::<created> ∧ o_1 = self_0 ∧ (f_1 = Throwable::$cause ∨ f_1 = Throwable::$message) ∧ (f_1 = Throwable::$cause ∨ o_1 = self_0) ∧ (f_1 = Throwable::$message ∨ o_1 = self_0) FALSE"
                     (rule "close" (formula "19") (ifseqformula "1"))
                  )
               )
               (branch "ClassCastException (!(n_1 instanceof java.lang.Throwable))"
                  (builtin "One Step Simplification" (formula "17"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "closeTrue" (formula "16"))
               )
            )
            (branch "if n_1 instanceof java.lang.Throwable false"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Exceptional Post (NullPointerException)"
         (builtin "One Step Simplification" (formula "6"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "andLeft" (formula "6"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "7") (term "1,0,0") (ifseqformula "6"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "7") (term "1,1,0,1,0") (ifseqformula "6"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "8"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "9"))
         (rule "notLeft" (formula "7"))
         (rule "close" (formula "14") (ifseqformula "13"))
      )
      (branch "Pre (NullPointerException)"
         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "2")))
         (rule "closeTrue" (formula "6"))
      )
   )
)
(branch "Null Reference (_m1 = null)"
   (builtin "One Step Simplification" (formula "1"))
   (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
   (builtin "One Step Simplification" (formula "3"))
   (rule "true_left" (formula "3"))
   (rule "applyEq" (formula "5") (term "0,1,0,0,0,0") (ifseqformula "1"))
   (rule "blockThrow" (formula "5") (term "1"))
   (rule "throwUnfold" (formula "5") (term "1") (inst "#v0=n"))
   (rule "variableDeclarationAssign" (formula "5") (term "1"))
   (rule "variableDeclaration" (formula "5") (term "1") (newnames "n"))
   (builtin "Use Operation Contract" (formula "5") (newnames "heapBefore_NullPointerException,self,exc_0,heapAfter_NullPointerException,anon_heap_NullPointerException") (contract "java.lang.NullPointerException[java.lang.NullPointerException::NullPointerException()].JML normal_behavior operation contract.0"))
   (branch "Post (NullPointerException)"
      (builtin "One Step Simplification" (formula "6"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "andLeft" (formula "6"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "7") (term "1,1,0,1,0") (ifseqformula "6"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "9"))
      (rule "notLeft" (formula "8"))
      (rule "notLeft" (formula "8"))
      (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "13"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "assignment" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "pullOutSelect" (formula "10") (term "0") (inst "selectSK=java_lang_Throwable_message_0"))
      (rule "simplifySelectOfAnonEQ" (formula "10") (ifseqformula "6"))
      (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "15")) (ifInst ""  (formula "14")))
      (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "10"))
      (rule "hideAuxiliaryEq" (formula "10"))
      (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=java_lang_Throwable_cause_0"))
      (rule "simplifySelectOfAnonEQ" (formula "11") (ifseqformula "6"))
      (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "15")) (ifInst ""  (formula "14")))
      (rule "applyEqReverse" (formula "12") (term "0") (ifseqformula "11"))
      (rule "hideAuxiliaryEq" (formula "11"))
      (rule "commuteUnion" (formula "6") (term "1,0"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0") (ifseqformula "5"))
      (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "12"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "true_left" (formula "11"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "0") (ifseqformula "5"))
      (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "11"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "methodCallParamThrow" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "tryCatchThrow" (formula "15") (term "1"))
      (rule "ifElseUnfold" (formula "15") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_2"))
      (rule "equality_comparison_simple" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "replace_known_right" (formula "15") (term "0,0,1,0") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "ifElseSplit" (formula "15"))
      (branch "if x_2 true"
         (builtin "One Step Simplification" (formula "16"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x_2 false"
         (builtin "One Step Simplification" (formula "16"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "ifElseSplit" (formula "15"))
         (branch "if n instanceof java.lang.Throwable true"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
            (rule "true_left" (formula "1"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "e"))
            (rule "reference_type_cast" (formula "15") (term "1"))
            (branch "Normal Execution (n instanceof java.lang.Throwable)"
               (builtin "One Step Simplification" (formula "16"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "assignment" (formula "15") (term "1"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "emptyModality" (formula "15") (term "1"))
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "14")) (ifInst ""  (formula "14")))
               (rule "allRight" (formula "15") (inst "sk=f_0"))
               (rule "allRight" (formula "15") (inst "sk=o_0"))
               (rule "orRight" (formula "15"))
               (rule "eqSymm" (formula "16"))
               (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=f_0_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "7"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
               (rule "eqSymm" (formula "17"))
               (rule "elementOfUnion" (formula "1") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
               (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
               (rule "commute_and" (formula "1") (term "0,0,0,0"))
               (rule "commute_and" (formula "1") (term "1,0,0,0"))
               (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
               (rule "commute_or" (formula "1") (term "0,0,0,0"))
               (rule "cnf_rightDist" (formula "1") (term "1,0,0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "commute_or" (formula "1") (term "0,1,0,0,0"))
               (rule "commute_and" (formula "1") (term "1,0,0,0"))
               (rule "cnf_rightDist" (formula "1") (term "0,0,0,0"))
               (rule "commute_or" (formula "1") (term "1,0,0,0,0"))
               (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
               (rule "commute_and_2" (formula "1") (term "0,0,0"))
               (rule "shift_paren_and" (formula "1") (term "0,0,0,0"))
               (rule "commute_and_2" (formula "1") (term "0,0"))
               (rule "commute_and_2" (formula "1") (term "0,0,0"))
               (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
               (rule "commute_and" (formula "1") (term "0,0,0,0,0"))
               (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
               (rule "ifthenelse_split" (formula "1") (term "0"))
               (branch " ¬f_0 = java.lang.Object::<created> ∧ o_0 = self ∧ (f_0 = Throwable::$cause ∨ f_0 = Throwable::$message) ∧ (f_0 = Throwable::$cause ∨ o_0 = self) ∧ (f_0 = Throwable::$message ∨ o_0 = self) TRUE"
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "5"))
                  (rule "hideAuxiliaryEq" (formula "5"))
                  (rule "eqSymm" (formula "21"))
                  (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "applyEq" (formula "18") (term "1,0,0,1") (ifseqformula "1"))
                  (rule "replace_known_right" (formula "18") (term "0,1") (ifseqformula "16"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "notRight" (formula "18"))
                  (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "2"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "2"))
                  (rule "close" (formula "18") (ifseqformula "2"))
               )
               (branch " ¬f_0 = java.lang.Object::<created> ∧ o_0 = self ∧ (f_0 = Throwable::$cause ∨ f_0 = Throwable::$message) ∧ (f_0 = Throwable::$cause ∨ o_0 = self) ∧ (f_0 = Throwable::$message ∨ o_0 = self) FALSE"
                  (rule "close" (formula "18") (ifseqformula "1"))
               )
            )
            (branch "ClassCastException (!(n instanceof java.lang.Throwable))"
               (builtin "One Step Simplification" (formula "16"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "closeTrue" (formula "15"))
            )
         )
         (branch "if n instanceof java.lang.Throwable false"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Exceptional Post (NullPointerException)"
      (builtin "One Step Simplification" (formula "7"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "andLeft" (formula "6"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "7") (term "1,0,0") (ifseqformula "6"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "7") (term "1,1,0,1,0") (ifseqformula "6"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "11"))
      (rule "notLeft" (formula "7"))
      (rule "close" (formula "14") (ifseqformula "13"))
   )
   (branch "Pre (NullPointerException)"
      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "2")))
      (rule "closeTrue" (formula "5"))
   )
)
)

}
