\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Feb 02 15:48:52 CET 2015
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=80000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Mon Feb 02 15:48:52 CET 2015
name=de.uni.trier.infsec.utils.MessageTools[de.uni.trier.infsec.utils.MessageTools\\:\\:second([B)].JML normal_behavior operation contract.0
contract=de.uni.trier.infsec.utils.MessageTools[de.uni.trier.infsec.utils.MessageTools\\:\\:second([B)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "kirsten" ) (keyVersion "31a2f66d4110d575b74cc5815e7ca260a8d03cf2"))

(autoModeTime "84")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "heapAtPre"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "4") (term "1,0,0,1,0,1"))
(rule "assignment" (formula "4") (term "1"))
(builtin "One Step Simplification" (formula "4"))
(rule "methodBodyExpand" (formula "4") (term "1") (newnames "heapBefore_second,savedHeapBefore_second"))
(builtin "One Step Simplification" (formula "4"))
(rule "returnUnfold" (formula "4") (term "1") (inst "#v0=x_arr"))
(rule "variableDeclarationAssign" (formula "4") (term "1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "x_arr"))
(builtin "Use Operation Contract" (formula "4") (newnames "heapBefore_project,result_0,exc_0,heapAfter_project,anon_heap_project") (contract "de.uni.trier.infsec.utils.MessageTools[de.uni.trier.infsec.utils.MessageTools::project([B,int)].JML normal_behavior operation contract.0"))
(branch "Post (project)"
   (builtin "One Step Simplification" (formula "5"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "andLeft" (formula "5"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,1,0") (ifseqformula "5"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "7"))
   (rule "notLeft" (formula "8"))
   (rule "notLeft" (formula "7"))
   (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "9"))
   (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "8")))
   (rule "assignment" (formula "10") (term "1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "methodCallReturn" (formula "10") (term "1"))
   (rule "assignment" (formula "10") (term "1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "methodCallEmpty" (formula "10") (term "1"))
   (rule "tryEmpty" (formula "10") (term "1"))
   (rule "emptyModality" (formula "10") (term "1"))
   (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "8")) (ifInst ""  (formula "9")))
   (rule "allRight" (formula "10") (inst "sk=f_0"))
   (rule "allRight" (formula "10") (inst "sk=o_0"))
   (rule "orRight" (formula "10"))
   (rule "eqSymm" (formula "11"))
   (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=f_0_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
   (rule "applyEqReverse" (formula "12") (term "0") (ifseqformula "1"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "closeTrue" (formula "12"))
)
(branch "Exceptional Post (project)"
   (builtin "One Step Simplification" (formula "6"))
   (builtin "One Step Simplification" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,0") (ifseqformula "5"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "6"))
   (rule "close" (formula "9") (ifseqformula "8"))
)
(branch "Pre (project)"
   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
   (rule "closeTrue" (formula "4"))
)
)

}
