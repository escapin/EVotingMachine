\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Feb 02 15:45:01 CET 2015
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=80000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Mon Feb 02 15:45:01 CET 2015
name=de.uni.trier.infsec.utils.MessageTools[de.uni.trier.infsec.utils.MessageTools\\:\\:longToByteArray(long)].JML normal_behavior operation contract.0
contract=de.uni.trier.infsec.utils.MessageTools[de.uni.trier.infsec.utils.MessageTools\\:\\:longToByteArray(long)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "kirsten" ) (keyVersion "31a2f66d4110d575b74cc5815e7ca260a8d03cf2"))

(autoModeTime "3883")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "heapAtPre"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "3") (term "1,0,0,1,0,1"))
(rule "assignment" (formula "3") (term "1"))
(builtin "One Step Simplification" (formula "3"))
(rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_longToByteArray,savedHeapBefore_longToByteArray,_valueBefore_longToByteArray"))
(builtin "One Step Simplification" (formula "3"))
(rule "variableDeclarationAssign" (formula "3") (term "1"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "b"))
(rule "arrayCreation" (formula "3") (term "1") (inst "#v0=x_arr"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "x_arr"))
(rule "variableDeclarationAssign" (formula "3") (term "1"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "dim0"))
(rule "assignment" (formula "3") (term "1"))
(builtin "One Step Simplification" (formula "3"))
(rule "ifUnfold" (formula "3") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "x"))
(rule "less_than_comparison_simple" (formula "3") (term "1"))
(builtin "One Step Simplification" (formula "3"))
(rule "less_literals" (formula "3") (term "0,0,1,0"))
(builtin "One Step Simplification" (formula "3"))
(rule "ifSplit" (formula "3"))
(branch "if x true"
   (builtin "One Step Simplification" (formula "4"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
(branch "if x false"
   (builtin "One Step Simplification" (formula "4"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "3") (term "1") (inst "#v0=x_arr_1"))
   (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_arr_1"))
   (rule "variableDeclarationAssign" (formula "3") (term "1"))
   (rule "variableDeclaration" (formula "3") (term "1") (newnames "length_1"))
   (rule "assignment" (formula "3") (term "1"))
   (builtin "One Step Simplification" (formula "3"))
   (rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
   (builtin "One Step Simplification" (formula "3"))
   (rule "variableDeclaration" (formula "3") (term "1") (newnames "newObject"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "3") (term "1") (inst "#v0=x_arr_2"))
   (rule "variableDeclaration" (formula "3") (term "1") (newnames "x_arr_2"))
   (rule "variableDeclarationAssign" (formula "3") (term "1"))
   (rule "variableDeclaration" (formula "3") (term "1") (newnames "length_2"))
   (rule "assignment" (formula "3") (term "1"))
   (builtin "One Step Simplification" (formula "3"))
   (rule "allocateInstanceWithLength" (formula "3"))
   (builtin "One Step Simplification" (formula "4"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "2"))
   (rule "notLeft" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "blockEmpty" (formula "7") (term "1"))
   (rule "assignment" (formula "7") (term "1"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "arrayLengthNotNegative" (formula "1") (term "0"))
   (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
   (rule "qeq_literals" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "arrayLengthIsAShort" (formula "1") (term "0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "methodCall" (formula "7") (term "1"))
   (branch "Normal Execution (newObject != null )"
      (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "6")))
      (rule "false_right" (formula "7"))
      (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "assignment_write_attribute_this" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "methodCallWithinClass" (formula "7") (term "1"))
      (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "arrayInitialisation" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "polySimp_elimSub" (formula "7") (term "2,1,0,1,0"))
      (rule "mul_literals" (formula "7") (term "1,2,1,0,1,0"))
      (rule "polySimp_addComm0" (formula "7") (term "2,1,0,1,0"))
      (rule "applyEq" (formula "7") (term "1,2,1,0,1,0") (ifseqformula "1"))
      (rule "add_literals" (formula "7") (term "2,1,0,1,0"))
      (rule "methodCallEmpty" (formula "7") (term "1"))
      (rule "blockEmpty" (formula "7") (term "1"))
      (rule "assignment_write_attribute_this" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "methodCallReturnIgnoreResult" (formula "7") (term "1"))
      (rule "blockEmpty" (formula "7") (term "1"))
      (rule "methodCallReturn" (formula "7") (term "1"))
      (rule "assignment" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "methodCallEmpty" (formula "7") (term "1"))
      (rule "blockEmpty" (formula "7") (term "1"))
      (rule "assignment" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "blockEmpty" (formula "7") (term "1"))
      (rule "assignment" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "for_to_while" (formula "7") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
      (rule "variableDeclarationAssign" (formula "7") (term "1"))
      (rule "variableDeclaration" (formula "7") (term "1") (newnames "i"))
      (rule "assignment" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (builtin "Loop Invariant" (formula "7") (newnames "variant,b_0,heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
      (branch "Invariant Initially Valid"
         (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "6")) (ifInst ""  (formula "1")))
         (rule "wellFormedStorePrimitive" (formula "7") (term "1"))
         (rule "leq_literals" (formula "7") (term "0"))
         (builtin "One Step Simplification" (formula "7"))
         (rule "wellFormedMemsetArrayPrimitive" (formula "7"))
         (rule "wellFormedStorePrimitive" (formula "7"))
         (rule "wellFormedStorePrimitive" (formula "7"))
         (rule "wellFormedStorePrimitive" (formula "7"))
         (rule "wellFormedCreate" (formula "7"))
         (rule "close" (formula "7") (ifseqformula "3"))
      )
      (branch "Body Preserves Invariant"
         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "8")) (ifInst ""  (formula "1")))
         (builtin "One Step Simplification" (formula "9"))
         (rule "translateJavaSubInt" (formula "9") (term "0,1,1,1,0,1"))
         (rule "translateJavaSubInt" (formula "9") (term "0,1,1,1,0,1,1"))
         (rule "impRight" (formula "9"))
         (rule "eqSymm" (formula "10") (term "1,0,0,1,0,1,1,0,1"))
         (rule "polySimp_elimSub" (formula "10") (term "0,1,1,1,0,1"))
         (rule "polySimp_elimSub" (formula "10") (term "0,1,1,1,0"))
         (rule "polySimp_addComm0" (formula "10") (term "0,1,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "10") (term "0,1,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "7"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,1,0,1"))
         (rule "variableDeclarationAssign" (formula "1") (term "1"))
         (rule "variableDeclarationAssign" (formula "10") (term "1"))
         (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_0_2"))
         (rule "variableDeclaration" (formula "10") (term "1") (newnames "exc_1"))
         (rule "assignment" (formula "10") (term "1"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "variableDeclaration" (formula "10") (term "1") (newnames "thrownExc"))
         (rule "applyEq" (formula "10") (term "1,0,1,1,1,0,0") (ifseqformula "2"))
         (rule "polySimp_addComm0" (formula "10") (term "0,1,1,1,0,0"))
         (rule "blockThrow" (formula "10") (term "1,0,0,1"))
         (rule "blockThrow" (formula "10") (term "1,0,0,1"))
         (rule "boxToDiamond" (formula "1") (term "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "compound_less_than_comparison_2" (formula "7") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "7") (term "1"))
         (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_3"))
         (rule "assignment" (formula "7") (term "1"))
         (builtin "One Step Simplification" (formula "7"))
         (rule "variableDeclarationAssign" (formula "7") (term "1"))
         (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_4"))
         (rule "assignment_read_length" (formula "7") (term "1"))
         (branch "Normal Execution (b != null)"
            (builtin "One Step Simplification" (formula "8"))
            (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "10")))
            (rule "false_right" (formula "7"))
            (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "1"))
            (rule "less_than_comparison_simple" (formula "7") (term "1"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,1,0"))
            (rule "mul_literals" (formula "7") (term "1,0,0,0,0,1,0"))
            (rule "add_literals" (formula "7") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,1,0"))
            (rule "mul_literals" (formula "7") (term "1,0,0,1,0"))
            (rule "methodCallEmpty" (formula "7") (term "1"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "emptyModality" (formula "7") (term "1"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "notRight" (formula "7"))
            (rule "ifUnfold" (formula "10") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_5"))
            (rule "compound_less_than_comparison_2" (formula "10") (term "1") (inst "#v1=x_7") (inst "#v0=x_6"))
            (rule "variableDeclarationAssign" (formula "10") (term "1"))
            (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_6"))
            (rule "assignment" (formula "10") (term "1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "variableDeclarationAssign" (formula "10") (term "1"))
            (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_7"))
            (rule "assignment_read_length" (formula "10") (term "1"))
            (branch "Normal Execution (b != null)"
               (builtin "One Step Simplification" (formula "11"))
               (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "9")))
               (rule "false_right" (formula "10"))
               (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "2"))
               (rule "less_than_comparison_simple" (formula "10") (term "1"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,1,0"))
               (rule "mul_literals" (formula "10") (term "1,0,0,0,0,1,0"))
               (rule "add_literals" (formula "10") (term "0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,1,0"))
               (rule "mul_literals" (formula "10") (term "1,0,0,1,0"))
               (rule "replace_known_left" (formula "10") (term "0,0,1,0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "ifSplit" (formula "10"))
               (branch "if x_5 true"
                  (builtin "One Step Simplification" (formula "11"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclarationAssign" (formula "10") (term "1"))
                  (rule "variableDeclaration" (formula "10") (term "1") (newnames "offset"))
                  (rule "compound_multiplication_1" (formula "10") (term "1") (inst "#v=x"))
                  (rule "variableDeclarationAssign" (formula "10") (term "1"))
                  (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_8"))
                  (rule "remove_parentheses_right" (formula "10") (term "1"))
                  (rule "compound_subtraction_1" (formula "10") (term "1") (inst "#v=x_9"))
                  (rule "variableDeclarationAssign" (formula "10") (term "1"))
                  (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_9"))
                  (rule "compound_subtraction_1" (formula "10") (term "1") (inst "#v=x_10"))
                  (rule "variableDeclarationAssign" (formula "10") (term "1"))
                  (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_10"))
                  (rule "assignment_read_length" (formula "10") (term "1"))
                  (branch "Normal Execution (b != null)"
                     (builtin "One Step Simplification" (formula "11"))
                     (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "9")))
                     (rule "false_right" (formula "10"))
                     (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "2"))
                     (rule "assignmentSubtractionInt" (formula "10") (term "1"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "translateJavaSubInt" (formula "10") (term "0,1,0"))
                     (rule "sub_literals" (formula "10") (term "0,1,0"))
                     (rule "assignmentSubtractionInt" (formula "10") (term "1"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "translateJavaSubInt" (formula "10") (term "0,1,0"))
                     (rule "polySimp_elimSub" (formula "10") (term "0,1,0"))
                     (rule "assignmentMultiplicationInt" (formula "10") (term "1"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "translateJavaMulInt" (formula "10") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
                     (rule "mul_literals" (formula "10") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                     (rule "eval_order_array_access3" (formula "10") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr"))
                     (rule "variableDeclarationAssign" (formula "10") (term "1"))
                     (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_arr_3"))
                     (rule "assignment" (formula "10") (term "1"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "variableDeclarationAssign" (formula "10") (term "1"))
                     (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_11"))
                     (rule "assignment" (formula "10") (term "1"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "ifUnfold" (formula "10") (term "1") (inst "#boolv=x_12"))
                     (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_12"))
                     (rule "compound_assignment_5_nonsimple" (formula "10") (term "1"))
                     (rule "ifElseUnfold" (formula "10") (term "1") (inst "#boolv=x_13"))
                     (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_13"))
                     (rule "compound_less_equal_than_comparison_1" (formula "10") (term "1") (inst "#v0=x_14"))
                     (rule "variableDeclarationAssign" (formula "10") (term "1"))
                     (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_14"))
                     (rule "eval_order_array_access6" (formula "10") (term "1") (inst "#v0=x_arr_4"))
                     (rule "variableDeclarationAssign" (formula "10") (term "1"))
                     (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_arr_4"))
                     (rule "remove_parentheses_right" (formula "10") (term "1"))
                     (rule "assignment" (formula "10") (term "1"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "assignment_read_length" (formula "10") (term "1"))
                     (branch "Normal Execution (x_arr_4 != null)"
                        (builtin "One Step Simplification" (formula "11"))
                        (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "9")))
                        (rule "false_right" (formula "10"))
                        (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "2"))
                        (rule "less_equal_than_comparison_simple" (formula "10") (term "1"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,1,0"))
                        (rule "inEqSimp_contradInEq0" (formula "10") (term "0,0,1,0") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "10") (term "0,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "ifElseSplit" (formula "10"))
                        (branch "if x_13 true"
                           (builtin "One Step Simplification" (formula "11"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "if x_13 false"
                           (builtin "One Step Simplification" (formula "11"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "less_than_comparison_simple" (formula "10") (term "1"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,1,0"))
                           (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,1,0"))
                           (rule "add_zero_right" (formula "10") (term "0,0,0,0,1,0"))
                           (rule "blockEmpty" (formula "10") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,1,0"))
                           (rule "mul_literals" (formula "10") (term "1,0,0,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0,1,0") (ifseqformula "7"))
                           (rule "qeq_literals" (formula "10") (term "0,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "ifSplit" (formula "10"))
                           (branch "if x_12 true"
                              (builtin "One Step Simplification" (formula "11"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "if x_12 false"
                              (builtin "One Step Simplification" (formula "11"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "variableDeclarationAssign" (formula "10") (term "1"))
                              (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_15"))
                              (rule "compound_byte_cast_expression" (formula "10") (term "1") (inst "#v=x_16"))
                              (rule "variableDeclarationAssign" (formula "10") (term "1"))
                              (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_16"))
                              (rule "remove_parentheses_right" (formula "10") (term "1"))
                              (rule "compound_binary_AND_1" (formula "10") (term "1") (inst "#v=x_17"))
                              (rule "variableDeclarationAssign" (formula "10") (term "1"))
                              (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_17"))
                              (rule "remove_parentheses_right" (formula "10") (term "1"))
                              (rule "assignmentUnsignedShiftRightLong" (formula "10") (term "1"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "assignmentBitwiseAndLong2" (formula "10") (term "1"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "narrowingByteCastLong" (formula "10") (term "1"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "translateJavaCastByte" (formula "10") (term "0,1,0"))
                              (rule "assignment_to_primitive_array_component" (formula "10") (term "1"))
                              (branch "Normal Execution (x_arr_3 != null)"
                                 (builtin "One Step Simplification" (formula "11"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")) (ifInst ""  (formula "8")))
                                 (rule "inEqSimp_ltToLeq" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "blockEmpty" (formula "11") (term "1"))
                                 (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "3"))
                                 (rule "mul_literals" (formula "1") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "postincrement" (formula "10") (term "1"))
                                 (rule "compound_int_cast_expression" (formula "10") (term "1") (inst "#v=x"))
                                 (rule "variableDeclarationAssign" (formula "10") (term "1"))
                                 (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_18"))
                                 (rule "remove_parentheses_right" (formula "10") (term "1"))
                                 (rule "assignmentAdditionInt" (formula "10") (term "1"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "translateJavaAddInt" (formula "10") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "10") (term "0,1,0"))
                                 (rule "widening_identity_cast_5" (formula "10") (term "1"))
                                 (rule "assignment" (formula "10") (term "1"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "tryEmpty" (formula "10") (term "1"))
                                 (rule "methodCallEmpty" (formula "10") (term "1"))
                                 (rule "emptyModality" (formula "10") (term "1"))
                                 (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "9")) (ifInst ""  (formula "2")))
                                 (rule "eqSymm" (formula "10") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "0,0,1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "0,0,1"))
                                 (rule "mul_literals" (formula "10") (term "0,0,0,1"))
                                 (rule "dismissNonSelectedField" (formula "10") (term "0,0,1,1,0,0,0,1,0"))
                                 (rule "precOfInt" (formula "10") (term "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "10") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,1"))
                                 (rule "mul_literals" (formula "10") (term "0,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1,1"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1,1"))
                                 (rule "add_literals" (formula "10") (term "1,1,0,0,1,1"))
                                 (rule "times_zero_1" (formula "10") (term "1,0,0,1,1"))
                                 (rule "add_zero_right" (formula "10") (term "0,0,1,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "10") (term "0,1"))
                                 (rule "times_zero_2" (formula "10") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "10") (term "0,0,1"))
                                 (rule "applyEq" (formula "10") (term "1,0,0,1") (ifseqformula "2"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0,0,1"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,1"))
                                 (rule "applyEq" (formula "10") (term "1,0,1,1") (ifseqformula "2"))
                                 (rule "add_literals" (formula "10") (term "0,1,1"))
                                 (rule "leq_literals" (formula "10") (term "1,1"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "10") (term "0,1"))
                                 (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0"))
                                 (rule "mul_literals" (formula "10") (term "1,0"))
                                 (rule "inEqSimp_subsumption1" (formula "10") (term "0") (ifseqformula "7"))
                                 (rule "leq_literals" (formula "10") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "allRight" (formula "10") (inst "sk=f_1"))
                                 (rule "allRight" (formula "10") (inst "sk=o_1"))
                                 (rule "orRight" (formula "10"))
                                 (rule "orRight" (formula "10"))
                                 (rule "pullOutSelect" (formula "12") (term "1") (inst "selectSK=f_1_0"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfMemset" (formula "1"))
                                 (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "10"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
                                 (rule "applyEqReverse" (formula "13") (term "1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "12") (term "0") (inst "selectSK=f_1_1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "13"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
                                 (rule "replaceKnownSelect_taclet01100000101_0" (formula "1") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet01100000101_6" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Null Reference (x_arr_3 = null)"
                                 (builtin "One Step Simplification" (formula "11"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Index Out of Bounds (x_arr_3 != null, but x_11 Out of Bounds!)"
                                 (builtin "One Step Simplification" (formula "11"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                 (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                 (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                                 (rule "blockThrow" (formula "11") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "1") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "8") (term "0"))
                                 (builtin "One Step Simplification" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                        )
                     )
                     (branch "Null Reference (x_arr_4 = null)"
                        (builtin "One Step Simplification" (formula "11"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Null Reference (b = null)"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "if x_5 false"
                  (builtin "One Step Simplification" (formula "11"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (b = null)"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (b = null)"
            (builtin "One Step Simplification" (formula "8"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Use Case"
         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "8")) (ifInst ""  (formula "1")))
         (builtin "One Step Simplification" (formula "9"))
         (rule "inEqSimp_commuteLeq" (formula "6"))
         (rule "variableDeclarationAssign" (formula "9") (term "1"))
         (rule "variableDeclaration" (formula "9") (term "1") (newnames "b_0_1"))
         (rule "blockEmpty" (formula "9") (term "1,0,1"))
         (rule "compound_less_than_comparison_2" (formula "9") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "9") (term "1"))
         (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_2"))
         (rule "assignment" (formula "9") (term "1"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "variableDeclarationAssign" (formula "9") (term "1"))
         (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_1"))
         (rule "assignment_read_length" (formula "9") (term "1"))
         (branch "Normal Execution (b != null)"
            (builtin "One Step Simplification" (formula "10"))
            (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "8")))
            (rule "false_right" (formula "9"))
            (rule "applyEq" (formula "9") (term "0,1,0") (ifseqformula "1"))
            (rule "less_than_comparison_simple" (formula "9") (term "1"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,1,0"))
            (rule "mul_literals" (formula "9") (term "1,0,0,0,0,1,0"))
            (rule "add_literals" (formula "9") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,1,0"))
            (rule "mul_literals" (formula "9") (term "1,0,0,1,0"))
            (rule "methodCallEmpty" (formula "9") (term "1"))
            (rule "emptyModality" (formula "9") (term "1"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "impRight" (formula "9"))
            (rule "notLeft" (formula "1"))
            (rule "inEqSimp_leqRight" (formula "7"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
            (rule "leq_literals" (formula "7") (term "0"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "methodCallReturn" (formula "9") (term "1"))
            (rule "assignment" (formula "9") (term "1"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "methodCallEmpty" (formula "9") (term "1"))
            (rule "tryEmpty" (formula "9") (term "1"))
            (rule "emptyModality" (formula "9") (term "1"))
            (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "2")) (ifInst ""  (formula "7")) (ifInst ""  (formula "8")))
            (rule "allRight" (formula "9") (inst "sk=f_0"))
            (rule "allRight" (formula "9") (inst "sk=o_0"))
            (rule "orRight" (formula "9"))
            (rule "eqSymm" (formula "10"))
            (rule "pullOutSelect" (formula "10") (term "0") (inst "selectSK=f_0_0"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "eqSymm" (formula "11"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "pullOutSelect" (formula "2") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__0"))
            (rule "simplifySelectOfMemset" (formula "2"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "simplifySelectOfStore" (formula "2"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "simplifySelectOfStore" (formula "2"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "simplifySelectOfStore" (formula "2"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "simplifySelectOfCreate" (formula "2"))
            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "11")))
            (rule "castDel" (formula "2") (term "1,0"))
            (rule "eqSymm" (formula "2") (term "0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
            (rule "simplifySelectOfMemset" (formula "1"))
            (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
            (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_6"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "commute_and" (formula "6") (term "0,0"))
            (rule "commute_and" (formula "8") (term "0,0,0"))
            (rule "commute_and" (formula "8") (term "1,0,0"))
            (rule "commute_and" (formula "4") (term "0,0"))
            (rule "commute_and" (formula "3") (term "0,0"))
            (rule "commute_and" (formula "2") (term "0,0"))
            (rule "commute_and" (formula "1") (term "0,0"))
            (rule "cnf_rightDist" (formula "8") (term "0,0"))
            (rule "commute_or" (formula "8") (term "0,0,0"))
            (rule "cnf_rightDist" (formula "8") (term "1,0,0"))
            (rule "commute_or" (formula "8") (term "1,1,0,0"))
            (rule "commute_or" (formula "8") (term "0,1,0,0"))
            (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
            (rule "commute_or" (formula "8") (term "1,0,0,0"))
            (rule "commute_and" (formula "5") (term "0,0,1,0,0,0"))
            (rule "shift_paren_and" (formula "8") (term "0,0"))
            (rule "commute_and_2" (formula "5") (term "0,1,0,0,0"))
            (rule "ifthenelse_split" (formula "7") (term "0"))
            (branch "o_0 = x_arr_2 TRUE"
               (rule "applyEqReverse" (formula "9") (term "0,0,0,0,0,0,0,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "7")) (ifInst ""  (formula "7")))
               (rule "hideAuxiliaryEq" (formula "8"))
               (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "7"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "7"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "7"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "7"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "7"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "7"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "7"))
               (rule "applyEq" (formula "17") (term "1,0,0,1") (ifseqformula "7"))
               (rule "replace_known_right" (formula "17") (term "0,1") (ifseqformula "15"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "notRight" (formula "17"))
               (rule "replace_known_left" (formula "9") (term "0,1,1,0,0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "ifthenelse_negated" (formula "9") (term "0"))
               (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "8"))
               (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
               (rule "eqSymm" (formula "8"))
               (rule "close" (formula "17") (ifseqformula "8"))
            )
            (branch "o_0 = x_arr_2 FALSE"
               (rule "applyEqReverse" (formula "8") (term "0,0,0,0,0,0,0,0") (ifseqformula "7"))
               (rule "applyEqReverse" (formula "8") (term "0,0,0,1,0,0,0,0") (ifseqformula "7"))
               (rule "hideAuxiliaryEq" (formula "7"))
               (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
               (rule "hideAuxiliaryEq" (formula "5"))
               (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "13"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
               (rule "hideAuxiliaryEq" (formula "5"))
               (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
               (rule "hideAuxiliaryEq" (formula "3"))
               (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
               (rule "hideAuxiliaryEq" (formula "2"))
               (rule "replace_known_right" (formula "3") (term "1,1,0,0") (ifseqformula "10"))
               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "10")))
               (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "10"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
               (rule "hideAuxiliaryEq" (formula "2"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "commute_and_2" (formula "1") (term "0,0"))
               (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
               (rule "commute_and_2" (formula "1") (term "0,0,0"))
               (rule "commute_and" (formula "1") (term "0,0,0,0"))
               (rule "commute_and_2" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (b = null)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Null Reference (newObject = null)"
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
      (rule "closeFalse" (formula "1"))
   )
)
)

}
