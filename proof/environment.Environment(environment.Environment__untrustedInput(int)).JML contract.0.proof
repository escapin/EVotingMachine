\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Sep 25 22:42:27 CEST 2014
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=wdChecks-wdChecks\\:off , JavaCard-JavaCard\\:on , bigint-bigint\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , sequences-sequences\\:on , runtimeExceptions-runtimeExceptions\\:allow , integerSimplificationRules-integerSimplificationRules\\:full , Strings-Strings\\:on , reach-reach\\:on , assertions-assertions\\:on , modelFields-modelFields\\:showSatisfiability , initialisation-initialisation\\:disableStaticInitialisation , wdOperator-wdOperator\\:L , optimisedSelectRules-optimisedSelectRules\\:on
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Thu Sep 25 22:42:27 CEST 2014
name=de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment\\:\\:untrustedInput(int)].JML behavior operation contract.0
contract=de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment\\:\\:untrustedInput(int)].JML behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "miki" ) (keyVersion "c781f49facff0f907c1d2349143b682c313d0e46"))

(autoModeTime "4612")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "heapAtPre"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "4"))
(rule "notLeft" (formula "3"))
(rule "eqSymm" (formula "6") (term "1,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "6") (term "0,0,0,0,1,0,1"))
(rule "inEqSimp_ltToLeq" (formula "6") (term "0,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "4"))
(rule "add_zero_right" (formula "4") (term "0"))
(rule "polySimp_mulComm0" (formula "4") (term "1,0"))
(rule "inEqSimp_commuteLeq" (formula "6") (term "1,1,0,1,1,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "6") (term "0,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "6") (term "0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "3"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "inEqSimp_sepNegMonomial0" (formula "4"))
(rule "polySimp_mulLiterals" (formula "4") (term "0"))
(rule "polySimp_elimOne" (formula "4") (term "0"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "6") (term "1,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,1,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "6") (term "0,1,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,0,1,1,1,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "6") (term "0,1,1,1,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "6") (term "1,0,1,1,1,1,1,0,0,0,1"))
(builtin "One Step Simplification" (formula "6"))
(rule "nnf_notAnd" (formula "6") (term "0,0,1,1,1,1,1,0,0,0,1"))
(builtin "One Step Simplification" (formula "6"))
(rule "nnf_notOr" (formula "6") (term "0,0,0,1,1,1,1,1,0,0,0,1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_untrustedInput,savedHeapBefore_untrustedInput"))
(builtin "One Step Simplification" (formula "6"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "res"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(builtin "Loop Invariant" (formula "6") (newnames "heapBeforeLoop,resBeforeLoop,res_0,anon_heap_loop,o,f,variant,b"))
(branch "Invariant Initially Valid"
   (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "1")))
   (rule "inEqSimp_commuteLeq" (formula "6") (term "0"))
   (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "3"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "allRight" (formula "6") (inst "sk=o_8"))
   (rule "impRight" (formula "6"))
   (rule "notRight" (formula "7"))
   (rule "andLeft" (formula "2"))
   (rule "andLeft" (formula "1"))
   (rule "notLeft" (formula "3"))
   (rule "notLeft" (formula "1"))
   (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
   (rule "closeFalse" (formula "1"))
)
(branch "Body Preserves Invariant"
   (builtin "One Step Simplification" (formula "6"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "andLeft" (formula "6"))
   (rule "impRight" (formula "9"))
   (rule "eqSymm" (formula "10") (term "1,0,0,1,1,1,0,1"))
   (rule "elementOfSingleton" (formula "10") (term "0,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "7"))
   (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,1,1,0,1"))
   (rule "variableDeclarationAssign" (formula "1") (term "1"))
   (rule "variableDeclarationAssign" (formula "10") (term "1"))
   (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_2"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "exc_1"))
   (rule "assignment" (formula "10") (term "1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "thrownExc"))
   (rule "blockThrow" (formula "10") (term "1,0,0,1"))
   (rule "pullOutSelect" (formula "7") (term "0") (inst "selectSK=de_uni_trier_infsec_environment_Environment_inputCounter_1"))
   (rule "simplifySelectOfAnon" (formula "7"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "elementOfSingleton" (formula "7") (term "0,0"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "applyEqReverse" (formula "8") (term "0") (ifseqformula "7"))
   (rule "hideAuxiliaryEq" (formula "7"))
   (rule "boxToDiamond" (formula "1") (term "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "nnf_imp2or" (formula "7") (term "0"))
   (rule "nnf_notAnd" (formula "7") (term "1,0"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "nnf_notAnd" (formula "7") (term "0,0"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "nnf_notOr" (formula "7") (term "0,0,0"))
   (rule "nnf_notOr" (formula "7") (term "1,0,0,0"))
   (rule "nnf_imp2or" (formula "10") (term "0,1,0,1,1,0,1"))
   (rule "nnf_notAnd" (formula "10") (term "0,0,1,0,1,1,0,1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "nnf_notAnd" (formula "10") (term "1,0,1,0,1,1,0,1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "nnf_notOr" (formula "10") (term "0,0,0,1,0,1,1,0,1"))
   (rule "commute_or" (formula "7") (term "1,0"))
   (rule "commute_or" (formula "7") (term "0,0"))
   (rule "commute_or_2" (formula "7") (term "0"))
   (rule "shift_paren_or" (formula "7") (term "0,0"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "cnf_rightDist" (formula "7") (term "0"))
   (rule "distr_forallAnd" (formula "7"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "castDel" (formula "7") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "commute_or" (formula "7") (term "0"))
   (rule "cnf_rightDist" (formula "7") (term "0"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "commute_or" (formula "7") (term "0"))
   (rule "compound_assignment_5_nonsimple" (formula "8") (term "1"))
   (rule "ifUnfold" (formula "10") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_1"))
   (rule "compound_assignment_5_nonsimple" (formula "10") (term "1"))
   (rule "ifElseUnfold" (formula "8") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_2"))
   (rule "less_than_comparison_simple" (formula "8") (term "1"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,1,0"))
   (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,1,0"))
   (rule "add_literals" (formula "8") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,1,0"))
   (rule "mul_literals" (formula "8") (term "1,0,0,1,0"))
   (rule "ifElseUnfold" (formula "10") (term "1") (inst "#boolv=x_2"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_3"))
   (rule "less_than_comparison_simple" (formula "10") (term "1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,1,0"))
   (rule "mul_literals" (formula "10") (term "1,0,0,1,0"))
   (rule "ifElseSplit" (formula "8"))
   (branch "if x_2 true"
      (builtin "One Step Simplification" (formula "9"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "replace_known_left" (formula "11") (term "0,0,1,0") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "assignment" (formula "9") (term "1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "methodCallEmpty" (formula "9") (term "1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "emptyModality" (formula "9") (term "1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "false_right" (formula "9"))
      (rule "ifElseSplit" (formula "10"))
      (branch "if x_3 true"
         (builtin "One Step Simplification" (formula "11"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "ifEnterThen" (formula "10") (term "1"))
         (rule "assignment" (formula "10") (term "1"))
         (builtin "One Step Simplification" (formula "10"))
         (builtin "Use Operation Contract" (formula "10") (newnames "heapBefore_untrustedInput_1,result_1,exc_2,heapAfter_untrustedInput_0,anon_heap_untrustedInput_0") (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::untrustedInput()].JML behavior operation contract.0#de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::untrustedInput()].JML behavior operation contract.1"))
         (branch "Post (untrustedInput)"
            (builtin "One Step Simplification" (formula "10"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,0,0,1,1"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,0,1,0,0,1,1"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,0,0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,0,1,0,0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,0,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,1,1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,0,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,1,1,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,0,1,1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,1,1,0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,0,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,0,0,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,1,1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,0,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,0,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,0,1,1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,1,1,0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,1,1,0,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,1,1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,1,1,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,0,1,1,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,0,0,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,1,1,1,1,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,0,0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,1,1,1,1,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,1,1,0,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,1,1,1,1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,0,1,1,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,1,1,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,0,1,1,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,1,1,0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,1,1,1,1,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,0,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,0,0,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,1,1,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,0,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,0,1,1,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,1,1,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,1,1,0,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,1,1,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,0,1,1,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,0,0,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,1,1,1,1,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,1,1,1,1,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,1,1,0,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,1,1,1,1,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,0,1,1,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,1,1,1,1,1,1,1,0,0"))
            (rule "andLeft" (formula "10"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,0,0,0,1,1,1,0,1,1,1") (ifseqformula "10"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,0,0,0,1,1,1,0,1,0,1") (ifseqformula "10"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "andLeft" (formula "11"))
            (rule "typeEqDerived" (formula "12") (term "0,1,1,1,1,0") (ifseqformula "11"))
            (rule "typeEqDerived" (formula "12") (term "0,1,1,1,1,1") (ifseqformula "11"))
            (rule "typeEqDerived" (formula "12") (term "0,0,0,1,1,1,0") (ifseqformula "11"))
            (rule "typeEqDerived" (formula "12") (term "0,0,0,1,1,1,1") (ifseqformula "11"))
            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
            (rule "andLeft" (formula "12"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,1,1,0,1,1,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,1,1,0,1,1,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,1,1,0,1,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0"))
            (rule "replace_known_left" (formula "13") (term "1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,0"))
            (rule "replace_known_left" (formula "12") (term "1,0,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "13") (term "0,1,1"))
            (rule "inEqSimp_commuteLeq" (formula "12") (term "0,1,1"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,1,1,1,1,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,1,1,1,1,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,1,1,1,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,0,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,0,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,0,2,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,0,2,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,0,2,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,1,1,0,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,1,1,0,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,1,1,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,1,1,1,1,0,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,1,1,1,1,0,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,1,1,1,1,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,1,1,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,1,1,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,1,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,1,1,0,2,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,1,1,0,2,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,1,1,0,2,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,1,1,0,2,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,1,1,0,2,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,1,1,0,2,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,2,1,1,1,1,1,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,2,1,1,1,1,1,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,2,1,1,1,1,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,1,1,2,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,1,1,2,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,1,1,2,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,2,1,1,1,0,2,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,2,1,1,1,0,2,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,2,1,1,1,0,2,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,2,1,1,1,2,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,2,1,1,1,2,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,2,1,1,1,2,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,0,0,2,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,0,0,2,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,0,0,2,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,1,1,1,1,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,1,1,1,1,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,1,1,1,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,2,1,1,1,2,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,2,1,1,1,2,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,2,1,1,1,2,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,2,1,0,0,2,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,2,1,0,0,2,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,2,1,0,0,2,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,2,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,2,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,2,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,0,1,1,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,0,1,1,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,0,1,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,0,2,1,2,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,0,2,1,2,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,0,2,1,2,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,2,1,2,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,2,1,2,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,2,1,2,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,1,1,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,1,1,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,1,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,2,1,2,1,2,1,2,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,2,1,2,1,2,1,2,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,2,1,2,1,2,1,2,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,0,0,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,0,0,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,2,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,2,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,2,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,2,1,0,0,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,2,1,0,0,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,2,1,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,2,1,0,2,1,2,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,2,1,0,2,1,2,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,2,1,0,2,1,2,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,2,1,0,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,2,1,0,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,2,1,0,0,1,0"))
            (rule "assignment" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "pullOutSelect" (formula "13") (term "0,0,0,1") (inst "selectSK=de_uni_trier_infsec_environment_Environment_inputValues_8"))
            (rule "applyEq" (formula "12") (term "0,0,0,1") (ifseqformula "13"))
            (rule "simplifySelectOfAnonEQ" (formula "13") (ifseqformula "10"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "pullOutSelect" (formula "14") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_environment_Environment_inputValues_9"))
            (rule "applyEq" (formula "13") (term "0,0,1,2,1,2,1,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,0,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,0,2,1,0,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,2,1,0,0,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,0,0,0,0,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,2,1,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,2,1,0,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,2,1,0,2,1,0,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,0,0,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,0,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,2,1,2,1,2,1,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,2,1,0,0,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,0,2,1,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,0,0,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,0,2,1,2,1,0,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,0,0,0,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,2,1,0,2,1,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,0,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,2,1,0,0,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,2,1,2,1,0,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,0,0,2,1,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,2,1,0,2,1,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "2,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,2,1,2,1,0,0,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,2,1,2,1,2,1,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,2,1,2,1,0,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,0,2,1,0,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,0,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,0,2,1,0,0,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,2,1,0,2,1,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,2,1,2,1,2,1,0,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,2,1,0,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,2,1,2,1,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,0,2,1,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,0,2,1,2,1,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "12") (term "0,0,0,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,0,2,1,2,1,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,0,0,0,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,2,1,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,2,1,2,1,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,0,2,1,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,0,0,0,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,0,0,2,1,0,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,0,2,1,2,1,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,0,0,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,0,0,2,1,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,0,2,1,0,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,0,0,0,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,2,1,0,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,2,1,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,2,1,2,1,0,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,2,1,2,1,0,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,0,0,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,0,0,2,1,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "12") (term "0,0,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,2,1,2,1,2,1,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,2,1,0,0,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "13") (term "0,0,1,2,1,0,0,0,2,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,2,1,0,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,0,2,1,0,1,0") (ifseqformula "14"))
            (rule "simplifySelectOfAnon" (formula "14"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "elementOfSingleton" (formula "14") (term "0,0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,0,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,0,0,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,2,1,0,0,0,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,2,1,2,1,2,1,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,0,2,1,2,1,0,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,2,1,0,0,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,2,1,2,1,2,1,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,0,0,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,2,1,2,1,0,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,2,1,0,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,0,2,1,0,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,0,0,2,1,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,0,0,0,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,2,1,2,1,0,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,2,1,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,2,1,0,2,1,0,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,0,2,1,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,2,1,0,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,2,1,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,0,0,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,0,2,1,2,1,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,0,2,1,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,2,1,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,2,1,2,1,2,1,0,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,2,1,0,2,1,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,2,1,2,1,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,0,0,2,1,0,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,0,0,0,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "12") (term "0,0,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,0,0,2,1,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,0,0,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,0,2,1,0,0,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,0,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,0,2,1,0,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,0,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,0,0,0,0,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,2,1,0,0,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,2,1,2,1,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,0,0,0,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,0,2,1,2,1,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,2,1,0,0,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,0,2,1,0,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,2,1,0,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,0,2,1,2,1,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,0,2,1,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "12") (term "0,0,0,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "15") (term "0,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,2,1,2,1,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,2,1,0,2,1,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,2,1,0,0,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,2,1,0,2,1,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,0,0,0,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,0,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,0,0,2,1,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,2,1,2,1,0,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,2,1,0,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,0,2,1,0,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,2,1,2,1,0,2,1,2,0,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,2,1,2,1,2,1,1,0") (ifseqformula "14"))
            (rule "applyEqReverse" (formula "13") (term "0,0,1,2,1,2,1,0,0,2,0,0") (ifseqformula "14"))
            (rule "hideAuxiliaryEq" (formula "14"))
            (rule "replace_known_right" (formula "13") (term "0,1,2,1,2,1,0,0,2,0,0") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
            (rule "replace_known_right" (formula "10") (term "0,1,2,1,2,1,2,1,2,1,1,0") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
            (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "andLeft" (formula "14"))
            (rule "andLeft" (formula "15"))
            (rule "notLeft" (formula "14"))
            (rule "replace_known_right" (formula "12") (term "0,0,0") (ifseqformula "17"))
            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "16")) (ifInst ""  (formula "14")) (ifInst ""  (formula "15")))
            (rule "true_left" (formula "12"))
            (rule "elementOfSingleton" (formula "12") (term "0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "12"))
            (rule "hideAuxiliaryEq" (formula "12"))
            (rule "pullOutSelect" (formula "12") (term "0") (inst "selectSK=de_uni_trier_infsec_environment_Environment_inputCounter_5"))
            (rule "simplifySelectOfAnonEQ" (formula "12") (ifseqformula "10"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "replaceKnownSelect_taclet1_0" (formula "12") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "12") (term "2,0"))
            (rule "elementOfSingleton" (formula "12") (term "0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "applyEqReverse" (formula "13") (term "0") (ifseqformula "12"))
            (rule "hideAuxiliaryEq" (formula "12"))
            (rule "nnf_imp2or" (formula "13") (term "0"))
            (rule "nnf_notAnd" (formula "13") (term "1,0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "nnf_notAnd" (formula "13") (term "0,0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "nnf_notOr" (formula "13") (term "0,0,0"))
            (rule "nnf_notOr" (formula "13") (term "1,0,0,0"))
            (rule "nnf_notOr" (formula "13") (term "0,1,0,0,0"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "tryEmpty" (formula "16") (term "1"))
            (rule "commute_or_2" (formula "14") (term "1,0"))
            (rule "commute_or" (formula "14") (term "0,0"))
            (rule "commute_or_2" (formula "14") (term "0"))
            (rule "shift_paren_or" (formula "14") (term "0,0"))
            (rule "commute_or" (formula "14") (term "1,0,0,0"))
            (rule "shift_paren_or" (formula "14") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "cnf_rightDist" (formula "14") (term "0"))
            (rule "distr_forallAnd" (formula "14"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "castDel" (formula "14") (term "1,0,1,0,0"))
            (rule "castDel" (formula "14") (term "1,0,1,0"))
            (rule "castDel" (formula "14") (term "0,0,0,0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "commute_or" (formula "14") (term "0"))
            (rule "cnf_rightDist" (formula "14") (term "0"))
            (rule "distr_forallAnd" (formula "14"))
            (rule "andLeft" (formula "14"))
            (rule "commute_or" (formula "15") (term "0"))
            (rule "cnf_rightDist" (formula "14") (term "0"))
            (rule "distr_forallAnd" (formula "14"))
            (rule "andLeft" (formula "14"))
            (rule "commute_or_2" (formula "14") (term "0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "shift_paren_or" (formula "14") (term "0"))
            (rule "commute_or" (formula "14") (term "0,0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "methodCallEmpty" (formula "16") (term "1"))
            (rule "emptyModality" (formula "16") (term "1"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "replaceKnownSelect_taclet0001_6" (formula "16") (term "0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0001_7" (formula "16") (term "0,0,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,1,0,0,0,1,0") (ifseqformula "11"))
            (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "13")))
            (rule "eqSymm" (formula "16") (term "1,0,0,1"))
            (rule "nnf_notOr" (formula "16") (term "1,0,0,0,0"))
            (rule "nnf_notOr" (formula "16") (term "0,1,0,0,0,0"))
            (rule "andRight" (formula "16"))
            (branch "Case 1"
               (rule "allRight" (formula "16") (inst "sk=o_7"))
               (rule "orRight" (formula "16"))
               (rule "orRight" (formula "17"))
               (rule "orRight" (formula "16"))
               (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "18"))
               (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "17")))
               (rule "instAll" (formula "18") (term "0") (ifseqformula "14") (userinteraction))
               (rule "instAll" (formula "19") (term "0") (ifseqformula "10") (userinteraction))
               (rule "replace_known_right" (formula "1") (term "1,0") (ifseqformula "19"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
               (rule "notLeft" (formula "1"))
               (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "notRight" (formula "18"))
               (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "19"))
               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "20")) (ifInst ""  (formula "17")) (ifInst ""  (formula "1")))
               (rule "closeFalse" (formula "2"))
            )
            (branch
               (rule "allRight" (formula "16") (inst "sk=f_4"))
               (rule "allRight" (formula "16") (inst "sk=o_6"))
               (rule "orRight" (formula "16"))
               (rule "orRight" (formula "16"))
               (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=f_4_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "eqSymm" (formula "19"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_4_1"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "18"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "commute_and" (formula "17"))
               (rule "ifthenelse_split" (formula "1") (term "0"))
               (branch " ¬o_6 = null ∧ ¬( o_6.<created> = TRUE ∨ o_6.<created>@anon_heap_loop«anonHeapFunction» = TRUE) TRUE"
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "2"))
                  (rule "notLeft" (formula "1"))
                  (rule "orRight" (formula "17"))
                  (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "eqSymm" (formula "21"))
                  (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "16")))
                  (rule "closeTrue" (formula "20"))
               )
               (branch " ¬o_6 = null ∧ ¬( o_6.<created> = TRUE ∨ o_6.<created>@anon_heap_loop«anonHeapFunction» = TRUE) FALSE"
                  (rule "close" (formula "20") (ifseqformula "1"))
               )
            )
         )
         (branch "Exceptional Post (untrustedInput)"
            (builtin "One Step Simplification" (formula "10"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,0,0,1,1"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,0,1,0,0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,0,0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,0,1,0,0,1,1"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,1,1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,0,0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,0,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,1,1,0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,0,1,1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,1,1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,0,0,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,0,0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,1,1,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,0,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,1,1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,1,1,1,1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,1,1,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,1,1,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,0,0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,0,0,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,0,1,1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,1,1,0,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,0,1,1,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,0,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,1,1,1,1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,1,1,0,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,0,1,1,1,1,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,0,1,1,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,1,1,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,0,1,1,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,1,1,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,0,0,1,1,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,1,1,1,1,1,1,1,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,0,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,1,1,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,0,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,1,1,1,1,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,1,1,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,1,1,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,0,0,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,0,1,1,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,1,1,0,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,0,1,1,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,1,1,1,1,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,1,1,0,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,0,1,1,1,1,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,0,1,1,1,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,1,1,1,1,1,1,1,1,1,1,0,0"))
            (rule "andLeft" (formula "10"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,0") (ifseqformula "10"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,0,0,0,1,1,1,0,1,0,1") (ifseqformula "10"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,0,0,0,1,1,1,0,1,1,1") (ifseqformula "10"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "12"))
            (rule "andLeft" (formula "11"))
            (rule "notLeft" (formula "11"))
            (rule "replace_known_right" (formula "13") (term "0,0,1,1") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "14")))
            (rule "replace_known_right" (formula "12") (term "0,0,1,1") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "14")))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,1,1,0,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,1,1,0,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,1,1,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "13") (term "1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0"))
            (rule "replace_known_left" (formula "13") (term "1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,0"))
            (rule "replace_known_left" (formula "12") (term "1,0,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "12") (term "1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,1,1,0,1,1,1,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,1,1,0,1,1,1,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,1,1,0,1,1,1,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,1,1,0,1,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,1,1,0,1,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,1,1,0,1,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,0,1,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,0,1,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,0,1,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,1,1,1,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,1,1,1,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,1,1,1,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,1,1,1,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,1,1,1,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,1,1,1,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,1,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,1,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,1,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,2,1,1,1,1,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,2,1,1,1,1,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,2,1,1,1,1,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,2,1,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,2,1,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,2,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,2,1,0,1,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,2,1,0,1,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,2,1,0,1,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,2,1,0,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,2,1,0,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,2,1,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,1,1,0,0,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,1,1,0,0,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,1,1,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,2,1,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,2,1,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,2,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,2,1,2,1,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,2,1,2,1,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,2,1,2,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,2,1,2,1,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,2,1,2,1,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,2,1,2,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,2,1,2,1,2,1,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,2,1,2,1,2,1,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,2,1,2,1,2,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,2,1,2,1,0,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,2,1,2,1,0,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,2,1,2,1,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,2,1,1,1,2,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,2,1,1,1,2,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,2,1,1,1,2,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,0,2,1,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,0,2,1,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,0,2,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,0,1,1,2,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,0,1,1,2,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,0,1,1,2,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,0,0,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,0,0,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,2,1,0,0,2,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,2,1,0,0,2,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,2,1,0,0,2,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,2,1,2,1,0,2,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,2,1,2,1,0,2,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,2,1,2,1,0,2,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,0,0,2,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,0,0,2,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,0,0,2,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,2,1,2,1,1,1,2,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,2,1,2,1,1,1,2,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,2,1,2,1,1,1,2,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,0,0,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,0,0,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,2,1,0,2,1,0,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,2,1,0,2,1,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,2,1,0,2,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1,0,1,2,1,1,0"))
            (rule "replace_known_left" (formula "10") (term "1,0,1,2,1,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "ifthenelse_negated" (formula "10") (term "1,2,1,1,0"))
            (rule "pullOutSelect" (formula "13") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_environment_Environment_inputValues_6"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,2,1,0,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,0,0,0,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,0,2,1,0,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,0,0,2,1,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,2,1,2,1,2,1,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,0,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,0,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,2,1,0,2,1,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,0,2,1,2,1,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,0,0,2,1,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,2,1,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,2,1,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,2,1,2,1,0,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,2,1,0,0,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,2,1,0,0,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,2,1,0,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,2,1,2,1,0,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,0,2,1,0,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,0,2,1,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,0,0,0,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "12") (term "0,0,0,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "12") (term "0,0,0,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,0,2,1,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,0,2,1,2,1,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,0,0,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,0,0,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,2,1,0,2,1,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,2,1,2,1,2,1,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,0,2,1,2,1,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0,0,1,2,1,2,1,2,1,1,0") (ifseqformula "13"))
            (rule "simplifySelectOfAnon" (formula "13"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "elementOfSingleton" (formula "13") (term "0,0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,0,0,0,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,0,2,1,0,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,2,1,2,1,0,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,2,1,0,2,1,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,0,0,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,2,1,2,1,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,2,1,2,1,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,2,1,2,1,2,1,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,0,2,1,2,1,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,0,2,1,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,0,0,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,2,1,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,0,0,2,1,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,2,1,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,0,2,1,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,2,1,0,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,2,1,0,0,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,0,0,2,1,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,0,2,1,0,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,0,0,0,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,2,1,0,0,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,2,1,0,2,1,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,0,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,0,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,0,2,1,2,1,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "12") (term "0,0,0,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "12") (term "0,0,0,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,2,1,2,1,2,1,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,2,1,2,1,2,1,0,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "10") (term "0,0,1,0,2,1,0,1,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "14") (term "0,0,0") (ifseqformula "13"))
            (rule "hideAuxiliaryEq" (formula "13"))
            (rule "replace_known_right" (formula "10") (term "0,1,0,0,1,0") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
            (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "andLeft" (formula "13"))
            (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "andLeft" (formula "13"))
            (rule "notLeft" (formula "13"))
            (rule "replace_known_right" (formula "12") (term "0,0,0") (ifseqformula "17"))
            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "14")) (ifInst ""  (formula "15")) (ifInst ""  (formula "13")) (ifInst ""  (formula "14")))
            (rule "true_left" (formula "12"))
            (rule "pullOutSelect" (formula "12") (term "0") (inst "selectSK=de_uni_trier_infsec_environment_Environment_inputCounter_4"))
            (rule "simplifySelectOfAnonEQ" (formula "12") (ifseqformula "10"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "replaceKnownSelect_taclet1_0" (formula "12") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "12") (term "2,0"))
            (rule "elementOfSingleton" (formula "12") (term "0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "applyEqReverse" (formula "13") (term "0") (ifseqformula "12"))
            (rule "hideAuxiliaryEq" (formula "12"))
            (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=de_uni_trier_infsec_environment_Environment_inputValues_7"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "replaceKnownSelect_taclet1001_2" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1001_3" (formula "1") (term "2,0"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "tryCatchThrow" (formula "16") (term "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "methodCallParamThrow" (formula "17") (term "1,0,0,1"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "ifElseUnfold" (formula "17") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_6"))
            (rule "equality_comparison_simple" (formula "17") (term "1"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "replace_known_right" (formula "17") (term "0,0,1,0") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "ifElseSplit" (formula "17"))
            (branch "if x_6 true"
               (builtin "One Step Simplification" (formula "18"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_6 false"
               (builtin "One Step Simplification" (formula "18"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "ifElseSplit" (formula "17"))
               (branch "if exc_2 instanceof java.lang.Throwable true"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclaration" (formula "17") (term "1") (newnames "e_2"))
                  (rule "reference_type_cast" (formula "17") (term "1"))
                  (branch "Normal Execution (exc_2 instanceof java.lang.Throwable)"
                     (builtin "One Step Simplification" (formula "18"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "assignment" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "assignment" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "methodCallEmpty" (formula "17") (term "1"))
                     (rule "emptyModality" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "tryCatchThrow" (formula "17") (term "1"))
                     (rule "ifElseUnfold" (formula "17") (term "1") (inst "#boolv=x"))
                     (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_7"))
                     (rule "equality_comparison_simple" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "replace_known_right" (formula "17") (term "0,0,1,0") (ifseqformula "15"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "ifElseSplit" (formula "17"))
                     (branch "if x_7 true"
                        (builtin "One Step Simplification" (formula "18"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_7 false"
                        (builtin "One Step Simplification" (formula "18"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "ifElseSplit" (formula "17"))
                        (branch "if thrownExc instanceof java.lang.Throwable true"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                           (rule "true_left" (formula "1"))
                           (rule "variableDeclaration" (formula "17") (term "1") (newnames "e_3"))
                           (rule "reference_type_cast" (formula "17") (term "1"))
                           (branch "Normal Execution (thrownExc instanceof java.lang.Throwable)"
                              (builtin "One Step Simplification" (formula "18"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "assignment" (formula "17") (term "1"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "emptyModality" (formula "17") (term "1"))
                              (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "15")) (ifInst ""  (formula "15")) (ifInst ""  (formula "14")) (ifInst ""  (formula "14")))
                              (rule "replaceKnownSelect_taclet1001_4" (formula "17") (term "0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1001_5" (formula "17") (term "0,1,0"))
                              (rule "replaceKnownSelect_taclet1001_6" (formula "17") (term "0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1001_7" (formula "17") (term "0,0,0,0"))
                              (rule "eqSymm" (formula "17") (term "1,0,0,1"))
                              (rule "replace_known_left" (formula "17") (term "1,0") (ifseqformula "13"))
                              (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "16")))
                              (rule "allRight" (formula "17") (inst "sk=f_3"))
                              (rule "allRight" (formula "17") (inst "sk=o_5"))
                              (rule "orRight" (formula "17"))
                              (rule "orRight" (formula "17"))
                              (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=f_3_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "eqSymm" (formula "20"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_1"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "19"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "commute_and" (formula "18"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch " ¬o_5 = null ∧ ¬( o_5.<created> = TRUE ∨ o_5.<created>@anon_heap_loop«anonHeapFunction» = TRUE) TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "orRight" (formula "17"))
                                 (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "eqSymm" (formula "22"))
                                 (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "15"))
                                 (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "16")))
                                 (rule "closeTrue" (formula "21"))
                              )
                              (branch " ¬o_5 = null ∧ ¬( o_5.<created> = TRUE ∨ o_5.<created>@anon_heap_loop«anonHeapFunction» = TRUE) FALSE"
                                 (rule "close" (formula "21") (ifseqformula "1"))
                              )
                           )
                           (branch "ClassCastException (!(thrownExc instanceof java.lang.Throwable))"
                              (builtin "One Step Simplification" (formula "18"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "closeTrue" (formula "17"))
                           )
                        )
                        (branch "if thrownExc instanceof java.lang.Throwable false"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
                  (branch "ClassCastException (!(exc_2 instanceof java.lang.Throwable))"
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "closeTrue" (formula "17"))
                  )
               )
               (branch "if exc_2 instanceof java.lang.Throwable false"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Pre (untrustedInput)"
            (builtin "One Step Simplification" (formula "10"))
            (rule "wellFormedAnon" (formula "10") (term "1"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,1,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,0,1,0,0"))
            (rule "replaceKnownSelect_taclet1_0" (formula "10") (term "1,1,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "10") (term "1,1,0,0,0"))
            (rule "replace_known_left" (formula "10") (term "0,1") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "6")))
            (rule "orRight" (formula "10"))
            (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "11"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "false_right" (formula "10"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "1"))
            (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "notRight" (formula "10"))
            (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_uni_trier_infsec_environment_Environment_inputValues_5"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
            (rule "close" (formula "11") (ifseqformula "2"))
         )
      )
      (branch "if x_3 false"
         (builtin "One Step Simplification" (formula "11"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "if x_2 false"
      (builtin "One Step Simplification" (formula "9"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "replace_known_right" (formula "11") (term "0,0,1,0") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "inEqSimp_leqRight" (formula "8"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "add_zero_left" (formula "1") (term "0"))
      (rule "greater_equal_than_comparison_simple" (formula "9") (term "1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "methodCallEmpty" (formula "9") (term "1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "emptyModality" (formula "9") (term "1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "notRight" (formula "9"))
      (rule "ifElseSplit" (formula "11"))
      (branch "if x_3 true"
         (builtin "One Step Simplification" (formula "12"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x_3 false"
         (builtin "One Step Simplification" (formula "12"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "greater_equal_than_comparison_simple" (formula "11") (term "1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "replace_known_left" (formula "11") (term "0,0,1,0") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "blockEmpty" (formula "11") (term "1"))
         (rule "ifSplit" (formula "11"))
         (branch "if x_1 true"
            (builtin "One Step Simplification" (formula "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "true_left" (formula "1"))
            (builtin "Use Operation Contract" (formula "11") (newnames "heapBefore_untrustedInput_0,result_0,exc_0,heapAfter_untrustedInput,anon_heap_untrustedInput") (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::untrustedInput()].JML behavior operation contract.0#de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::untrustedInput()].JML behavior operation contract.1"))
            (branch "Post (untrustedInput)"
               (builtin "One Step Simplification" (formula "11"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,1,1"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,0,1,0,0,1,1"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,0,0,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,0,1,0,0,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,0,0,1,1"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,0,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,1,1,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,0,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,0,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,0,1,1,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,1,1,0,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,0,0,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,1,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,0,0,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,0,0,1,1,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,1,1,1,1,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,1,1,0,0,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,0,1,1,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,0,1,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,1,1,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,0,0,0,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,1,1,1,1,0,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,1,1,0,1,1,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,0,1,1,1,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,0,0,1,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,1,1,1,1,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,1,1,1,1,1,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,1,1,0,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,0,1,1,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,1,1,1,1,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,1,1,0,1,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,0,1,1,1,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,1,1,1,1,1,1,1,0,0"))
               (rule "andLeft" (formula "11"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,0,0,0,1,1,1,0,1,1,1") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,0,0,0,1,1,1,0,1,0,1") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "andLeft" (formula "12"))
               (rule "typeEqDerived" (formula "13") (term "0,1,1,1,1,0") (ifseqformula "12"))
               (rule "typeEqDerived" (formula "13") (term "0,1,1,1,1,1") (ifseqformula "12"))
               (rule "typeEqDerived" (formula "13") (term "0,0,0,1,1,1,0") (ifseqformula "12"))
               (rule "typeEqDerived" (formula "13") (term "0,0,0,1,1,1,1") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
               (rule "andLeft" (formula "13"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,0,0,1,1,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,0,0,1,1,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,0,0,1,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "14") (term "0,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "13") (term "0,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0"))
               (rule "replace_known_left" (formula "14") (term "1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0"))
               (rule "replace_known_left" (formula "13") (term "1,0,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,1,1,0,0,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,1,1,0,0,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,1,1,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,0,1,1,1,1,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,0,1,1,1,1,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,0,1,1,1,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,0,0,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,0,0,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,0,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,0,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,1,1,2,1,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,1,1,2,1,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,1,1,2,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,2,1,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,2,1,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,2,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,1,1,0,2,1,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,1,1,0,2,1,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,1,1,0,2,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,2,1,0,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,2,1,0,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,2,1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,2,1,2,1,2,1,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,2,1,2,1,2,1,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,2,1,2,1,2,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,0,2,1,0,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,0,2,1,0,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,0,2,1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,0,0,0,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,0,0,0,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,2,1,2,1,0,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,2,1,2,1,0,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,2,1,2,1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,0,2,1,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,0,2,1,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,0,2,1,1,0"))
               (rule "assignment" (formula "16") (term "1"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "intersectWithSingleton" (formula "11") (term "0,0,0,1,0"))
               (rule "intersectWithSingleton" (formula "11") (term "2,1,2,1,2,1,1,0"))
               (rule "intersectWithSingleton" (formula "11") (term "0,2,1,2,1,1,0"))
               (rule "intersectWithSingleton" (formula "11") (term "0,2,1,0,1,0"))
               (rule "intersectWithSingleton" (formula "11") (term "0,0,2,1,1,0"))
               (rule "intersectWithSingleton" (formula "11") (term "2,1,0,0,1,0"))
               (rule "intersectWithSingleton" (formula "11") (term "2,1,2,1,0,1,0"))
               (rule "intersectWithSingleton" (formula "11") (term "2,1,0,2,1,1,0"))
               (rule "pullOutSelect" (formula "14") (term "0,0,1,1") (inst "selectSK=de_uni_trier_infsec_environment_Environment_inputCounter_3"))
               (rule "applyEq" (formula "13") (term "0,0,1,1") (ifseqformula "14"))
               (rule "simplifySelectOfAnonEQ" (formula "14") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "replaceKnownSelect_taclet1_0" (formula "14") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "14") (term "2,0"))
               (rule "elementOfIntersect" (formula "14") (term "0,0"))
               (rule "elementOfIntersect" (formula "14") (term "0,0,0"))
               (rule "elementOfIntersect" (formula "14") (term "0,0,0,0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "elementOfSingleton" (formula "14") (term "1,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "pullOutSelect" (formula "15") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_environment_Environment_inputValues_3"))
               (rule "applyEq" (formula "11") (term "0,0,2,0,0,2,1,2,1,1,0") (ifseqformula "15"))
               (rule "applyEq" (formula "11") (term "0,0,2,0,2,1,0,0,1,0") (ifseqformula "15"))
               (rule "applyEq" (formula "13") (term "0,0,0,0") (ifseqformula "15"))
               (rule "applyEq" (formula "11") (term "0,0,2,0,2,1,2,1,0,1,0") (ifseqformula "15"))
               (rule "applyEq" (formula "14") (term "0,0,2,1,0,0,0") (ifseqformula "15"))
               (rule "applyEq" (formula "14") (term "0,0,2,1,0,0") (ifseqformula "15"))
               (rule "applyEq" (formula "11") (term "0,0,2,0,0,0,2,1,1,0") (ifseqformula "15"))
               (rule "applyEq" (formula "11") (term "0,0,2,0,0,2,1,0,1,0") (ifseqformula "15"))
               (rule "applyEq" (formula "14") (term "0,0,2,0,0,0,0,0") (ifseqformula "15"))
               (rule "applyEq" (formula "11") (term "0,0,1,0,0,1,0") (ifseqformula "15"))
               (rule "applyEq" (formula "11") (term "0,0,2,0,0,0,0,1,0") (ifseqformula "15"))
               (rule "applyEq" (formula "11") (term "0,0,1,2,1,2,1,1,0") (ifseqformula "15"))
               (rule "applyEq" (formula "11") (term "0,0,1,0,1,0") (ifseqformula "15"))
               (rule "applyEq" (formula "11") (term "0,0,2,0,2,1,0,2,1,1,0") (ifseqformula "15"))
               (rule "applyEq" (formula "14") (term "0,0,2,0,2,2,1,0,0,0,0") (ifseqformula "15"))
               (rule "applyEq" (formula "14") (term "0,0,1,0,2,2,1,0,0") (ifseqformula "15"))
               (rule "applyEq" (formula "11") (term "0,0,1,2,1,1,0") (ifseqformula "15"))
               (rule "applyEq" (formula "11") (term "0,0,2,0,2,1,2,1,2,1,1,0") (ifseqformula "15"))
               (rule "applyEq" (formula "14") (term "0,0,2,0,0,0,2,2,1,0,0") (ifseqformula "15"))
               (rule "applyEq" (formula "14") (term "0,0,1,2,2,1,0,0") (ifseqformula "15"))
               (rule "applyEq" (formula "14") (term "0,0,2,0,0,2,2,1,0,0,0") (ifseqformula "15"))
               (rule "applyEq" (formula "11") (term "0,0,1,2,1,0,1,0") (ifseqformula "15"))
               (rule "applyEq" (formula "14") (term "0,0,2,0,2,1,0,2,2,1,0,0") (ifseqformula "15"))
               (rule "applyEq" (formula "14") (term "0,0,2,0,2,1,2,1,2,2,1,0,0") (ifseqformula "15"))
               (rule "applyEq" (formula "11") (term "0,0,1,0,2,1,1,0") (ifseqformula "15"))
               (rule "applyEq" (formula "14") (term "0,0,2,0,0,2,1,2,2,1,0,0") (ifseqformula "15"))
               (rule "applyEq" (formula "14") (term "0,0,1,2,1,2,2,1,0,0") (ifseqformula "15"))
               (rule "applyEq" (formula "14") (term "0,0,2,1,0,0,0,0") (ifseqformula "15"))
               (rule "applyEq" (formula "13") (term "0,0,0,1,0") (ifseqformula "15"))
               (rule "applyEq" (formula "14") (term "0,0,1,2,2,1,0,0,0") (ifseqformula "15"))
               (rule "applyEq" (formula "11") (term "0,0,1,1,0") (ifseqformula "15"))
               (rule "applyEq" (formula "14") (term "0,0,2,0,2,1,2,2,1,0,0,0") (ifseqformula "15"))
               (rule "simplifySelectOfAnon" (formula "15"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "elementOfSingleton" (formula "15") (term "0,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "applyEqReverse" (formula "11") (term "0,0,2,0,2,1,2,1,2,1,1,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "11") (term "0,0,1,2,1,1,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "16") (term "0,0,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "11") (term "0,0,1,0,0,1,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "14") (term "0,0,1,2,1,2,2,1,0,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "11") (term "0,0,2,0,2,1,0,0,1,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "14") (term "0,0,2,0,2,1,0,2,2,1,0,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "14") (term "0,0,2,0,2,1,2,2,1,0,0,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "11") (term "0,0,2,0,2,1,0,2,1,1,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "11") (term "0,0,1,2,1,0,1,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "11") (term "0,0,2,0,2,1,2,1,0,1,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "14") (term "0,0,2,0,0,0,2,2,1,0,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "14") (term "0,0,2,0,2,2,1,0,0,0,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "13") (term "0,0,0,1,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "14") (term "0,0,1,0,2,2,1,0,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "14") (term "0,0,1,2,2,1,0,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "14") (term "0,0,2,1,0,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "11") (term "0,0,2,0,0,2,1,2,1,1,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "11") (term "0,0,1,0,1,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "14") (term "0,0,2,0,2,1,2,1,2,2,1,0,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "11") (term "0,0,1,0,2,1,1,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "13") (term "0,0,0,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "14") (term "0,0,2,1,0,0,0,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "14") (term "0,0,1,2,2,1,0,0,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "14") (term "0,0,2,1,0,0,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "14") (term "0,0,2,0,0,2,2,1,0,0,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "11") (term "0,0,2,0,0,2,1,0,1,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "11") (term "0,0,2,0,0,0,0,1,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "11") (term "0,0,2,0,0,0,2,1,1,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "14") (term "0,0,2,0,0,2,1,2,2,1,0,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "11") (term "0,0,1,2,1,2,1,1,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "11") (term "0,0,1,1,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "14") (term "0,0,2,0,0,0,0,0") (ifseqformula "15"))
               (rule "hideAuxiliaryEq" (formula "15"))
               (rule "replace_known_right" (formula "14") (term "0,2,1,0,0,0,0") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
               (rule "replace_known_right" (formula "11") (term "0,2,0,0,2,1,0,1,0") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
               (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "16"))
               (rule "notLeft" (formula "15"))
               (rule "replace_known_right" (formula "13") (term "0,0,0") (ifseqformula "18"))
               (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "17")) (ifInst ""  (formula "15")) (ifInst ""  (formula "16")))
               (rule "true_left" (formula "13"))
               (rule "elementOfSingleton" (formula "13") (term "0,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "13"))
               (rule "hideAuxiliaryEq" (formula "13"))
               (rule "elementOfSingleton" (formula "11") (term "0,1,0"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=de_uni_trier_infsec_environment_Environment_inputValues_4"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "replaceKnownSelect_taclet00111_3" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00111_4" (formula "1") (term "2,0"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "nnf_imp2or" (formula "14") (term "0"))
               (rule "nnf_notAnd" (formula "14") (term "1,0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "nnf_notAnd" (formula "14") (term "0,0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "nnf_notOr" (formula "14") (term "0,0,0"))
               (rule "nnf_notOr" (formula "14") (term "1,0,0,0"))
               (rule "nnf_notOr" (formula "14") (term "0,1,0,0,0"))
               (rule "tryEmpty" (formula "16") (term "1"))
               (rule "commute_or_2" (formula "14") (term "1,0"))
               (rule "commute_or" (formula "14") (term "0,0"))
               (rule "commute_or_2" (formula "14") (term "0"))
               (rule "shift_paren_or" (formula "14") (term "0,0"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0") (ifseqformula "3"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "commute_or" (formula "15") (term "1,0,0,0"))
               (rule "shift_paren_or" (formula "15") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "cnf_rightDist" (formula "15") (term "0"))
               (rule "distr_forallAnd" (formula "15"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "castDel" (formula "15") (term "1,0,1,0,0"))
               (rule "castDel" (formula "15") (term "0,0,0,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "commute_or" (formula "15") (term "0"))
               (rule "cnf_rightDist" (formula "15") (term "0"))
               (rule "distr_forallAnd" (formula "15"))
               (rule "andLeft" (formula "15"))
               (rule "commute_or" (formula "16") (term "0"))
               (rule "cnf_rightDist" (formula "15") (term "0"))
               (rule "distr_forallAnd" (formula "15"))
               (rule "andLeft" (formula "15"))
               (rule "commute_or_2" (formula "15") (term "0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "shift_paren_or" (formula "15") (term "0"))
               (rule "commute_or" (formula "15") (term "0,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "true_left" (formula "15"))
               (rule "methodCallEmpty" (formula "17") (term "1"))
               (rule "emptyModality" (formula "17") (term "1"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "replaceKnownSelect_taclet00111_2" (formula "17") (term "0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00111_5" (formula "17") (term "0,0,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "0,1,0,0,0,1,0") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "14")))
               (rule "eqSymm" (formula "17") (term "1,0,0,1"))
               (rule "nnf_notOr" (formula "17") (term "1,0,0,0,0"))
               (rule "nnf_notOr" (formula "17") (term "0,1,0,0,0,0"))
               (rule "andRight" (formula "17"))
               (branch "Case 1"
                  (rule "allRight" (formula "17") (inst "sk=o_4"))
                  (rule "orRight" (formula "17"))
                  (rule "orRight" (formula "17"))
                  (rule "orRight" (formula "19"))
                  (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "19")))
                  (rule "instAll" (formula "19") (term "1,0") (ifseqformula "15") (userinteraction))
                  (rule "instAll" (formula "20") (term "1,0") (ifseqformula "11") (userinteraction))
                  (rule "replace_known_right" (formula "1") (term "1,0") (ifseqformula "21"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                  (rule "notLeft" (formula "1"))
                  (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "17"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "notRight" (formula "19"))
                  (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "21"))
                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "20")) (ifInst ""  (formula "18")) (ifInst ""  (formula "1")))
                  (rule "closeFalse" (formula "2"))
               )
               (branch
                  (rule "allRight" (formula "17") (inst "sk=f_2"))
                  (rule "allRight" (formula "17") (inst "sk=o_3"))
                  (rule "orRight" (formula "17"))
                  (rule "orRight" (formula "17"))
                  (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=f_2_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "20"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "19"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "commute_and" (formula "18"))
                  (rule "ifthenelse_split" (formula "1") (term "0"))
                  (branch " ¬o_3 = null ∧ ¬( o_3.<created> = TRUE ∨ o_3.<created>@anon_heap_loop«anonHeapFunction» = TRUE) TRUE"
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "2"))
                     (rule "notLeft" (formula "1"))
                     (rule "orRight" (formula "18"))
                     (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "eqSymm" (formula "22"))
                     (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "17")))
                     (rule "closeTrue" (formula "21"))
                  )
                  (branch " ¬o_3 = null ∧ ¬( o_3.<created> = TRUE ∨ o_3.<created>@anon_heap_loop«anonHeapFunction» = TRUE) FALSE"
                     (rule "close" (formula "21") (ifseqformula "1"))
                  )
               )
            )
            (branch "Exceptional Post (untrustedInput)"
               (builtin "One Step Simplification" (formula "13"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,1,1"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,0,1,0,0,1,1"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,0,0,1,1"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,0,1,0,0,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,0,0,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,0,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,0,0,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,1,1,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,1,1,0,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,0,1,1,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,0,0,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,0,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,1,1,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,1,1,0,0,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,0,1,1,0,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,1,1,1,1,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,0,0,1,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,1,1,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,0,1,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,0,0,0,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,1,1,1,1,0,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,1,1,0,1,1,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,0,1,1,1,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,1,1,0,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,0,1,1,0,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,1,1,1,1,1,1,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,1,1,1,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,0,0,1,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,1,1,1,1,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,1,1,0,1,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,0,1,1,1,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,1,1,1,1,1,1,1,1,0,0"))
               (rule "andLeft" (formula "11"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,0") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,0,0,0,1,1,1,0,1,1,1") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,0,0,0,1,1,1,0,1,0,1") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "andLeft" (formula "12"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "12"))
               (rule "notLeft" (formula "12"))
               (rule "replace_known_right" (formula "14") (term "0,0,1") (ifseqformula "15"))
               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "15")))
               (rule "replace_known_right" (formula "13") (term "0,0,1,1") (ifseqformula "15"))
               (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "15")))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,0,1,1,0,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,0,1,1,0,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,0,1,1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "14") (term "1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0"))
               (rule "replace_known_left" (formula "14") (term "1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0"))
               (rule "replace_known_left" (formula "13") (term "1,0,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,0,1,1,1,1,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,0,1,1,1,1,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,0,1,1,1,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "13") (term "1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,0,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,0,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,0,0,1,1,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,0,0,1,1,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,0,0,1,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,1,1,0,0,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,1,1,0,0,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,1,1,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,1,1,2,1,0,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,1,1,2,1,0,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,1,1,2,1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,1,1,1,1,2,1,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,1,1,1,1,2,1,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,1,1,1,1,2,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,1,1,2,1,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,1,1,2,1,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,1,1,2,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,0,2,1,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,0,2,1,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,0,2,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,0,0,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,0,0,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,2,1,0,2,1,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,2,1,0,2,1,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,2,1,0,2,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,2,1,0,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,2,1,0,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,2,1,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,2,1,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,2,1,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,2,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,0,0,0,1,0"))
               (rule "replace_known_left" (formula "11") (term "1,0,1,0,0,0,1,0") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "ifthenelse_negated" (formula "11") (term "1,0,0,0,1,0"))
               (rule "intersectWithSingleton" (formula "11") (term "2,1,2,1,0,1,0"))
               (rule "intersectWithSingleton" (formula "11") (term "0,2,1,2,1,1,0"))
               (rule "intersectWithSingleton" (formula "11") (term "2,1,0,2,1,1,0"))
               (rule "intersectWithSingleton" (formula "11") (term "2,1,2,1,2,1,1,0"))
               (rule "intersectWithSingleton" (formula "11") (term "0,0,2,1,1,0"))
               (rule "intersectWithSingleton" (formula "11") (term "2,1,0,0,1,0"))
               (rule "intersectWithSingleton" (formula "11") (term "0,2,1,0,1,0"))
               (rule "intersectWithSingleton" (formula "11") (term "0,0,0,1,0"))
               (rule "pullOutSelect" (formula "14") (term "0,0,0,1,0,1") (inst "selectSK=de_uni_trier_infsec_environment_Environment_inputValues_2"))
               (rule "applyEq" (formula "13") (term "0,0,0,1,0,1") (ifseqformula "14"))
               (rule "simplifySelectOfAnonEQ" (formula "14") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "elementOfIntersect" (formula "14") (term "0,0"))
               (rule "elementOfIntersect" (formula "14") (term "0,0,0"))
               (rule "elementOfIntersect" (formula "14") (term "0,0,0,0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "elementOfSingleton" (formula "14") (term "1,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "applyEq" (formula "11") (term "0,0,1,0,1,0") (ifseqformula "14"))
               (rule "applyEq" (formula "11") (term "0,0,2,0,0,0,0,1,0") (ifseqformula "14"))
               (rule "applyEq" (formula "11") (term "0,0,1,1,0") (ifseqformula "14"))
               (rule "applyEq" (formula "11") (term "0,0,1,2,1,0,1,0") (ifseqformula "14"))
               (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "14"))
               (rule "applyEq" (formula "11") (term "0,0,1,2,1,2,1,1,0") (ifseqformula "14"))
               (rule "applyEq" (formula "11") (term "0,0,2,0,2,1,2,1,2,1,1,0") (ifseqformula "14"))
               (rule "applyEq" (formula "11") (term "0,0,2,0,0,0,2,1,1,0") (ifseqformula "14"))
               (rule "applyEq" (formula "11") (term "0,0,2,0,0,2,1,0,1,0") (ifseqformula "14"))
               (rule "applyEq" (formula "13") (term "0,0,0,1,0") (ifseqformula "14"))
               (rule "applyEq" (formula "11") (term "0,0,1,2,1,1,0") (ifseqformula "14"))
               (rule "applyEq" (formula "11") (term "0,0,2,0,2,1,2,1,0,1,0") (ifseqformula "14"))
               (rule "applyEq" (formula "11") (term "0,0,1,0,0,1,0") (ifseqformula "14"))
               (rule "applyEq" (formula "11") (term "0,0,2,0,0,2,1,2,1,1,0") (ifseqformula "14"))
               (rule "applyEq" (formula "11") (term "0,0,2,0,2,1,0,0,1,0") (ifseqformula "14"))
               (rule "applyEq" (formula "11") (term "0,0,2,0,2,1,0,2,1,1,0") (ifseqformula "14"))
               (rule "applyEq" (formula "13") (term "0,0,0,0") (ifseqformula "14"))
               (rule "applyEq" (formula "11") (term "0,0,1,0,2,1,1,0") (ifseqformula "14"))
               (rule "simplifySelectOfAnon" (formula "14"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "elementOfSingleton" (formula "14") (term "0,0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "applyEqReverse" (formula "11") (term "0,0,1,2,1,1,0") (ifseqformula "14"))
               (rule "applyEqReverse" (formula "13") (term "0,0,0,1,0") (ifseqformula "14"))
               (rule "applyEqReverse" (formula "11") (term "0,0,2,0,2,1,2,1,2,1,1,0") (ifseqformula "14"))
               (rule "applyEqReverse" (formula "11") (term "0,0,1,2,1,2,1,1,0") (ifseqformula "14"))
               (rule "applyEqReverse" (formula "15") (term "0,0,0") (ifseqformula "14"))
               (rule "applyEqReverse" (formula "11") (term "0,0,2,0,0,2,1,0,1,0") (ifseqformula "14"))
               (rule "applyEqReverse" (formula "11") (term "0,0,1,1,0") (ifseqformula "14"))
               (rule "applyEqReverse" (formula "11") (term "0,0,2,0,0,0,0,1,0") (ifseqformula "14"))
               (rule "applyEqReverse" (formula "13") (term "0,0,0,1,0,1") (ifseqformula "14"))
               (rule "applyEqReverse" (formula "11") (term "0,0,1,2,1,0,1,0") (ifseqformula "14"))
               (rule "applyEqReverse" (formula "11") (term "0,0,1,0,1,0") (ifseqformula "14"))
               (rule "applyEqReverse" (formula "15") (term "0,0,0,1,0,1") (ifseqformula "14"))
               (rule "applyEqReverse" (formula "11") (term "0,0,2,0,0,0,2,1,1,0") (ifseqformula "14"))
               (rule "applyEqReverse" (formula "11") (term "0,0,1,0,2,1,1,0") (ifseqformula "14"))
               (rule "applyEqReverse" (formula "11") (term "0,0,2,0,2,1,0,0,1,0") (ifseqformula "14"))
               (rule "applyEqReverse" (formula "11") (term "0,0,1,0,0,1,0") (ifseqformula "14"))
               (rule "applyEqReverse" (formula "11") (term "0,0,2,0,2,1,2,1,0,1,0") (ifseqformula "14"))
               (rule "applyEqReverse" (formula "11") (term "0,0,2,0,0,2,1,2,1,1,0") (ifseqformula "14"))
               (rule "applyEqReverse" (formula "13") (term "0,0,0,0") (ifseqformula "14"))
               (rule "applyEqReverse" (formula "11") (term "0,0,2,0,2,1,0,2,1,1,0") (ifseqformula "14"))
               (rule "hideAuxiliaryEq" (formula "14"))
               (rule "replace_known_right" (formula "11") (term "0,1,0,0,1,0") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
               (rule "replace_known_right" (formula "14") (term "0,0,1,0,1") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "16")))
               (rule "andLeft" (formula "14"))
               (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "15"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "replace_known_right" (formula "13") (term "0,0,1,0,1") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "17")) (ifInst ""  (formula "15")) (ifInst ""  (formula "14")) (ifInst ""  (formula "15")))
               (rule "true_left" (formula "13"))
               (rule "elementOfSingleton" (formula "11") (term "0,1,0"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=de_uni_trier_infsec_environment_Environment_inputCounter_2"))
               (rule "simplifySelectOfAnonEQ" (formula "13") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "replaceKnownSelect_taclet1_0" (formula "13") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "13") (term "2,0"))
               (rule "elementOfSingleton" (formula "13") (term "0,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "13"))
               (rule "hideAuxiliaryEq" (formula "13"))
               (rule "tryCatchThrow" (formula "17") (term "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "0") (ifseqformula "3"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "methodCallParamThrow" (formula "18") (term "1,0,0,1"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "ifElseUnfold" (formula "18") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_4"))
               (rule "equality_comparison_simple" (formula "18") (term "1"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "replace_known_right" (formula "18") (term "0,0,1,0") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "ifElseSplit" (formula "18"))
               (branch "if x_4 true"
                  (builtin "One Step Simplification" (formula "19"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if x_4 false"
                  (builtin "One Step Simplification" (formula "19"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "ifElseSplit" (formula "18"))
                  (branch "if exc_0 instanceof java.lang.Throwable true"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                     (rule "true_left" (formula "1"))
                     (rule "variableDeclaration" (formula "18") (term "1") (newnames "e"))
                     (rule "reference_type_cast" (formula "18") (term "1"))
                     (branch "Normal Execution (exc_0 instanceof java.lang.Throwable)"
                        (builtin "One Step Simplification" (formula "19"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "assignment" (formula "18") (term "1"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "assignment" (formula "18") (term "1"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "methodCallEmpty" (formula "18") (term "1"))
                        (rule "emptyModality" (formula "18") (term "1"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "tryCatchThrow" (formula "18") (term "1"))
                        (rule "ifElseUnfold" (formula "18") (term "1") (inst "#boolv=x"))
                        (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_5"))
                        (rule "equality_comparison_simple" (formula "18") (term "1"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "replace_known_right" (formula "18") (term "0,0,1,0") (ifseqformula "16"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "ifElseSplit" (formula "18"))
                        (branch "if x_5 true"
                           (builtin "One Step Simplification" (formula "19"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "if x_5 false"
                           (builtin "One Step Simplification" (formula "19"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "ifElseSplit" (formula "18"))
                           (branch "if thrownExc instanceof java.lang.Throwable true"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                              (rule "true_left" (formula "1"))
                              (rule "variableDeclaration" (formula "18") (term "1") (newnames "e_1"))
                              (rule "reference_type_cast" (formula "18") (term "1"))
                              (branch "Normal Execution (thrownExc instanceof java.lang.Throwable)"
                                 (builtin "One Step Simplification" (formula "19"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "assignment" (formula "18") (term "1"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "emptyModality" (formula "18") (term "1"))
                                 (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "16")) (ifInst ""  (formula "16")) (ifInst ""  (formula "15")) (ifInst ""  (formula "15")))
                                 (rule "replaceKnownSelect_taclet10111_5" (formula "18") (term "0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10111_6" (formula "18") (term "0,1,0"))
                                 (rule "replaceKnownSelect_taclet10111_2" (formula "18") (term "0,0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10111_4" (formula "18") (term "0,0,0,0"))
                                 (rule "eqSymm" (formula "18") (term "1,0,0,1"))
                                 (rule "replace_known_left" (formula "18") (term "1,0") (ifseqformula "14"))
                                 (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "17")))
                                 (rule "allRight" (formula "18") (inst "sk=f_1"))
                                 (rule "allRight" (formula "18") (inst "sk=o_2"))
                                 (rule "orRight" (formula "18"))
                                 (rule "orRight" (formula "18"))
                                 (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=f_1_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "21"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "19"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_1"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "commute_and" (formula "19"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_loop«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "18"))
                                    (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "eqSymm" (formula "23"))
                                    (rule "replace_known_right" (formula "21") (term "1") (ifseqformula "16"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "false_right" (formula "21"))
                                    (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "16"))
                                    (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "17")))
                                    (rule "closeTrue" (formula "21"))
                                 )
                                 (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_loop«anonHeapFunction» = TRUE) FALSE"
                                    (rule "close" (formula "22") (ifseqformula "1"))
                                 )
                              )
                              (branch "ClassCastException (!(thrownExc instanceof java.lang.Throwable))"
                                 (builtin "One Step Simplification" (formula "19"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "closeTrue" (formula "18"))
                              )
                           )
                           (branch "if thrownExc instanceof java.lang.Throwable false"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "ClassCastException (!(exc_0 instanceof java.lang.Throwable))"
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "closeTrue" (formula "18"))
                     )
                  )
                  (branch "if exc_0 instanceof java.lang.Throwable false"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
            (branch "Pre (untrustedInput)"
               (builtin "One Step Simplification" (formula "11"))
               (rule "wellFormedAnon" (formula "11") (term "1"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,1,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,0,1,0,0"))
               (rule "replaceKnownSelect_taclet1_0" (formula "11") (term "1,1,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1_1" (formula "11") (term "1,1,0,0,0"))
               (rule "replace_known_left" (formula "11") (term "1,1") (ifseqformula "7"))
               (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "3")))
               (rule "orRight" (formula "11"))
               (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "false_right" (formula "11"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "1"))
               (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "notRight" (formula "11"))
               (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_uni_trier_infsec_environment_Environment_inputValues_1"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
               (rule "close" (formula "12") (ifseqformula "2"))
            )
         )
         (branch "if x_1 false"
            (builtin "One Step Simplification" (formula "12"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
)
(branch "Use Case"
   (builtin "One Step Simplification" (formula "8"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "inEqSimp_commuteLeq" (formula "6"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "b_1"))
   (rule "pullOutSelect" (formula "6") (term "0") (inst "selectSK=de_uni_trier_infsec_environment_Environment_inputCounter_0"))
   (rule "simplifySelectOfAnon" (formula "6"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "elementOfSingleton" (formula "6") (term "0,0"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "applyEqReverse" (formula "7") (term "0") (ifseqformula "6"))
   (rule "hideAuxiliaryEq" (formula "6"))
   (rule "nnf_imp2or" (formula "7") (term "0"))
   (rule "nnf_notAnd" (formula "7") (term "1,0"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "nnf_notAnd" (formula "7") (term "0,0"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "nnf_notOr" (formula "7") (term "0,0,0"))
   (rule "nnf_notOr" (formula "7") (term "1,0,0,0"))
   (rule "commute_or" (formula "7") (term "1,0"))
   (rule "commute_or" (formula "7") (term "0,0"))
   (rule "commute_or_2" (formula "7") (term "0"))
   (rule "shift_paren_or" (formula "7") (term "0,0"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "cnf_rightDist" (formula "7") (term "0"))
   (rule "distr_forallAnd" (formula "7"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "castDel" (formula "7") (term "1,0,1,0"))
   (rule "castDel" (formula "7") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "commute_or" (formula "7") (term "0"))
   (rule "cnf_rightDist" (formula "7") (term "0"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "commute_or" (formula "7") (term "0"))
   (rule "compound_assignment_5_nonsimple" (formula "9") (term "1"))
   (rule "ifElseUnfold" (formula "9") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x"))
   (rule "less_than_comparison_simple" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,1,0"))
   (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,1,0"))
   (rule "add_zero_right" (formula "9") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,1,0"))
   (rule "mul_literals" (formula "9") (term "1,0,0,1,0"))
   (rule "ifElseSplit" (formula "9"))
   (branch "if x true"
      (builtin "One Step Simplification" (formula "10"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "assignment" (formula "10") (term "1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "methodCallEmpty" (formula "10") (term "1"))
      (rule "emptyModality" (formula "10") (term "1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "closeTrue" (formula "10"))
   )
   (branch "if x false"
      (builtin "One Step Simplification" (formula "10"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "inEqSimp_leqRight" (formula "8"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "add_zero_left" (formula "1") (term "0"))
      (rule "greater_equal_than_comparison_simple" (formula "10") (term "1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "methodCallEmpty" (formula "10") (term "1"))
      (rule "emptyModality" (formula "10") (term "1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "impRight" (formula "10"))
      (rule "notLeft" (formula "1"))
      (rule "inEqSimp_geqRight" (formula "9"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1"))
      (rule "polySimp_rightDist" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
      (rule "times_zero_1" (formula "2") (term "0,0"))
      (rule "add_zero_left" (formula "2") (term "0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
      (rule "mul_literals" (formula "2") (term "1"))
      (rule "methodCallReturn" (formula "11") (term "1"))
      (rule "assignment" (formula "11") (term "1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "methodCallEmpty" (formula "11") (term "1"))
      (rule "tryEmpty" (formula "11") (term "1"))
      (rule "emptyModality" (formula "11") (term "1"))
      (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "2")) (ifInst ""  (formula "1")))
      (rule "replaceKnownSelect_taclet2_0" (formula "11") (term "0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet2_1" (formula "11") (term "0,0,1,0"))
      (rule "eqSymm" (formula "11") (term "1,0,0,1"))
      (rule "replace_known_left" (formula "11") (term "0,1,0") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "pullOutSelect" (formula "11") (term "0,0,0,0") (inst "selectSK=de_uni_trier_infsec_environment_Environment_inputValues_0"))
      (rule "simplifySelectOfAnon" (formula "1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "12") (term "0,0,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "11") (term "0,0,0") (ifseqformula "10"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "nnf_notOr" (formula "11") (term "1,0,0,0,0"))
      (rule "andRight" (formula "11"))
      (branch "Case 1"
         (rule "allRight" (formula "11") (inst "sk=o_1"))
         (rule "orRight" (formula "11"))
         (rule "orRight" (formula "12"))
         (rule "orRight" (formula "11"))
         (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "12")))
         (rule "notRight" (formula "11"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0") (ifseqformula "4"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "instAll" (formula "14") (term "0") (ifseqformula "11") (userinteraction))
         (rule "replace_known_left" (formula "1") (term "0,1") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")) (ifInst ""  (formula "14")))
         (rule "closeFalse" (formula "1"))
      )
      (branch
         (rule "allRight" (formula "11") (inst "sk=f_0"))
         (rule "allRight" (formula "11") (inst "sk=o_0"))
         (rule "orRight" (formula "11"))
         (rule "orRight" (formula "11"))
         (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=f_0_0"))
         (rule "simplifySelectOfAnon" (formula "1"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
         (rule "eqSymm" (formula "14"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
)

}
