\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Feb 02 15:16:54 CET 2015
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=80000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Mon Feb 02 15:16:54 CET 2015
name=de.uni.trier.infsec.eVotingMachine.core.VotingMachine[de.uni.trier.infsec.eVotingMachine.core.VotingMachine\\:\\:signAndPost([B,[B,de.uni.trier.infsec.functionalities.pkisig.Signer)].JML behavior operation contract.0
contract=de.uni.trier.infsec.eVotingMachine.core.VotingMachine[de.uni.trier.infsec.eVotingMachine.core.VotingMachine\\:\\:signAndPost([B,[B,de.uni.trier.infsec.functionalities.pkisig.Signer)].JML behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "kirsten" ) (keyVersion "31a2f66d4110d575b74cc5815e7ca260a8d03cf2"))

(autoModeTime "14872")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "heapAtPre"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "insert_constant_string_value" (formula "4") (term "0,0") (ifseqformula "1"))
(builtin "One Step Simplification" (formula "4"))
(rule "castDel" (formula "4") (term "0,0,0"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "2"))
(rule "notLeft" (formula "5"))
(rule "notLeft" (formula "5"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "2"))
(rule "eqSymm" (formula "9") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "8"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "7"))
(builtin "One Step Simplification" (formula "2"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "6"))
(builtin "One Step Simplification" (formula "4"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "elementOfUnion" (formula "9") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "9") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "9") (term "0,0,0,0,0,1,0,1"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_signAndPost,savedHeapBefore_signAndPost"))
(builtin "One Step Simplification" (formula "9"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "timestamp"))
(builtin "Use Operation Contract" (formula "9") (newnames "heapBefore_get,result,exc_0,heapAfter_get,anon_heap_get") (contract "de.uni.trier.infsec.lib.time.Timestamp[de.uni.trier.infsec.lib.time.Timestamp::get()].JML behavior operation contract.0"))
(branch "Post (get)"
   (builtin "One Step Simplification" (formula "7"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "8"))
   (rule "typeEqDerived" (formula "9") (term "0,0,1") (ifseqformula "8"))
   (rule "typeEqDerived" (formula "9") (term "0,1,1") (ifseqformula "8"))
   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "8")))
   (rule "true_left" (formula "9"))
   (rule "assignment" (formula "12") (term "1"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "variableDeclarationAssign" (formula "12") (term "1"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "tag_timestamp"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "12") (term "1"))
   (rule "variableDeclarationAssign" (formula "12") (term "1"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "var"))
   (rule "assignment" (formula "12") (term "1"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "variableDeclarationAssign" (formula "12") (term "1"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "var_1"))
   (builtin "Use Operation Contract" (formula "12") (newnames "heapBefore_longToByteArray,result_0,exc_1,heapAfter_longToByteArray,anon_heap_longToByteArray") (contract "de.uni.trier.infsec.utils.MessageTools[de.uni.trier.infsec.utils.MessageTools::longToByteArray(long)].JML normal_behavior operation contract.0"))
   (branch "Post (longToByteArray)"
      (builtin "One Step Simplification" (formula "14"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "0,0,1,0,0,1,1") (ifseqformula "7"))
      (rule "andLeft" (formula "10"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,1,0") (ifseqformula "10"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "0,1,1,0") (ifseqformula "7"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "notLeft" (formula "14"))
      (rule "andLeft" (formula "13"))
      (rule "notLeft" (formula "14"))
      (rule "notLeft" (formula "13"))
      (rule "orRight" (formula "14"))
      (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "16"))
      (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "14")) (ifInst ""  (formula "15")))
      (rule "assignment" (formula "20") (term "1"))
      (builtin "One Step Simplification" (formula "20"))
      (builtin "Use Operation Contract" (formula "20") (newnames "heapBefore_concatenate,result_1,exc_2,heapAfter_concatenate,anon_heap_concatenate") (contract "de.uni.trier.infsec.utils.MessageTools[de.uni.trier.infsec.utils.MessageTools::concatenate([B,[B)].JML behavior operation contract.0"))
      (branch "Post (concatenate)"
         (builtin "One Step Simplification" (formula "22"))
         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "20")) (ifInst ""  (formula "18")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,0,1,1,0,1,0,1,1") (ifseqformula "10"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,0,0,1,1,0,1,0,1,1") (ifseqformula "7"))
         (rule "translateJavaAddInt" (formula "15") (term "0,1,0,1,0,1,0,1,1"))
         (rule "translateJavaAddInt" (formula "15") (term "1,0,1,0,1,0,1,1"))
         (rule "andLeft" (formula "15"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1,1,0") (ifseqformula "15"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,1,1,0") (ifseqformula "10"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,0,1,1,0") (ifseqformula "7"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "16"))
         (rule "typeEqDerived" (formula "19") (term "0,1") (ifseqformula "16"))
         (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "16")))
         (rule "true_left" (formula "19"))
         (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "16"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "notLeft" (formula "20"))
         (rule "andLeft" (formula "19"))
         (rule "andLeft" (formula "20"))
         (rule "notLeft" (formula "21"))
         (rule "notLeft" (formula "20"))
         (rule "orRight" (formula "20"))
         (rule "orRight" (formula "20"))
         (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "23"))
         (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "20")) (ifInst ""  (formula "21")) (ifInst ""  (formula "22")))
         (rule "polySimp_homoEq" (formula "19"))
         (rule "polySimp_addComm0" (formula "19") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "19") (term "0,0"))
         (rule "polySimp_addComm1" (formula "19") (term "0"))
         (rule "polySimp_addComm0" (formula "19") (term "0,0,0"))
         (rule "assignment" (formula "30") (term "1"))
         (builtin "One Step Simplification" (formula "30"))
         (rule "blockEmpty" (formula "30") (term "1"))
         (rule "variableDeclarationAssign" (formula "30") (term "1"))
         (rule "variableDeclaration" (formula "30") (term "1") (newnames "payload"))
         (rule "applyEq" (formula "19") (term "1,0,0,0") (ifseqformula "12"))
         (rule "add_literals" (formula "19") (term "0,0,0"))
         (rule "polySimp_sepPosMonomial" (formula "19"))
         (rule "polySimp_mulComm0" (formula "19") (term "1"))
         (rule "polySimp_rightDist" (formula "19") (term "1"))
         (rule "mul_literals" (formula "19") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1"))
         (builtin "Use Operation Contract" (formula "30") (newnames "heapBefore_concatenate_0,result_2,exc_3,heapAfter_concatenate_0,anon_heap_concatenate_0") (contract "de.uni.trier.infsec.utils.MessageTools[de.uni.trier.infsec.utils.MessageTools::concatenate([B,[B)].JML behavior operation contract.0"))
         (branch "Post (concatenate)"
            (builtin "One Step Simplification" (formula "32"))
            (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "25")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,1,1,0,1,0,1,1") (ifseqformula "15"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,0,1,1,0,1,0,1,1") (ifseqformula "10"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,0,0,1,1,0,1,0,1,1") (ifseqformula "7"))
            (rule "translateJavaAddInt" (formula "21") (term "0,1,1,0,1,0,1,0,1,1"))
            (rule "translateJavaAddInt" (formula "21") (term "1,1,0,1,0,1,0,1,1"))
            (rule "andLeft" (formula "21"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1,1,0") (ifseqformula "21"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,1,1,0") (ifseqformula "15"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,0,1,1,0") (ifseqformula "10"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,0,0,1,1,0") (ifseqformula "7"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "22"))
            (rule "typeEqDerived" (formula "24") (term "0,1,1") (ifseqformula "22"))
            (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "24"))
            (rule "notLeft" (formula "26"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "26"))
            (rule "notLeft" (formula "26"))
            (rule "notLeft" (formula "26"))
            (rule "orRight" (formula "26"))
            (rule "orRight" (formula "26"))
            (rule "orRight" (formula "26"))
            (rule "replace_known_right" (formula "23") (term "1,0,1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "30")) (ifInst ""  (formula "26")) (ifInst ""  (formula "27")) (ifInst ""  (formula "28")))
            (rule "polySimp_addComm0" (formula "25") (term "0,1,1"))
            (rule "polySimp_addComm1" (formula "25") (term "1,1"))
            (rule "polySimp_addComm0" (formula "25") (term "0,1,1"))
            (rule "assignment" (formula "41") (term "1"))
            (builtin "One Step Simplification" (formula "41"))
            (rule "variableDeclarationAssign" (formula "41") (term "1"))
            (rule "variableDeclaration" (formula "41") (term "1") (newnames "signature"))
            (builtin "Use Operation Contract" (formula "41") (newnames "heapBefore_sign,result_3,exc_4") (contract "de.uni.trier.infsec.functionalities.pkisig.Signer[de.uni.trier.infsec.functionalities.pkisig.Signer::sign([B)].JML behavior operation contract.0"))
            (branch "Post (sign)"
               (builtin "One Step Simplification" (formula "42"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1,1,0") (ifseqformula "21"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1,1,0") (ifseqformula "15"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,1,1,0") (ifseqformula "10"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,0,1,1,0") (ifseqformula "7"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "typeEqDerived" (formula "28") (term "0,1") (ifseqformula "26"))
               (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "26")))
               (rule "true_left" (formula "28"))
               (rule "assignment" (formula "43") (term "1"))
               (builtin "One Step Simplification" (formula "43"))
               (rule "variableDeclarationAssign" (formula "43") (term "1"))
               (rule "variableDeclaration" (formula "43") (term "1") (newnames "signedPayload"))
               (rule "shift_paren_or" (formula "27"))
               (rule "commute_or_2" (formula "27") (term "1,0"))
               (rule "shift_paren_or" (formula "27") (term "0"))
               (rule "shift_paren_or" (formula "27") (term "0,0"))
               (rule "shift_paren_or" (formula "27") (term "0,0,0"))
               (rule "commute_or_2" (formula "27"))
               (rule "commute_or_2" (formula "27") (term "0,0"))
               (rule "commute_or_2" (formula "27") (term "0"))
               (builtin "Use Operation Contract" (formula "43") (newnames "heapBefore_concatenate_1,result_4,exc_5,heapAfter_concatenate_1,anon_heap_concatenate_1") (contract "de.uni.trier.infsec.utils.MessageTools[de.uni.trier.infsec.utils.MessageTools::concatenate([B,[B)].JML behavior operation contract.0"))
               (branch "Post (concatenate)"
                  (builtin "One Step Simplification" (formula "45"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "34")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,1,1,0,1,0,1,1") (ifseqformula "21"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,0,1,1,0,1,0,1,1") (ifseqformula "15"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,0,0,1,1,0,1,0,1,1") (ifseqformula "10"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,0,0,0,1,1,0,1,0,1,1") (ifseqformula "7"))
                  (rule "translateJavaAddInt" (formula "29") (term "1,1,0,1,0,1,0,1,1"))
                  (rule "translateJavaAddInt" (formula "29") (term "0,1,1,0,1,0,1,0,1,1"))
                  (rule "andLeft" (formula "29"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "1,1,0") (ifseqformula "29"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,1,1,0") (ifseqformula "21"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,1,1,0") (ifseqformula "15"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0,1,1,0") (ifseqformula "10"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0,0,1,1,0") (ifseqformula "7"))
                  (rule "andLeft" (formula "30"))
                  (rule "andLeft" (formula "30"))
                  (rule "typeEqDerived" (formula "32") (term "0,1,1") (ifseqformula "30"))
                  (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "30")) (ifInst ""  (formula "30")))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "32"))
                  (rule "notLeft" (formula "34"))
                  (rule "andLeft" (formula "33"))
                  (rule "andLeft" (formula "34"))
                  (rule "notLeft" (formula "35"))
                  (rule "notLeft" (formula "34"))
                  (rule "orRight" (formula "34"))
                  (rule "orRight" (formula "34"))
                  (rule "orRight" (formula "34"))
                  (rule "orRight" (formula "34"))
                  (rule "replace_known_right" (formula "31") (term "1,0,0,0,1") (ifseqformula "36"))
                  (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "39")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")) (ifInst ""  (formula "37")) (ifInst ""  (formula "38")))
                  (rule "polySimp_addComm1" (formula "33") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "33") (term "0,1,1"))
                  (rule "assignment" (formula "55") (term "1"))
                  (builtin "One Step Simplification" (formula "55"))
                  (rule "arrayLengthIsAShort" (formula "12") (term "0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "arrayLengthNotNegative" (formula "12") (term "0"))
                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                  (rule "qeq_literals" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                  (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                  (rule "mul_literals" (formula "19") (term "1"))
                  (rule "methodCallUnfoldArguments" (formula "56") (term "1"))
                  (rule "variableDeclarationAssign" (formula "56") (term "1"))
                  (rule "variableDeclaration" (formula "56") (term "1") (newnames "var_2"))
                  (rule "assignment" (formula "56") (term "1"))
                  (builtin "One Step Simplification" (formula "56"))
                  (rule "variableDeclarationAssign" (formula "56") (term "1"))
                  (rule "variableDeclaration" (formula "56") (term "1") (newnames "var_3"))
                  (rule "stringAssignment" (formula "56") (term "1"))
                  (builtin "One Step Simplification" (formula "57"))
                  (builtin "One Step Simplification" (formula "56"))
                  (rule "eqSymm" (formula "56"))
                  (rule "variableDeclarationAssign" (formula "56") (term "1"))
                  (rule "variableDeclaration" (formula "56") (term "1") (newnames "var_4"))
                  (rule "assignment" (formula "56") (term "1"))
                  (builtin "One Step Simplification" (formula "56"))
                  (rule "arrayLengthIsAShort" (formula "20") (term "1,1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "arrayLengthNotNegative" (formula "20") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "19"))
                  (rule "leq_literals" (formula "20") (term "0"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (builtin "Use Operation Contract" (formula "56") (newnames "heapBefore_send,exc_6,heapAfter_send,anon_heap_send") (contract "de.uni.trier.infsec.lib.network.NetworkClient[de.uni.trier.infsec.lib.network.NetworkClient::send([B,java.lang.String,int)].JML behavior operation contract.0"))
                  (branch "Post (send)"
                     (builtin "One Step Simplification" (formula "36"))
                     (builtin "One Step Simplification" (formula "58"))
                     (rule "andLeft" (formula "36"))
                     (rule "andLeft" (formula "37"))
                     (rule "typeEqDerived" (formula "38") (term "0,1,1") (ifseqformula "37"))
                     (rule "typeEqDerived" (formula "38") (term "0,0,0,1") (ifseqformula "37"))
                     (rule "typeEqDerived" (formula "38") (term "0,1,0,1") (ifseqformula "37"))
                     (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "37")))
                     (rule "true_left" (formula "38"))
                     (rule "methodCallEmpty" (formula "59") (term "1"))
                     (rule "tryEmpty" (formula "59") (term "1"))
                     (rule "emptyModality" (formula "59") (term "1"))
                     (builtin "One Step Simplification" (formula "59"))
                     (rule "allRight" (formula "59") (inst "sk=f_19"))
                     (rule "allRight" (formula "59") (inst "sk=o_19"))
                     (rule "orRight" (formula "59"))
                     (rule "orRight" (formula "59"))
                     (rule "orRight" (formula "59"))
                     (rule "eqSymm" (formula "62"))
                     (rule "pullOutSelect" (formula "62") (term "0") (inst "selectSK=f_19_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "63"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "60"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "61"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__13"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "60"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_19_1"))
                     (rule "simplifySelectOfCreate" (formula "2"))
                     (rule "castDel" (formula "2") (term "1,0"))
                     (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                     (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "61"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__14"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "26"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "19"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "14"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "11"))
                     (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=f_19_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "35"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "27"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,1,0,0") (ifseqformula "20"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "15"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,1,0,0") (ifseqformula "12"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__15"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "21"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "16"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "13"))
                     (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=f_19_3"))
                     (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "29"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,1,0,0") (ifseqformula "22"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,1,0,0") (ifseqformula "17"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,0,1,0,0") (ifseqformula "14"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__16"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "18"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "15"))
                     (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=f_19_4"))
                     (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "0,1,0,0") (ifseqformula "19"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "0,0,1,0,0") (ifseqformula "16"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__17"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "17"))
                     (rule "pullOutSelect" (formula "6") (term "2,0") (inst "selectSK=f_19_5"))
                     (rule "simplifySelectOfAnonEQ" (formula "6") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "0,1,0,0") (ifseqformula "18"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__18"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "6") (term "2,0") (inst "selectSK=f_19_6"))
                     (rule "simplifySelectOfAnonEQ" (formula "6") (ifseqformula "19"))
                     (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "73")))
                     (rule "elementOfSingleton" (formula "6") (term "0,0,0"))
                     (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "71"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                     (rule "hideAuxiliaryEq" (formula "6"))
                     (rule "commute_and" (formula "70"))
                     (rule "commute_and" (formula "71"))
                     (rule "commute_and" (formula "11") (term "0,0"))
                     (rule "commute_and" (formula "10") (term "0,0"))
                     (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                     (rule "commute_or_2" (formula "8") (term "0,1,0,0"))
                     (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                     (rule "commute_or_2" (formula "9") (term "0,0,1,0,0"))
                     (rule "commute_or_2" (formula "4") (term "0,1,0,0"))
                     (rule "commute_or_2" (formula "9") (term "0,1,0,0"))
                     (rule "ifthenelse_split" (formula "1") (term "0"))
                     (branch " ¬o_19 = null ∧ ¬( o_19.<created> = TRUE ∨ o_19.<created>@anon_heap_get«anonHeapFunction» = TRUE) TRUE"
                        (rule "andLeft" (formula "1"))
                        (rule "notLeft" (formula "2"))
                        (rule "notLeft" (formula "1"))
                        (rule "orRight" (formula "50"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_right" (formula "7") (term "1,0,0,0,1,0,0") (ifseqformula "50"))
                        (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "48")) (ifInst ""  (formula "49")))
                        (rule "replace_known_right" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "49"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")) (ifInst ""  (formula "50")))
                        (rule "replace_known_right" (formula "8") (term "0,0,0,0,0,1,0,0") (ifseqformula "49"))
                        (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "48")) (ifInst ""  (formula "50")))
                        (rule "replace_known_right" (formula "5") (term "1,0,1,0,0") (ifseqformula "50"))
                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "48")) (ifInst ""  (formula "49")))
                        (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "replace_known_right" (formula "3") (term "0,0,0,0,0,1,0,0") (ifseqformula "48"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "47")) (ifInst ""  (formula "49")))
                        (rule "replace_known_right" (formula "5") (term "1,0,0,1,0,0") (ifseqformula "49"))
                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "47")) (ifInst ""  (formula "48")))
                        (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "48"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")) (ifInst ""  (formula "49")))
                        (rule "replace_known_right" (formula "9") (term "0,1,0,0") (ifseqformula "47"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "replace_known_right" (formula "73") (term "0,1") (ifseqformula "48"))
                        (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "47")))
                        (rule "closeTrue" (formula "73"))
                     )
                     (branch " ¬o_19 = null ∧ ¬( o_19.<created> = TRUE ∨ o_19.<created>@anon_heap_get«anonHeapFunction» = TRUE) FALSE"
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "48"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "commute_or_2" (formula "2") (term "0,0,1,0,0"))
                        (rule "commute_or_2" (formula "6") (term "0,0,1,0,0"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch " ¬o_19 = null ∧ ¬( o_19.<created> = TRUE ∨ o_19.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "orRight" (formula "47"))
                           (rule "orRight" (formula "47"))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "2") (term "0,0,0,0,0,1,0,0") (ifseqformula "46"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "49")) (ifInst ""  (formula "47")) (ifInst ""  (formula "48")))
                           (rule "replace_known_right" (formula "4") (term "1,0,0,1,0,0") (ifseqformula "47"))
                           (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "49")) (ifInst ""  (formula "46")) (ifInst ""  (formula "48")))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "46"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "45")) (ifInst ""  (formula "47")))
                           (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "48"))
                           (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "45")) (ifInst ""  (formula "46")) (ifInst ""  (formula "47")))
                           (rule "replace_known_right" (formula "7") (term "0,1,0,0") (ifseqformula "48"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "replace_known_right" (formula "4") (term "0,0,0,0,1,0,0") (ifseqformula "45"))
                           (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "48")) (ifInst ""  (formula "46")) (ifInst ""  (formula "47")))
                           (rule "replace_known_right" (formula "73") (term "0,1") (ifseqformula "45"))
                           (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "48")))
                           (rule "closeTrue" (formula "73"))
                        )
                        (branch " ¬o_19 = null ∧ ¬( o_19.<created> = TRUE ∨ o_19.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "46"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "cut_direct" (formula "35") (term "0,0,0,0,0"))
                           (branch "CUT: result_3 = null TRUE"
                              (builtin "One Step Simplification" (formula "36"))
                              (rule "true_left" (formula "36"))
                              (rule "replace_known_left" (formula "41") (term "0,0") (ifseqformula "35"))
                              (builtin "One Step Simplification" (formula "41"))
                              (rule "true_left" (formula "41"))
                              (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0"))
                              (rule "commute_or_2" (formula "5") (term "0,0,0,1,0,0"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch " ¬o_19 = null ∧ ¬( o_19.<created> = TRUE ∨ o_19.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "orRight" (formula "44"))
                                 (rule "orRight" (formula "44"))
                                 (rule "orRight" (formula "44"))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,1,0,0") (ifseqformula "46"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "47")) (ifInst ""  (formula "43")) (ifInst ""  (formula "44")) (ifInst ""  (formula "45")))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,1,0,0") (ifseqformula "45"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "46")) (ifInst ""  (formula "42")) (ifInst ""  (formula "43")) (ifInst ""  (formula "44")))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "46"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")) (ifInst ""  (formula "43")) (ifInst ""  (formula "44")) (ifInst ""  (formula "45")))
                                 (rule "replace_known_right" (formula "5") (term "0,1,0,0") (ifseqformula "46"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_right" (formula "70") (term "1") (ifseqformula "46"))
                                 (builtin "One Step Simplification" (formula "70"))
                                 (rule "false_right" (formula "70"))
                                 (rule "replace_known_right" (formula "71") (term "0,1") (ifseqformula "42"))
                                 (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "46")))
                                 (rule "closeTrue" (formula "71"))
                              )
                              (branch " ¬o_19 = null ∧ ¬( o_19.<created> = TRUE ∨ o_19.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "commute_or_2" (formula "1") (term "0,0,1,0,0"))
                                 (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                                 (rule "arrayLengthNotNegative" (formula "31") (term "0,1"))
                                 (rule "arrayLengthIsAShort" (formula "32") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "arrayLengthIsAShort" (formula "32") (term "1,0,1,1"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "arrayLengthNotNegative" (formula "32") (term "1,0,1,1"))
                                 (rule "cut_direct" (formula "8") (term "0"))
                                 (branch "CUT: message = null TRUE"
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "true_left" (formula "33"))
                                    (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "8"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " ¬o_19 = null ∧ ¬( o_19.<created> = TRUE ∨ o_19.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "orRight" (formula "43"))
                                       (rule "orRight" (formula "43"))
                                       (rule "orRight" (formula "43"))
                                       (rule "orRight" (formula "43"))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "47")) (ifInst ""  (formula "42")) (ifInst ""  (formula "43")) (ifInst ""  (formula "44")) (ifInst ""  (formula "46")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "46"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "replace_known_right" (formula "72") (term "1") (ifseqformula "46"))
                                       (builtin "One Step Simplification" (formula "72"))
                                       (rule "false_right" (formula "72"))
                                       (rule "replace_known_right" (formula "71") (term "1") (ifseqformula "46"))
                                       (builtin "One Step Simplification" (formula "71"))
                                       (rule "false_right" (formula "71"))
                                       (rule "replace_known_right" (formula "71") (term "0,1") (ifseqformula "41"))
                                       (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "46")))
                                       (rule "closeTrue" (formula "71"))
                                    )
                                    (branch " ¬o_19 = null ∧ ¬( o_19.<created> = TRUE ∨ o_19.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "42"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "o_19 = strPool(\"localhost\") TRUE"
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEq" (formula "40") (term "0,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "40") (term "0,0"))
                                          (rule "replace_known_right" (formula "40") (term "0,0") (ifseqformula "64"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "notRight" (formula "40"))
                                          (rule "applyEqRigid" (formula "66") (term "0,1") (ifseqformula "2"))
                                          (rule "eqSymm" (formula "66") (term "1"))
                                          (rule "replace_known_right" (formula "66") (term "1") (ifseqformula "64"))
                                          (builtin "One Step Simplification" (formula "66"))
                                          (rule "false_right" (formula "66"))
                                          (rule "applyEqRigid" (formula "43") (term "1,0,1,0,1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "41") (term "1,0,1,0,0,1") (ifseqformula "2"))
                                          (rule "applyEqRigid" (formula "41") (term "1,0,1,0,0,0,1") (ifseqformula "2"))
                                          (rule "applyEqRigid" (formula "66") (term "0,0,0") (ifseqformula "2"))
                                          (rule "eqSymm" (formula "66") (term "0,0"))
                                          (rule "replace_known_right" (formula "66") (term "0,0") (ifseqformula "64"))
                                          (builtin "One Step Simplification" (formula "66"))
                                          (rule "notRight" (formula "66"))
                                          (rule "replace_known_left" (formula "44") (term "0,0,1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "false_right" (formula "44"))
                                          (rule "replace_known_left" (formula "43") (term "0,0,0,1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "43"))
                                          (rule "false_right" (formula "43"))
                                          (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "replace_known_left" (formula "41") (term "0,0,0,0,1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "41"))
                                          (rule "false_right" (formula "41"))
                                          (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "2"))
                                          (rule "applyEqRigid" (formula "62") (term "0,1") (ifseqformula "2"))
                                          (rule "eqSymm" (formula "62") (term "1"))
                                          (rule "replace_known_right" (formula "62") (term "1") (ifseqformula "61"))
                                          (builtin "One Step Simplification" (formula "62"))
                                          (rule "false_right" (formula "62"))
                                          (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "2"))
                                          (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "2"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "f_19 = java.lang.Object::<created> TRUE"
                                             (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "3"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "62") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "62"))
                                          )
                                          (branch "f_19 = java.lang.Object::<created> FALSE"
                                             (rule "close" (formula "63") (ifseqformula "3"))
                                          )
                                       )
                                       (branch "o_19 = strPool(\"localhost\") FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "67"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                 )
                                 (branch "CUT: message = null FALSE"
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "applyEq" (formula "31") (term "0") (ifseqformula "33"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1"))
                                    (rule "mul_literals" (formula "31") (term "0,1"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " ¬o_19 = null ∧ ¬( o_19.<created> = TRUE ∨ o_19.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "orRight" (formula "45"))
                                       (rule "orRight" (formula "45"))
                                       (rule "orRight" (formula "45"))
                                       (rule "orRight" (formula "45"))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,1,0,0") (ifseqformula "48"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "43")) (ifInst ""  (formula "44")) (ifInst ""  (formula "45")) (ifInst ""  (formula "46")) (ifInst ""  (formula "47")))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "42"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "replace_known_right" (formula "75") (term "0,1") (ifseqformula "43"))
                                       (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "42")))
                                       (rule "closeTrue" (formula "75"))
                                    )
                                    (branch " ¬o_19 = null ∧ ¬( o_19.<created> = TRUE ∨ o_19.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "43"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "o_19 = strPool(\"localhost\") TRUE"
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "72") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEq" (formula "41") (term "1,0,1,0,0,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "45") (term "1,0,0,0,1") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "69") (term "1,0,0,1") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "43") (term "0,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "43") (term "0,0"))
                                          (rule "replace_known_right" (formula "43") (term "0,0") (ifseqformula "66"))
                                          (builtin "One Step Simplification" (formula "43"))
                                          (rule "notRight" (formula "43"))
                                          (rule "applyEqRigid" (formula "44") (term "0,0,0") (ifseqformula "2"))
                                          (rule "eqSymm" (formula "44") (term "0,0"))
                                          (rule "replace_known_right" (formula "44") (term "0,0") (ifseqformula "66"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "notRight" (formula "44"))
                                          (rule "applyEqRigid" (formula "45") (term "0,0,0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "45") (term "0,0"))
                                          (rule "replace_known_right" (formula "45") (term "0,0") (ifseqformula "66"))
                                          (builtin "One Step Simplification" (formula "45"))
                                          (rule "notRight" (formula "45"))
                                          (rule "applyEq" (formula "67") (term "0,1") (ifseqformula "4"))
                                          (rule "eqSymm" (formula "67") (term "1"))
                                          (rule "replace_known_right" (formula "67") (term "1") (ifseqformula "66"))
                                          (builtin "One Step Simplification" (formula "67"))
                                          (rule "false_right" (formula "67"))
                                          (rule "applyEqRigid" (formula "44") (term "1,0,1,0,0,0,0,1") (ifseqformula "4"))
                                          (rule "applyEqRigid" (formula "67") (term "0,1") (ifseqformula "4"))
                                          (rule "eqSymm" (formula "67") (term "1"))
                                          (rule "replace_known_right" (formula "67") (term "1") (ifseqformula "66"))
                                          (builtin "One Step Simplification" (formula "67"))
                                          (rule "false_right" (formula "67"))
                                          (rule "applyEq" (formula "44") (term "0,0,0") (ifseqformula "4"))
                                          (rule "eqSymm" (formula "44") (term "0,0"))
                                          (rule "replace_known_right" (formula "44") (term "0,0") (ifseqformula "66"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "notRight" (formula "44"))
                                          (rule "applyEqRigid" (formula "68") (term "1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "67") (term "0,0,0") (ifseqformula "5"))
                                          (rule "eqSymm" (formula "67") (term "0,0"))
                                          (rule "replace_known_right" (formula "67") (term "0,0") (ifseqformula "66"))
                                          (builtin "One Step Simplification" (formula "67"))
                                          (rule "notRight" (formula "67"))
                                          (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEq" (formula "6") (term "1,2,0") (ifseqformula "5"))
                                          (rule "applyEqRigid" (formula "4") (term "1,0,0,0,0") (ifseqformula "5"))
                                          (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "applyEqRigid" (formula "3") (term "1,0,0,0") (ifseqformula "4"))
                                          (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEqRigid" (formula "2") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                          (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "f_19 = java.lang.Object::<created> TRUE"
                                             (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "64") (term "2,0") (ifseqformula "3"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "64") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "64"))
                                          )
                                          (branch "f_19 = java.lang.Object::<created> FALSE"
                                             (rule "close" (formula "65") (ifseqformula "3"))
                                          )
                                       )
                                       (branch "o_19 = strPool(\"localhost\") FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "41"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "69"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "CUT: result_3 = null FALSE"
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "replace_known_right" (formula "41") (term "0,0") (ifseqformula "45"))
                              (builtin "One Step Simplification" (formula "41"))
                              (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0"))
                              (rule "commute_or_2" (formula "5") (term "0,0,0,1,0,0"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch " ¬o_19 = null ∧ ¬( o_19.<created> = TRUE ∨ o_19.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "orRight" (formula "45"))
                                 (rule "orRight" (formula "45"))
                                 (rule "orRight" (formula "45"))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0,0,1,0,0") (ifseqformula "44"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "45")) (ifInst ""  (formula "46")) (ifInst ""  (formula "47")))
                                 (rule "replace_known_right" (formula "6") (term "0,1,0,0") (ifseqformula "48"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "replace_known_right" (formula "3") (term "0,0,0,0,1,0,0") (ifseqformula "44"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")) (ifInst ""  (formula "45")) (ifInst ""  (formula "46")) (ifInst ""  (formula "47")))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,1,0,0") (ifseqformula "46"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "47")) (ifInst ""  (formula "43")) (ifInst ""  (formula "44")) (ifInst ""  (formula "45")))
                                 (rule "replace_known_right" (formula "72") (term "1") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "72"))
                                 (rule "false_right" (formula "72"))
                                 (rule "replace_known_right" (formula "73") (term "0,1") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "47")))
                                 (rule "closeTrue" (formula "73"))
                              )
                              (branch " ¬o_19 = null ∧ ¬( o_19.<created> = TRUE ∨ o_19.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "44"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "commute_or_2" (formula "1") (term "0,0,1,0,0"))
                                 (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                                 (rule "arrayLengthIsAShort" (formula "31") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "true_left" (formula "31"))
                                 (rule "arrayLengthNotNegative" (formula "31") (term "0,1"))
                                 (rule "arrayLengthNotNegative" (formula "32") (term "1,0,1,1"))
                                 (rule "arrayLengthIsAShort" (formula "33") (term "1,0,1,1"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_19 = null ∧ ¬( o_19.<created> = TRUE ∨ o_19.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "45"))
                                    (rule "orRight" (formula "45"))
                                    (rule "orRight" (formula "45"))
                                    (rule "orRight" (formula "45"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,1,0,0") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "49")) (ifInst ""  (formula "44")) (ifInst ""  (formula "45")) (ifInst ""  (formula "46")) (ifInst ""  (formula "47")))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "replace_known_right" (formula "75") (term "1") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "75"))
                                    (rule "false_right" (formula "75"))
                                    (rule "replace_known_right" (formula "75") (term "0,0") (ifseqformula "48"))
                                    (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "43")))
                                    (rule "closeTrue" (formula "75"))
                                 )
                                 (branch " ¬o_19 = null ∧ ¬( o_19.<created> = TRUE ∨ o_19.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_19.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "44"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "cut_direct" (formula "6") (term "0"))
                                    (branch "CUT: message = null TRUE"
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "true_left" (formula "31"))
                                       (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "6"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "o_19 = strPool(\"localhost\") TRUE"
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "72") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "44") (term "1,0,0,0,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "41") (term "1,0,1,0,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "42") (term "1,0,1,0,0,1") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "41") (term "1,0,0,0,0,0,0,1") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "41") (term "1,0,1,0,1") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "69") (term "1,0,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "68") (term "0,1") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "68") (term "1"))
                                          (rule "replace_known_right" (formula "68") (term "1") (ifseqformula "66"))
                                          (builtin "One Step Simplification" (formula "68"))
                                          (rule "false_right" (formula "68"))
                                          (rule "applyEq" (formula "44") (term "1,0,1,0,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "41") (term "1,0,1,0,0,0,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "45") (term "1,0,0,0,1") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "44") (term "1,0,1,0,1") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "69") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "41") (term "0,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "41") (term "0,0"))
                                          (rule "replace_known_right" (formula "41") (term "0,0") (ifseqformula "66"))
                                          (builtin "One Step Simplification" (formula "41"))
                                          (rule "notRight" (formula "41"))
                                          (rule "applyEqRigid" (formula "42") (term "1,0,0,0,0,0,1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "68") (term "0,0,0") (ifseqformula "2"))
                                          (rule "eqSymm" (formula "68") (term "0,0"))
                                          (rule "replace_known_right" (formula "68") (term "0,0") (ifseqformula "66"))
                                          (builtin "One Step Simplification" (formula "68"))
                                          (rule "notRight" (formula "68"))
                                          (rule "replace_known_left" (formula "46") (term "0,0,1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "46"))
                                          (rule "false_right" (formula "46"))
                                          (rule "replace_known_left" (formula "45") (term "0,0,0,1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "45"))
                                          (rule "false_right" (formula "45"))
                                          (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "replace_known_left" (formula "42") (term "0,0,0,0,1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "42"))
                                          (rule "false_right" (formula "42"))
                                          (rule "applyEq" (formula "64") (term "0,1") (ifseqformula "2"))
                                          (rule "eqSymm" (formula "64") (term "1"))
                                          (rule "replace_known_right" (formula "64") (term "1") (ifseqformula "63"))
                                          (builtin "One Step Simplification" (formula "64"))
                                          (rule "false_right" (formula "64"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "f_19 = java.lang.Object::<created> TRUE"
                                             (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "64") (term "2,0") (ifseqformula "3"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "64") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "64"))
                                          )
                                          (branch "f_19 = java.lang.Object::<created> FALSE"
                                             (rule "close" (formula "65") (ifseqformula "3"))
                                          )
                                       )
                                       (branch "o_19 = strPool(\"localhost\") FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "41"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "69"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch "CUT: message = null FALSE"
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "43"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "applyEq" (formula "29") (term "0") (ifseqformula "31"))
                                       (rule "applyEq" (formula "39") (term "1,0,1") (ifseqformula "31"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,1"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                       (rule "add_literals" (formula "39") (term "0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1"))
                                       (rule "mul_literals" (formula "29") (term "0,1"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "o_19 = strPool(\"localhost\") TRUE"
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "74") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEq" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "47") (term "0,0"))
                                          (rule "replace_known_right" (formula "47") (term "0,0") (ifseqformula "68"))
                                          (builtin "One Step Simplification" (formula "47"))
                                          (rule "notRight" (formula "47"))
                                          (rule "replace_known_left" (formula "47") (term "0,0,1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "47"))
                                          (rule "false_right" (formula "47"))
                                          (rule "applyEq" (formula "71") (term "1,0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "45") (term "1,0,0,0,0,0,1") (ifseqformula "2"))
                                          (rule "applyEqRigid" (formula "44") (term "1,0,1,0,1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "70") (term "1,0,0,1") (ifseqformula "2"))
                                          (rule "applyEqRigid" (formula "70") (term "0,0,0") (ifseqformula "2"))
                                          (rule "eqSymm" (formula "70") (term "0,0"))
                                          (rule "replace_known_right" (formula "70") (term "0,0") (ifseqformula "67"))
                                          (builtin "One Step Simplification" (formula "70"))
                                          (rule "notRight" (formula "70"))
                                          (rule "replace_known_left" (formula "46") (term "0,0,0,0,1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "46"))
                                          (rule "false_right" (formula "46"))
                                          (rule "applyEq" (formula "45") (term "0,0,0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "45") (term "0,0"))
                                          (rule "replace_known_right" (formula "45") (term "0,0") (ifseqformula "67"))
                                          (builtin "One Step Simplification" (formula "45"))
                                          (rule "notRight" (formula "45"))
                                          (rule "applyEq" (formula "68") (term "0,1") (ifseqformula "4"))
                                          (rule "eqSymm" (formula "68") (term "1"))
                                          (rule "replace_known_right" (formula "68") (term "1") (ifseqformula "67"))
                                          (builtin "One Step Simplification" (formula "68"))
                                          (rule "false_right" (formula "68"))
                                          (rule "applyEqRigid" (formula "68") (term "0,1") (ifseqformula "4"))
                                          (rule "eqSymm" (formula "68") (term "1"))
                                          (rule "replace_known_right" (formula "68") (term "1") (ifseqformula "67"))
                                          (builtin "One Step Simplification" (formula "68"))
                                          (rule "false_right" (formula "68"))
                                          (rule "applyEq" (formula "5") (term "1,2,0") (ifseqformula "4"))
                                          (rule "applyEqRigid" (formula "1") (term "1,0,1,0,0,0") (ifseqformula "4"))
                                          (rule "applyEqRigid" (formula "1") (term "1,0,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "3") (term "1,0,1") (ifseqformula "4"))
                                          (rule "applyEqRigid" (formula "1") (term "1,0,1,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "4"))
                                          (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEqRigid" (formula "1") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "f_19 = java.lang.Object::<created> TRUE"
                                             (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "66") (term "2,0") (ifseqformula "3"))
                                             (rule "castTrueImpliesOriginalTrue" (formula "66") (ifseqformula "1"))
                                             (rule "closeTrue" (formula "66"))
                                          )
                                          (branch "f_19 = java.lang.Object::<created> FALSE"
                                             (rule "close" (formula "67") (ifseqformula "3"))
                                          )
                                       )
                                       (branch "o_19 = strPool(\"localhost\") FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "42"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "commute_and" (formula "1") (term "0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "71"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "Exceptional Post (send)"
                     (builtin "One Step Simplification" (formula "58"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "andLeft" (formula "36"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "1,0") (ifseqformula "36"))
                     (rule "andLeft" (formula "37"))
                     (rule "andLeft" (formula "37"))
                     (rule "notLeft" (formula "37"))
                     (rule "replace_known_right" (formula "38") (term "0,0") (ifseqformula "39"))
                     (builtin "One Step Simplification" (formula "38"))
                     (rule "pullOutSelect" (formula "37") (term "0,0") (inst "selectSK=java_lang_Object_created__2"))
                     (rule "simplifySelectOfCreate" (formula "37"))
                     (builtin "One Step Simplification" (formula "37"))
                     (rule "castDel" (formula "37") (term "1,0"))
                     (rule "eqSymm" (formula "37") (term "0,0,0"))
                     (rule "eqSymm" (formula "37") (term "0,1,0,0"))
                     (rule "replace_known_right" (formula "37") (term "0,1,0,0") (ifseqformula "61"))
                     (builtin "One Step Simplification" (formula "37"))
                     (rule "sortsDisjointModuloNull" (formula "37") (term "0,0"))
                     (rule "eqSymm" (formula "37") (term "1,0,0"))
                     (rule "replace_known_right" (formula "37") (term "1,0,0") (ifseqformula "61"))
                     (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "40")))
                     (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "30"))
                     (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "40")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,0") (ifseqformula "22"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,0,0") (ifseqformula "15"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,0,0,0") (ifseqformula "10"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,0,0,0,0") (ifseqformula "7"))
                     (rule "ifthenelse_negated" (formula "37") (term "0"))
                     (rule "pullOutSelect" (formula "37") (term "1,0") (inst "selectSK=java_lang_Object_created__3"))
                     (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "41")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,0") (ifseqformula "15"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,0,0") (ifseqformula "10"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,0,0,0") (ifseqformula "7"))
                     (rule "ifthenelse_negated" (formula "37") (term "0"))
                     (rule "pullOutSelect" (formula "37") (term "1,0") (inst "selectSK=java_lang_Object_created__4"))
                     (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "15"))
                     (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "42")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,0") (ifseqformula "10"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,0,0") (ifseqformula "7"))
                     (rule "ifthenelse_negated" (formula "37") (term "0"))
                     (rule "pullOutSelect" (formula "37") (term "1,0") (inst "selectSK=java_lang_Object_created__5"))
                     (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "10"))
                     (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "43")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,0") (ifseqformula "7"))
                     (rule "ifthenelse_negated" (formula "37") (term "0"))
                     (rule "pullOutSelect" (formula "37") (term "1,0") (inst "selectSK=java_lang_Object_created__6"))
                     (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "7"))
                     (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "44")))
                     (rule "ifthenelse_negated" (formula "37") (term "0"))
                     (rule "commute_or_2" (formula "43"))
                     (rule "commute_or" (formula "43") (term "0"))
                     (rule "commute_or_2" (formula "40") (term "0,0"))
                     (rule "commute_or_2" (formula "41") (term "0,0,0"))
                     (rule "commute_or_2" (formula "41") (term "0,0"))
                     (rule "commute_or_2" (formula "40") (term "0,0,0"))
                     (rule "commute_or_2" (formula "41") (term "0,0,0,0"))
                     (rule "commute_or_2" (formula "41") (term "0,0,0"))
                     (rule "methodCallThrow" (formula "66") (term "1"))
                     (rule "tryCatchThrow" (formula "66") (term "1"))
                     (rule "arrayLengthNotNegative" (formula "26") (term "0,1"))
                     (rule "arrayLengthIsAShort" (formula "27") (term "0,1"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "true_left" (formula "27"))
                     (rule "arrayLengthIsAShort" (formula "27") (term "1,0,1,1"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "true_left" (formula "27"))
                     (rule "arrayLengthNotNegative" (formula "27") (term "1,0,1,1"))
                     (rule "arrayLengthNotNegative" (formula "36") (term "0,1"))
                     (rule "arrayLengthIsAShort" (formula "37") (term "0,1"))
                     (builtin "One Step Simplification" (formula "37"))
                     (rule "true_left" (formula "37"))
                     (rule "arrayLengthIsAShort" (formula "37") (term "1,1,1"))
                     (builtin "One Step Simplification" (formula "37"))
                     (rule "true_left" (formula "37"))
                     (rule "arrayLengthNotNegative" (formula "37") (term "1,1,1"))
                     (rule "ifElseUnfold" (formula "70") (term "1") (inst "#boolv=x"))
                     (rule "variableDeclaration" (formula "70") (term "1") (newnames "x_5"))
                     (rule "equality_comparison_simple" (formula "70") (term "1"))
                     (builtin "One Step Simplification" (formula "70"))
                     (rule "replace_known_right" (formula "70") (term "0,0,1,0") (ifseqformula "48"))
                     (builtin "One Step Simplification" (formula "70"))
                     (rule "ifElseSplit" (formula "70"))
                     (branch "if x_5 true"
                        (builtin "One Step Simplification" (formula "71"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_5 false"
                        (builtin "One Step Simplification" (formula "71"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "ifElseSplit" (formula "70"))
                        (branch "if exc_6 instanceof java.lang.Throwable true"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                           (rule "true_left" (formula "1"))
                           (rule "variableDeclaration" (formula "70") (term "1") (newnames "e_5"))
                           (rule "reference_type_cast" (formula "70") (term "1"))
                           (branch "Normal Execution (exc_6 instanceof java.lang.Throwable)"
                              (builtin "One Step Simplification" (formula "71"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "assignment" (formula "70") (term "1"))
                              (builtin "One Step Simplification" (formula "70"))
                              (rule "emptyModality" (formula "70") (term "1"))
                              (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "48")))
                              (rule "eqSymm" (formula "70") (term "1,0,0,1"))
                              (rule "commute_or_2" (formula "70") (term "0"))
                              (rule "commute_or" (formula "70") (term "0,0"))
                              (rule "replace_known_left" (formula "70") (term "0") (ifseqformula "47"))
                              (builtin "One Step Simplification" (formula "70"))
                              (rule "allRight" (formula "70") (inst "sk=f_18"))
                              (rule "allRight" (formula "70") (inst "sk=o_18"))
                              (rule "orRight" (formula "70"))
                              (rule "orRight" (formula "70"))
                              (rule "orRight" (formula "70"))
                              (rule "pullOutSelect" (formula "73") (term "0") (inst "selectSK=f_18_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "eqSymm" (formula "74"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "71"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "72"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__7"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "71"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_18_1"))
                              (rule "simplifySelectOfCreate" (formula "2"))
                              (rule "castDel" (formula "2") (term "1,0"))
                              (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                              (rule "eqSymm" (formula "2") (term "0,1,0,0,0"))
                              (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "72"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__8"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "26"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "19"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "14"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "11"))
                              (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=f_18_2"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "27"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,1,0,0") (ifseqformula "20"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "15"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,1,0,0") (ifseqformula "12"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__9"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "21"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "16"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "13"))
                              (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=f_18_3"))
                              (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,1,0,0") (ifseqformula "22"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,1,0,0") (ifseqformula "17"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,0,1,0,0") (ifseqformula "14"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__10"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "18"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "15"))
                              (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=f_18_4"))
                              (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "0,1,0,0") (ifseqformula "19"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "0,0,1,0,0") (ifseqformula "16"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__11"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "17"))
                              (rule "pullOutSelect" (formula "6") (term "2,0") (inst "selectSK=f_18_5"))
                              (rule "simplifySelectOfAnonEQ" (formula "6") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "0,1,0,0") (ifseqformula "18"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__12"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "84")))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "6") (term "2,0") (inst "selectSK=f_18_6"))
                              (rule "simplifySelectOfAnonEQ" (formula "6") (ifseqformula "19"))
                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "84")))
                              (rule "elementOfSingleton" (formula "6") (term "0,0,0"))
                              (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "82"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "commute_and" (formula "82"))
                              (rule "commute_and" (formula "81"))
                              (rule "commute_and" (formula "11") (term "0,0"))
                              (rule "ifthenelse_split" (formula "52") (term "0"))
                              (branch "exc_6.<created> = TRUE TRUE"
                                 (rule "applyEqReverse" (formula "54") (term "1,0") (ifseqformula "53"))
                                 (rule "hideAuxiliaryEq" (formula "53"))
                                 (rule "replace_known_left" (formula "56") (term "0,0,0,0,0,0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "56"))
                                 (rule "applyEqReverse" (formula "57") (term "0,0") (ifseqformula "56"))
                                 (rule "hideAuxiliaryEq" (formula "56"))
                                 (rule "replace_known_left" (formula "54") (term "0,0,0,0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "applyEqReverse" (formula "55") (term "1,0") (ifseqformula "54"))
                                 (rule "hideAuxiliaryEq" (formula "54"))
                                 (rule "replace_known_left" (formula "53") (term "0,0,0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "applyEqReverse" (formula "54") (term "1,0") (ifseqformula "53"))
                                 (rule "hideAuxiliaryEq" (formula "53"))
                                 (rule "replace_known_left" (formula "53") (term "0,0,0,0,0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "applyEqReverse" (formula "54") (term "0,0") (ifseqformula "53"))
                                 (rule "hideAuxiliaryEq" (formula "53"))
                                 (rule "replace_known_left" (formula "53") (term "0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "true_left" (formula "53"))
                                 (rule "commute_and" (formula "10") (term "0,0"))
                                 (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                                 (rule "commute_or_2" (formula "8") (term "0,1,0,0"))
                                 (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                 (rule "commute_or_2" (formula "9") (term "0,0,1,0,0"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "54"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "55"))
                                    (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "53")) (ifInst ""  (formula "54")))
                                    (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "55"))
                                    (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "53")) (ifInst ""  (formula "54")))
                                    (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "55"))
                                    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "53")) (ifInst ""  (formula "54")))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")) (ifInst ""  (formula "53")))
                                    (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "52")) (ifInst ""  (formula "53")))
                                    (rule "replace_known_right" (formula "9") (term "0,1,0,0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "52")) (ifInst ""  (formula "53")))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")) (ifInst ""  (formula "53")))
                                    (rule "replace_known_right" (formula "79") (term "0,0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "52")))
                                    (rule "closeTrue" (formula "79"))
                                 )
                                 (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE) FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                                    (rule "commute_or_2" (formula "7") (term "0,1,0,0"))
                                    (rule "commute_or_2" (formula "2") (term "0,0,1,0,0"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "orRight" (formula "53"))
                                       (rule "orRight" (formula "53"))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "53"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "52")) (ifInst ""  (formula "54")))
                                       (rule "replace_known_right" (formula "8") (term "0,1,0,0") (ifseqformula "51"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0,1,0,0") (ifseqformula "52"))
                                       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "51")) (ifInst ""  (formula "53")) (ifInst ""  (formula "54")))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "53"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "51")) (ifInst ""  (formula "52")) (ifInst ""  (formula "54")))
                                       (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "51"))
                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "52")) (ifInst ""  (formula "53")) (ifInst ""  (formula "54")))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0,0,1,0,0") (ifseqformula "51"))
                                       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "50")) (ifInst ""  (formula "52")) (ifInst ""  (formula "53")))
                                       (rule "replace_known_right" (formula "79") (term "0,0") (ifseqformula "50"))
                                       (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "51")))
                                       (rule "closeTrue" (formula "79"))
                                    )
                                    (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "51"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "50"))
                                          (rule "orRight" (formula "50"))
                                          (rule "orRight" (formula "50"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "3") (term "0,0,0,0,1,0,0") (ifseqformula "49"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "53")) (ifInst ""  (formula "50")) (ifInst ""  (formula "51")) (ifInst ""  (formula "52")))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_right" (formula "3") (term "1,0,0,0,1,0,0") (ifseqformula "49"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")) (ifInst ""  (formula "48")) (ifInst ""  (formula "50")) (ifInst ""  (formula "51")))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "52"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "50")) (ifInst ""  (formula "49")) (ifInst ""  (formula "51")))
                                          (rule "replace_known_right" (formula "5") (term "0,1,0,0") (ifseqformula "52"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_right" (formula "77") (term "1") (ifseqformula "52"))
                                          (builtin "One Step Simplification" (formula "77"))
                                          (rule "false_right" (formula "77"))
                                          (rule "replace_known_right" (formula "78") (term "0,1") (ifseqformula "48"))
                                          (builtin "One Step Simplification" (formula "78") (ifInst ""  (formula "52")))
                                          (rule "closeTrue" (formula "78"))
                                       )
                                       (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "49"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "48"))
                                             (rule "orRight" (formula "48"))
                                             (rule "orRight" (formula "48"))
                                             (rule "orRight" (formula "48"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "52"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "52"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "47")) (ifInst ""  (formula "48")) (ifInst ""  (formula "49")) (ifInst ""  (formula "50")) (ifInst ""  (formula "51")))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_right" (formula "79") (term "0,1") (ifseqformula "46"))
                                             (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "51")))
                                             (rule "closeTrue" (formula "79"))
                                          )
                                          (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "47"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "commute_or_2" (formula "46") (term "0,0,0,1"))
                                             (rule "commute_or_2" (formula "46") (term "0,0,1"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "o_18 = strPool(\"localhost\") TRUE"
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "76") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "46") (term "1,0,1,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "48") (term "0,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "48") (term "0,0"))
                                                (rule "replace_known_right" (formula "48") (term "0,0") (ifseqformula "70"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "notRight" (formula "48"))
                                                (rule "replace_known_left" (formula "48") (term "0,0,1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "47") (term "1,0,1,0,0,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "46") (term "1,0,0,0,0,0,0,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "73") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "46") (term "1,0,1,0,1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "46") (term "1,0,1,0,0,0,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "46") (term "1,0,1,0,0,0,0,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "46") (term "0,0,0") (ifseqformula "2"))
                                                (rule "eqSymm" (formula "46") (term "0,0"))
                                                (rule "replace_known_right" (formula "46") (term "0,0") (ifseqformula "69"))
                                                (builtin "One Step Simplification" (formula "46"))
                                                (rule "notRight" (formula "46"))
                                                (rule "applyEqRigid" (formula "47") (term "1,0,1,0,0,0,1") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "72") (term "0,0,0") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "72") (term "0,0"))
                                                (rule "replace_known_right" (formula "72") (term "0,0") (ifseqformula "69"))
                                                (builtin "One Step Simplification" (formula "72"))
                                                (rule "notRight" (formula "72"))
                                                (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "replace_known_left" (formula "47") (term "0,0,0,0,1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "47"))
                                                (rule "false_right" (formula "47"))
                                                (rule "applyEqRigid" (formula "69") (term "0,1") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "69") (term "1"))
                                                (rule "replace_known_right" (formula "69") (term "1") (ifseqformula "68"))
                                                (builtin "One Step Simplification" (formula "69"))
                                                (rule "false_right" (formula "69"))
                                                (rule "applyEq" (formula "69") (term "0,1") (ifseqformula "3"))
                                                (rule "eqSymm" (formula "69") (term "1"))
                                                (rule "replace_known_right" (formula "69") (term "1") (ifseqformula "68"))
                                                (builtin "One Step Simplification" (formula "69"))
                                                (rule "false_right" (formula "69"))
                                                (rule "applyEqRigid" (formula "2") (term "1,0,1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "cut_direct" (formula "6") (term "0"))
                                                (branch "CUT: message = null TRUE"
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "6"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "6"))
                                                   (rule "cut_direct" (formula "40") (term "0,0"))
                                                   (branch "CUT: result_3 = null TRUE"
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "true_left" (formula "41"))
                                                      (rule "replace_known_left" (formula "32") (term "0,0,0,0,0") (ifseqformula "40"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "39"))
                                                      (rule "cut_direct" (formula "42") (term "1"))
                                                      (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE TRUE"
                                                         (rule "instanceof_not_compatible_5" (formula "43") (term "1,0") (ifseqformula "42"))
                                                         (rule "instanceof_not_compatible_5" (formula "43") (term "0,0") (ifseqformula "42"))
                                                         (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "44")) (ifInst ""  (formula "44")))
                                                         (rule "true_left" (formula "43"))
                                                         (rule "ifthenelse_split" (formula "3") (term "0"))
                                                         (branch "f_18 = java.lang.Object::<created> TRUE"
                                                            (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "applyEq" (formula "65") (term "2,0") (ifseqformula "3"))
                                                            (rule "castTrueImpliesOriginalTrue" (formula "65") (ifseqformula "1"))
                                                            (rule "closeTrue" (formula "65"))
                                                         )
                                                         (branch "f_18 = java.lang.Object::<created> FALSE"
                                                            (rule "close" (formula "66") (ifseqformula "3"))
                                                         )
                                                      )
                                                      (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE FALSE"
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "ifthenelse_split" (formula "3") (term "0"))
                                                         (branch "f_18 = java.lang.Object::<created> TRUE"
                                                            (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "applyEq" (formula "66") (term "2,0") (ifseqformula "3"))
                                                            (rule "castTrueImpliesOriginalTrue" (formula "66") (ifseqformula "1"))
                                                            (rule "closeTrue" (formula "66"))
                                                         )
                                                         (branch "f_18 = java.lang.Object::<created> FALSE"
                                                            (rule "close" (formula "67") (ifseqformula "3"))
                                                         )
                                                      )
                                                   )
                                                   (branch "CUT: result_3 = null FALSE"
                                                      (builtin "One Step Simplification" (formula "40"))
                                                      (rule "replace_known_right" (formula "32") (term "0,0,0,0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "applyEq" (formula "38") (term "0") (ifseqformula "40"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1"))
                                                      (rule "mul_literals" (formula "38") (term "0,1"))
                                                      (rule "cut_direct" (formula "44") (term "0,0"))
                                                      (branch "CUT: de.uni.trier.infsec.lib.network.NetworkError::instance(exc_6) = TRUE TRUE"
                                                         (rule "instanceof_not_compatible_5" (formula "45") (term "1") (ifseqformula "44"))
                                                         (rule "instanceof_not_compatible_5" (formula "45") (term "1,0") (ifseqformula "44"))
                                                         (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "47")) (ifInst ""  (formula "47")))
                                                         (rule "true_left" (formula "45"))
                                                         (rule "ifthenelse_split" (formula "3") (term "0"))
                                                         (branch "f_18 = java.lang.Object::<created> TRUE"
                                                            (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "applyEq" (formula "68") (term "2,0") (ifseqformula "3"))
                                                            (rule "castTrueImpliesOriginalTrue" (formula "68") (ifseqformula "1"))
                                                            (rule "closeTrue" (formula "68"))
                                                         )
                                                         (branch "f_18 = java.lang.Object::<created> FALSE"
                                                            (rule "close" (formula "69") (ifseqformula "3"))
                                                         )
                                                      )
                                                      (branch "CUT: de.uni.trier.infsec.lib.network.NetworkError::instance(exc_6) = TRUE FALSE"
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "ifthenelse_split" (formula "3") (term "0"))
                                                         (branch "f_18 = java.lang.Object::<created> TRUE"
                                                            (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "applyEqRigid" (formula "69") (term "2,0") (ifseqformula "3"))
                                                            (rule "castTrueImpliesOriginalTrue" (formula "69") (ifseqformula "1"))
                                                            (rule "closeTrue" (formula "69"))
                                                         )
                                                         (branch "f_18 = java.lang.Object::<created> FALSE"
                                                            (rule "close" (formula "70") (ifseqformula "3"))
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "CUT: message = null FALSE"
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "46"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "applyEq" (formula "29") (term "0") (ifseqformula "31"))
                                                   (rule "applyEq" (formula "41") (term "1,0,1,1") (ifseqformula "31"))
                                                   (rule "polySimp_addAssoc" (formula "41") (term "0,1,1"))
                                                   (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,1"))
                                                   (rule "add_literals" (formula "41") (term "0,0,0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                   (rule "mul_literals" (formula "29") (term "0,1"))
                                                   (rule "cut_direct" (formula "41") (term "0,0"))
                                                   (branch "CUT: result_3 = null TRUE"
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "replace_known_left" (formula "33") (term "0,0,0,0,0") (ifseqformula "41"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "40"))
                                                      (rule "cut_direct" (formula "44") (term "1"))
                                                      (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE TRUE"
                                                         (rule "instanceof_not_compatible_5" (formula "45") (term "1,0") (ifseqformula "44"))
                                                         (rule "instanceof_not_compatible_5" (formula "45") (term "0,0") (ifseqformula "44"))
                                                         (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "47")) (ifInst ""  (formula "47")))
                                                         (rule "true_left" (formula "45"))
                                                         (rule "ifthenelse_split" (formula "3") (term "0"))
                                                         (branch "f_18 = java.lang.Object::<created> TRUE"
                                                            (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "applyEq" (formula "68") (term "2,0") (ifseqformula "3"))
                                                            (rule "castTrueImpliesOriginalTrue" (formula "68") (ifseqformula "1"))
                                                            (rule "closeTrue" (formula "68"))
                                                         )
                                                         (branch "f_18 = java.lang.Object::<created> FALSE"
                                                            (rule "close" (formula "69") (ifseqformula "3"))
                                                         )
                                                      )
                                                      (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE FALSE"
                                                         (builtin "One Step Simplification" (formula "44"))
                                                         (rule "ifthenelse_split" (formula "3") (term "0"))
                                                         (branch "f_18 = java.lang.Object::<created> TRUE"
                                                            (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "applyEqRigid" (formula "69") (term "2,0") (ifseqformula "3"))
                                                            (rule "castTrueImpliesOriginalTrue" (formula "69") (ifseqformula "1"))
                                                            (rule "closeTrue" (formula "69"))
                                                         )
                                                         (branch "f_18 = java.lang.Object::<created> FALSE"
                                                            (rule "close" (formula "70") (ifseqformula "3"))
                                                         )
                                                      )
                                                   )
                                                   (branch "CUT: result_3 = null FALSE"
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "replace_known_right" (formula "33") (term "0,0,0,0,0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "applyEq" (formula "39") (term "0") (ifseqformula "41"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "0,1"))
                                                      (rule "mul_literals" (formula "39") (term "0,0,1"))
                                                      (rule "cut_direct" (formula "45") (term "1"))
                                                      (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE TRUE"
                                                         (rule "instanceof_not_compatible_5" (formula "46") (term "1,0") (ifseqformula "45"))
                                                         (rule "instanceof_not_compatible_5" (formula "46") (term "0,0") (ifseqformula "45"))
                                                         (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "49")) (ifInst ""  (formula "49")))
                                                         (rule "true_left" (formula "46"))
                                                         (rule "ifthenelse_split" (formula "3") (term "0"))
                                                         (branch "f_18 = java.lang.Object::<created> TRUE"
                                                            (rule "applyEqReverse" (formula "71") (term "1") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "applyEqRigid" (formula "70") (term "2,0") (ifseqformula "3"))
                                                            (rule "castTrueImpliesOriginalTrue" (formula "70") (ifseqformula "1"))
                                                            (rule "closeTrue" (formula "70"))
                                                         )
                                                         (branch "f_18 = java.lang.Object::<created> FALSE"
                                                            (rule "close" (formula "71") (ifseqformula "3"))
                                                         )
                                                      )
                                                      (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE FALSE"
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "ifthenelse_split" (formula "3") (term "0"))
                                                         (branch "f_18 = java.lang.Object::<created> TRUE"
                                                            (rule "applyEqReverse" (formula "72") (term "1") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "applyEq" (formula "71") (term "2,0") (ifseqformula "3"))
                                                            (rule "castTrueImpliesOriginalTrue" (formula "71") (ifseqformula "1"))
                                                            (rule "closeTrue" (formula "71"))
                                                         )
                                                         (branch "f_18 = java.lang.Object::<created> FALSE"
                                                            (rule "close" (formula "72") (ifseqformula "3"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "o_18 = strPool(\"localhost\") FALSE"
                                                (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "45"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "commute_and" (formula "1") (term "0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "73"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "exc_6.<created> = TRUE FALSE"
                                 (rule "applyEqReverse" (formula "53") (term "1,0") (ifseqformula "52"))
                                 (rule "hideAuxiliaryEq" (formula "52"))
                                 (rule "replace_known_right" (formula "55") (term "0,0,0,0,0,0") (ifseqformula "58"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "replace_known_right" (formula "52") (term "0,0,0") (ifseqformula "58"))
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "replace_known_right" (formula "54") (term "0,0,0,0,0") (ifseqformula "58"))
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "replace_known_right" (formula "53") (term "0,0,0,0") (ifseqformula "58"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "commute_and" (formula "10") (term "0,0"))
                                 (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                                 (rule "commute_or_2" (formula "8") (term "0,1,0,0"))
                                 (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                 (rule "commute_or_2" (formula "9") (term "0,0,1,0,0"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "59"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")) (ifInst ""  (formula "59")))
                                    (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "58")) (ifInst ""  (formula "59")))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "57")) (ifInst ""  (formula "58")))
                                    (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "58")) (ifInst ""  (formula "59")))
                                    (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "58")) (ifInst ""  (formula "59")))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_right" (formula "9") (term "0,1,0,0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "58")))
                                    (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "57")) (ifInst ""  (formula "58")))
                                    (rule "replace_known_right" (formula "82") (term "1") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "82"))
                                    (rule "false_right" (formula "82"))
                                    (rule "replace_known_right" (formula "82") (term "1") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "82"))
                                    (rule "false_right" (formula "82"))
                                    (rule "replace_known_right" (formula "82") (term "0,1") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "56")))
                                    (rule "closeTrue" (formula "82"))
                                 )
                                 (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE) FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                                    (rule "ifthenelse_split" (formula "50") (term "0"))
                                    (branch "exc_6.<created>@anon_heap_get«anonHeapFunction» = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "51"))
                                       (rule "hideAuxiliaryEq" (formula "51"))
                                       (rule "replace_known_left" (formula "52") (term "1,0,0,0") (ifseqformula "50"))
                                       (builtin "One Step Simplification" (formula "52"))
                                       (rule "applyEqReverse" (formula "53") (term "1,0") (ifseqformula "52"))
                                       (rule "hideAuxiliaryEq" (formula "52"))
                                       (rule "replace_known_left" (formula "52") (term "1,0,0,0") (ifseqformula "50"))
                                       (builtin "One Step Simplification" (formula "52"))
                                       (rule "applyEqReverse" (formula "53") (term "0,0") (ifseqformula "52"))
                                       (rule "hideAuxiliaryEq" (formula "52"))
                                       (rule "replace_known_left" (formula "51") (term "0,0,0") (ifseqformula "50"))
                                       (builtin "One Step Simplification" (formula "51"))
                                       (rule "applyEqReverse" (formula "52") (term "0,0") (ifseqformula "51"))
                                       (rule "hideAuxiliaryEq" (formula "51"))
                                       (rule "replace_known_left" (formula "51") (term "0") (ifseqformula "50"))
                                       (builtin "One Step Simplification" (formula "51"))
                                       (rule "true_left" (formula "51"))
                                       (rule "commute_or_2" (formula "7") (term "0,1,0,0"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "52"))
                                          (rule "orRight" (formula "52"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "6") (term "0,0,0,0,0,1,0,0") (ifseqformula "51"))
                                          (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "54")) (ifInst ""  (formula "52")) (ifInst ""  (formula "53")))
                                          (rule "replace_known_right" (formula "2") (term "1,0,1,0,0") (ifseqformula "53"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "54")) (ifInst ""  (formula "51")) (ifInst ""  (formula "52")))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "54"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "52")) (ifInst ""  (formula "53")))
                                          (rule "replace_known_right" (formula "4") (term "0,0,0,1,0,0") (ifseqformula "51"))
                                          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "54")) (ifInst ""  (formula "52")) (ifInst ""  (formula "53")))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_right" (formula "7") (term "0,1,0,0") (ifseqformula "53"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_right" (formula "4") (term "1,0,0,0,1,0,0") (ifseqformula "51"))
                                          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "53")) (ifInst ""  (formula "50")) (ifInst ""  (formula "52")))
                                          (rule "replace_known_right" (formula "80") (term "0,1") (ifseqformula "50"))
                                          (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "53")))
                                          (rule "closeTrue" (formula "80"))
                                       )
                                       (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "51"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "commute_or_2" (formula "1") (term "0,0,1,0,0"))
                                          (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                          (rule "commute_or_2" (formula "2") (term "0,0,0,1,0,0"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "51"))
                                             (rule "orRight" (formula "51"))
                                             (rule "orRight" (formula "51"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "6") (term "0,1,0,0") (ifseqformula "49"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0,0,1,0,0") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "51")) (ifInst ""  (formula "52")) (ifInst ""  (formula "53")))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0,0,1,0,0") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "49")) (ifInst ""  (formula "51")) (ifInst ""  (formula "52")) (ifInst ""  (formula "53")))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0,0,0,1,0,0") (ifseqformula "49"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")) (ifInst ""  (formula "52")))
                                             (rule "replace_known_right" (formula "80") (term "0,0") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "49")))
                                             (rule "closeTrue" (formula "80"))
                                          )
                                          (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "49"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "commute_or_2" (formula "1") (term "0,0,1,0,0"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "notLeft" (formula "4"))
                                                (rule "notLeft" (formula "3"))
                                                (rule "orRight" (formula "49"))
                                                (rule "orRight" (formula "49"))
                                                (rule "orRight" (formula "49"))
                                                (rule "orRight" (formula "49"))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0,0,0,1,0,0") (ifseqformula "48"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")) (ifInst ""  (formula "50")) (ifInst ""  (formula "51")) (ifInst ""  (formula "49")) (ifInst ""  (formula "52")))
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "46"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "replace_known_right" (formula "80") (term "0,0") (ifseqformula "46"))
                                                (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "47")))
                                                (rule "closeTrue" (formula "80"))
                                             )
                                             (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "commute_or_2" (formula "47") (term "0,0,0,1"))
                                                (rule "commute_or_2" (formula "47") (term "0,0,1"))
                                                (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "47"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch " f_18 = java.lang.Object::<created> ∧ o_18 = strPool(\"localhost\") TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "77") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "applyEqRigid" (formula "47") (term "1,0,1,0,1") (ifseqformula "2"))
                                                   (rule "applyEqRigid" (formula "73") (term "0,1") (ifseqformula "2"))
                                                   (rule "eqSymm" (formula "73") (term "1"))
                                                   (rule "replace_known_right" (formula "73") (term "1") (ifseqformula "71"))
                                                   (builtin "One Step Simplification" (formula "73"))
                                                   (rule "false_right" (formula "73"))
                                                   (rule "applyEqRigid" (formula "46") (term "1,0,0,0,0,0,1") (ifseqformula "2"))
                                                   (rule "applyEqRigid" (formula "74") (term "1,0") (ifseqformula "2"))
                                                   (rule "applyEqRigid" (formula "46") (term "0,0,0") (ifseqformula "2"))
                                                   (rule "eqSymm" (formula "46") (term "0,0"))
                                                   (rule "replace_known_right" (formula "46") (term "0,0") (ifseqformula "71"))
                                                   (builtin "One Step Simplification" (formula "46"))
                                                   (rule "notRight" (formula "46"))
                                                   (rule "applyEq" (formula "72") (term "0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "72"))
                                                   (rule "false_right" (formula "72"))
                                                   (rule "applyEq" (formula "48") (term "1,0,1,0,1") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "47") (term "0,0,0") (ifseqformula "3"))
                                                   (rule "eqSymm" (formula "47") (term "0,0"))
                                                   (rule "replace_known_right" (formula "47") (term "0,0") (ifseqformula "71"))
                                                   (builtin "One Step Simplification" (formula "47"))
                                                   (rule "notRight" (formula "47"))
                                                   (rule "applyEq" (formula "47") (term "1,0,1,0,1") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "72") (term "0,0,0") (ifseqformula "4"))
                                                   (rule "eqSymm" (formula "72") (term "0,0"))
                                                   (rule "replace_known_right" (formula "72") (term "0,0") (ifseqformula "71"))
                                                   (builtin "One Step Simplification" (formula "72"))
                                                   (rule "notRight" (formula "72"))
                                                   (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "replace_known_left" (formula "48") (term "0,0,1") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "48"))
                                                   (rule "false_right" (formula "48"))
                                                   (rule "replace_known_left" (formula "47") (term "0,0,0,0,0,1") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "47"))
                                                   (rule "false_right" (formula "47"))
                                                   (rule "applyEq" (formula "70") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "70") (term "0") (ifseqformula "5"))
                                                   (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "70"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "applyEqRigid" (formula "2") (term "1,0,1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "2") (term "1,0,0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "70") (ifseqformula "1"))
                                                )
                                                (branch " f_18 = java.lang.Object::<created> ∧ o_18 = strPool(\"localhost\") FALSE"
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "cut_direct" (formula "32") (term "0,0,0,0,0"))
                                                   (branch "CUT: result_3 = null TRUE"
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "replace_known_left" (formula "40") (term "0,0") (ifseqformula "32"))
                                                      (builtin "One Step Simplification" (formula "40"))
                                                      (rule "true_left" (formula "40"))
                                                      (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "32"))
                                                      (rule "cut_direct" (formula "5") (term "0"))
                                                      (branch "CUT: message = null TRUE"
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "true_left" (formula "6"))
                                                         (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "true_left" (formula "30"))
                                                         (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "5"))
                                                         (rule "ifthenelse_split" (formula "1") (term "0"))
                                                         (branch "o_18 = strPool(\"localhost\") TRUE"
                                                            (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "74")))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                         (branch "o_18 = strPool(\"localhost\") FALSE"
                                                            (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "41"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "false_right" (formula "42"))
                                                            (rule "commute_and" (formula "1") (term "0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "71"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                      )
                                                      (branch "CUT: message = null FALSE"
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "44"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "applyEq" (formula "28") (term "0") (ifseqformula "30"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                         (rule "mul_literals" (formula "28") (term "0,1"))
                                                         (rule "ifthenelse_split" (formula "1") (term "0"))
                                                         (branch "o_18 = strPool(\"localhost\") TRUE"
                                                            (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "77")))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                         (branch "o_18 = strPool(\"localhost\") FALSE"
                                                            (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "43"))
                                                            (builtin "One Step Simplification" (formula "45"))
                                                            (rule "false_right" (formula "45"))
                                                            (rule "commute_and" (formula "1") (term "0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "74"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "75")))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                      )
                                                   )
                                                   (branch "CUT: result_3 = null FALSE"
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "replace_known_right" (formula "40") (term "0,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "40"))
                                                      (rule "applyEq" (formula "38") (term "0") (ifseqformula "40"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1"))
                                                      (rule "mul_literals" (formula "38") (term "0,1"))
                                                      (rule "cut_direct" (formula "5") (term "0"))
                                                      (branch "CUT: message = null TRUE"
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "true_left" (formula "6"))
                                                         (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "5"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "true_left" (formula "30"))
                                                         (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "5"))
                                                         (rule "ifthenelse_split" (formula "1") (term "0"))
                                                         (branch "o_18 = strPool(\"localhost\") TRUE"
                                                            (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "77")))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                         (branch "o_18 = strPool(\"localhost\") FALSE"
                                                            (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "43"))
                                                            (builtin "One Step Simplification" (formula "45"))
                                                            (rule "false_right" (formula "45"))
                                                            (rule "commute_and" (formula "1") (term "0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "74"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "75")))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                      )
                                                      (branch "CUT: message = null FALSE"
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "45"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "applyEq" (formula "38") (term "0,1,1") (ifseqformula "30"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "0,1,1"))
                                                         (rule "mul_literals" (formula "38") (term "0,0,1,1"))
                                                         (rule "polySimp_addAssoc" (formula "38") (term "1"))
                                                         (rule "polySimp_addAssoc" (formula "38") (term "0,1"))
                                                         (rule "add_literals" (formula "38") (term "0,0,1"))
                                                         (rule "applyEq" (formula "28") (term "0") (ifseqformula "30"))
                                                         (rule "applyEq" (formula "40") (term "1,0,1") (ifseqformula "30"))
                                                         (rule "polySimp_addAssoc" (formula "40") (term "0,1"))
                                                         (rule "polySimp_addAssoc" (formula "40") (term "0,0,1"))
                                                         (rule "add_literals" (formula "40") (term "0,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                         (rule "mul_literals" (formula "28") (term "0,1"))
                                                         (rule "ifthenelse_split" (formula "1") (term "0"))
                                                         (branch "o_18 = strPool(\"localhost\") TRUE"
                                                            (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                         (branch "o_18 = strPool(\"localhost\") FALSE"
                                                            (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "47"))
                                                            (rule "false_right" (formula "47"))
                                                            (rule "cut_direct" (formula "43") (term "1"))
                                                            (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE TRUE"
                                                               (rule "instanceof_not_compatible_5" (formula "44") (term "1,0") (ifseqformula "43"))
                                                               (rule "instanceof_not_compatible_5" (formula "44") (term "0,0") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "53")) (ifInst ""  (formula "53")))
                                                               (rule "true_left" (formula "44"))
                                                               (rule "commute_and" (formula "1") (term "0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "76"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE FALSE"
                                                               (builtin "One Step Simplification" (formula "43"))
                                                               (rule "commute_and" (formula "1") (term "0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "77"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "exc_6.<created>@anon_heap_get«anonHeapFunction» = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "50"))
                                       (rule "hideAuxiliaryEq" (formula "50"))
                                       (rule "replace_known_right" (formula "51") (term "1,0,0,0") (ifseqformula "55"))
                                       (builtin "One Step Simplification" (formula "51"))
                                       (rule "replace_known_right" (formula "52") (term "1,0,0,0") (ifseqformula "55"))
                                       (builtin "One Step Simplification" (formula "52"))
                                       (rule "replace_known_right" (formula "50") (term "0,0,0") (ifseqformula "55"))
                                       (builtin "One Step Simplification" (formula "50"))
                                       (rule "commute_or_2" (formula "7") (term "0,1,0,0"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "56"))
                                          (rule "orRight" (formula "56"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "4") (term "1,0,0,1,0,0") (ifseqformula "56"))
                                          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "54")) (ifInst ""  (formula "55")) (ifInst ""  (formula "57")))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_right" (formula "2") (term "0,0,0,0,0,1,0,0") (ifseqformula "54"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "53")) (ifInst ""  (formula "55")) (ifInst ""  (formula "56")))
                                          (rule "replace_known_right" (formula "5") (term "1,0,1,0,0") (ifseqformula "56"))
                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "53")) (ifInst ""  (formula "54")) (ifInst ""  (formula "55")))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "53"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")) (ifInst ""  (formula "55")) (ifInst ""  (formula "56")))
                                          (rule "replace_known_right" (formula "4") (term "1,0,0,0,1,0,0") (ifseqformula "55"))
                                          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "53")) (ifInst ""  (formula "54")) (ifInst ""  (formula "56")))
                                          (rule "replace_known_right" (formula "7") (term "0,1,0,0") (ifseqformula "53"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_right" (formula "82") (term "1") (ifseqformula "53"))
                                          (builtin "One Step Simplification" (formula "82"))
                                          (rule "false_right" (formula "82"))
                                          (rule "replace_known_right" (formula "83") (term "0,1") (ifseqformula "54"))
                                          (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "53")))
                                          (rule "closeTrue" (formula "83"))
                                       )
                                       (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "54"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "commute_or_2" (formula "1") (term "0,0,1,0,0"))
                                          (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                          (rule "ifthenelse_split" (formula "48") (term "0"))
                                          (branch " exc_6.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "49"))
                                             (rule "hideAuxiliaryEq" (formula "49"))
                                             (rule "replace_known_left" (formula "49") (term "1,0,0") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "49"))
                                             (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "49"))
                                             (rule "hideAuxiliaryEq" (formula "49"))
                                             (rule "replace_known_left" (formula "49") (term "1,0,0") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "49"))
                                             (rule "applyEqReverse" (formula "50") (term "0,0") (ifseqformula "49"))
                                             (rule "hideAuxiliaryEq" (formula "49"))
                                             (rule "replace_known_left" (formula "49") (term "0") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "49"))
                                             (rule "true_left" (formula "49"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "orRight" (formula "50"))
                                                (rule "orRight" (formula "50"))
                                                (rule "orRight" (formula "50"))
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_right" (formula "1") (term "1,0,0,0,0,1,0,0") (ifseqformula "51"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "49")) (ifInst ""  (formula "50")) (ifInst ""  (formula "52")))
                                                (rule "replace_known_right" (formula "4") (term "1,0,0,0,0,1,0,0") (ifseqformula "51"))
                                                (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "53")) (ifInst ""  (formula "49")) (ifInst ""  (formula "50")) (ifInst ""  (formula "52")))
                                                (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "53"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "49")) (ifInst ""  (formula "50")) (ifInst ""  (formula "51")) (ifInst ""  (formula "52")))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "replace_known_right" (formula "5") (term "0,1,0,0") (ifseqformula "52"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_right" (formula "81") (term "0,1") (ifseqformula "48"))
                                                (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "52")))
                                                (rule "closeTrue" (formula "81"))
                                             )
                                             (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "49"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "3") (term "0,0,0,1,0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0,0,1,0,0"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "notLeft" (formula "3"))
                                                   (rule "notLeft" (formula "3"))
                                                   (rule "orRight" (formula "48"))
                                                   (rule "orRight" (formula "48"))
                                                   (rule "orRight" (formula "48"))
                                                   (rule "orRight" (formula "48"))
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "replace_known_right" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "50"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")) (ifInst ""  (formula "47")) (ifInst ""  (formula "48")) (ifInst ""  (formula "49")) (ifInst ""  (formula "51")))
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "51"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "replace_known_right" (formula "79") (term "1") (ifseqformula "51"))
                                                   (builtin "One Step Simplification" (formula "79"))
                                                   (rule "false_right" (formula "79"))
                                                   (rule "replace_known_right" (formula "80") (term "0,0") (ifseqformula "51"))
                                                   (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "46")))
                                                   (rule "closeTrue" (formula "80"))
                                                )
                                                (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "commute_or_2" (formula "47") (term "0,0,1"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "47"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch " f_18 = java.lang.Object::<created> ∧ o_18 = strPool(\"localhost\") TRUE"
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "78") (term "1") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "applyEqRigid" (formula "46") (term "1,0,1,0,0,1") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "45") (term "1,0,0,0,0,0,0,1") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "73") (term "0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "73"))
                                                      (rule "false_right" (formula "73"))
                                                      (rule "applyEqRigid" (formula "73") (term "0,1") (ifseqformula "2"))
                                                      (rule "eqSymm" (formula "73") (term "1"))
                                                      (rule "replace_known_right" (formula "73") (term "1") (ifseqformula "72"))
                                                      (builtin "One Step Simplification" (formula "73"))
                                                      (rule "false_right" (formula "73"))
                                                      (rule "applyEq" (formula "47") (term "1,0,0,0,0,1") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "47") (term "0,0,0") (ifseqformula "2"))
                                                      (rule "eqSymm" (formula "47") (term "0,0"))
                                                      (rule "replace_known_right" (formula "47") (term "0,0") (ifseqformula "72"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "notRight" (formula "47"))
                                                      (rule "applyEqRigid" (formula "74") (term "2,0") (ifseqformula "2"))
                                                      (rule "narrowSelectType" (formula "74") (term "0") (ifseqformula "4"))
                                                      (rule "replace_known_right" (formula "73") (term "0,1") (ifseqformula "74"))
                                                      (builtin "One Step Simplification" (formula "73"))
                                                      (rule "notRight" (formula "73"))
                                                      (rule "replace_known_right" (formula "50") (term "0,0,1") (ifseqformula "74"))
                                                      (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "1")))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "replace_known_right" (formula "48") (term "0,0,0,0,1") (ifseqformula "73"))
                                                      (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "1")))
                                                      (rule "false_right" (formula "48"))
                                                      (rule "replace_known_left" (formula "47") (term "0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "false_right" (formula "47"))
                                                      (rule "applyEq" (formula "71") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                                                      (rule "eqSymm" (formula "1"))
                                                      (rule "close" (formula "70") (ifseqformula "1"))
                                                   )
                                                   (branch " f_18 = java.lang.Object::<created> ∧ o_18 = strPool(\"localhost\") FALSE"
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "cut_direct" (formula "40") (term "0,0"))
                                                      (branch "CUT: result_3 = null TRUE"
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "true_left" (formula "41"))
                                                         (rule "replace_known_left" (formula "32") (term "0,0,0,0,0") (ifseqformula "40"))
                                                         (builtin "One Step Simplification" (formula "32"))
                                                         (rule "true_left" (formula "32"))
                                                         (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "39"))
                                                         (rule "cut_direct" (formula "5") (term "0"))
                                                         (branch "CUT: message = null TRUE"
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "5"))
                                                            (builtin "One Step Simplification" (formula "30"))
                                                            (rule "true_left" (formula "30"))
                                                            (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "5"))
                                                            (rule "cut_direct" (formula "41") (term "0,0"))
                                                            (branch "CUT: de.uni.trier.infsec.lib.network.NetworkError::instance(exc_6) = TRUE TRUE"
                                                               (rule "instanceof_not_compatible_5" (formula "42") (term "1") (ifseqformula "41"))
                                                               (rule "instanceof_not_compatible_5" (formula "42") (term "1,0") (ifseqformula "41"))
                                                               (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "50")) (ifInst ""  (formula "50")))
                                                               (rule "true_left" (formula "42"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch "o_18 = strPool(\"localhost\") TRUE"
                                                                  (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "75")))
                                                                  (rule "closeFalse" (formula "3"))
                                                               )
                                                               (branch "o_18 = strPool(\"localhost\") FALSE"
                                                                  (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "41"))
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "false_right" (formula "42"))
                                                                  (rule "commute_and" (formula "1") (term "0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "72"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                            )
                                                            (branch "CUT: de.uni.trier.infsec.lib.network.NetworkError::instance(exc_6) = TRUE FALSE"
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch "o_18 = strPool(\"localhost\") TRUE"
                                                                  (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "76")))
                                                                  (rule "closeFalse" (formula "3"))
                                                               )
                                                               (branch "o_18 = strPool(\"localhost\") FALSE"
                                                                  (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "43") (term "1") (ifseqformula "41"))
                                                                  (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "false_right" (formula "43"))
                                                                  (rule "commute_and" (formula "1") (term "0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "73"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                            )
                                                         )
                                                         (branch "CUT: message = null FALSE"
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "30"))
                                                            (rule "applyEq" (formula "28") (term "0") (ifseqformula "30"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                            (rule "mul_literals" (formula "28") (term "0,1"))
                                                            (rule "cut_direct" (formula "43") (term "0,0"))
                                                            (branch "CUT: de.uni.trier.infsec.lib.network.NetworkError::instance(exc_6) = TRUE TRUE"
                                                               (rule "instanceof_not_compatible_5" (formula "44") (term "1") (ifseqformula "43"))
                                                               (rule "instanceof_not_compatible_5" (formula "44") (term "1,0") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "53")) (ifInst ""  (formula "53")))
                                                               (rule "true_left" (formula "44"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch "o_18 = strPool(\"localhost\") TRUE"
                                                                  (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "78")))
                                                                  (rule "closeFalse" (formula "3"))
                                                               )
                                                               (branch "o_18 = strPool(\"localhost\") FALSE"
                                                                  (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "43"))
                                                                  (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "false_right" (formula "45"))
                                                                  (rule "commute_and" (formula "1") (term "0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "75"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                            )
                                                            (branch "CUT: de.uni.trier.infsec.lib.network.NetworkError::instance(exc_6) = TRUE FALSE"
                                                               (builtin "One Step Simplification" (formula "43"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch "o_18 = strPool(\"localhost\") TRUE"
                                                                  (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")))
                                                                  (rule "closeFalse" (formula "3"))
                                                               )
                                                               (branch "o_18 = strPool(\"localhost\") FALSE"
                                                                  (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "43"))
                                                                  (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "false_right" (formula "46"))
                                                                  (rule "commute_and" (formula "1") (term "0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "76"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "CUT: result_3 = null FALSE"
                                                         (builtin "One Step Simplification" (formula "40"))
                                                         (rule "replace_known_right" (formula "32") (term "0,0,0,0,0") (ifseqformula "45"))
                                                         (builtin "One Step Simplification" (formula "32"))
                                                         (rule "applyEq" (formula "38") (term "0") (ifseqformula "40"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "1"))
                                                         (rule "mul_literals" (formula "38") (term "0,1"))
                                                         (rule "cut_direct" (formula "5") (term "0"))
                                                         (branch "CUT: message = null TRUE"
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "true_left" (formula "6"))
                                                            (rule "replace_known_left" (formula "30") (term "0,0") (ifseqformula "5"))
                                                            (builtin "One Step Simplification" (formula "30"))
                                                            (rule "true_left" (formula "30"))
                                                            (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "5"))
                                                            (rule "cut_direct" (formula "43") (term "0,0"))
                                                            (branch "CUT: de.uni.trier.infsec.lib.network.NetworkError::instance(exc_6) = TRUE TRUE"
                                                               (rule "instanceof_not_compatible_5" (formula "44") (term "1") (ifseqformula "43"))
                                                               (rule "instanceof_not_compatible_5" (formula "44") (term "1,0") (ifseqformula "43"))
                                                               (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "53")) (ifInst ""  (formula "53")))
                                                               (rule "true_left" (formula "44"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch "o_18 = strPool(\"localhost\") TRUE"
                                                                  (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "78")))
                                                                  (rule "closeFalse" (formula "3"))
                                                               )
                                                               (branch "o_18 = strPool(\"localhost\") FALSE"
                                                                  (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "43"))
                                                                  (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "false_right" (formula "45"))
                                                                  (rule "commute_and" (formula "1") (term "0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "75"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                            )
                                                            (branch "CUT: de.uni.trier.infsec.lib.network.NetworkError::instance(exc_6) = TRUE FALSE"
                                                               (builtin "One Step Simplification" (formula "43"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch "o_18 = strPool(\"localhost\") TRUE"
                                                                  (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")))
                                                                  (rule "closeFalse" (formula "3"))
                                                               )
                                                               (branch "o_18 = strPool(\"localhost\") FALSE"
                                                                  (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "43"))
                                                                  (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "false_right" (formula "46"))
                                                                  (rule "commute_and" (formula "1") (term "0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "76"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                            )
                                                         )
                                                         (branch "CUT: message = null FALSE"
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "45"))
                                                            (builtin "One Step Simplification" (formula "30"))
                                                            (rule "applyEq" (formula "38") (term "0,1,1") (ifseqformula "30"))
                                                            (rule "polySimp_mulComm0" (formula "38") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "38") (term "0,1,1"))
                                                            (rule "mul_literals" (formula "38") (term "0,0,1,1"))
                                                            (rule "polySimp_addAssoc" (formula "38") (term "1"))
                                                            (rule "polySimp_addAssoc" (formula "38") (term "0,1"))
                                                            (rule "add_literals" (formula "38") (term "0,0,1"))
                                                            (rule "applyEq" (formula "28") (term "0") (ifseqformula "30"))
                                                            (rule "applyEq" (formula "40") (term "1,0,1") (ifseqformula "30"))
                                                            (rule "polySimp_addAssoc" (formula "40") (term "0,1"))
                                                            (rule "polySimp_addAssoc" (formula "40") (term "0,0,1"))
                                                            (rule "add_literals" (formula "40") (term "0,0,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                            (rule "mul_literals" (formula "28") (term "0,1"))
                                                            (rule "cut_direct" (formula "44") (term "1"))
                                                            (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE TRUE"
                                                               (rule "instanceof_not_compatible_5" (formula "45") (term "1,0") (ifseqformula "44"))
                                                               (rule "instanceof_not_compatible_5" (formula "45") (term "0,0") (ifseqformula "44"))
                                                               (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "55")) (ifInst ""  (formula "55")))
                                                               (rule "true_left" (formula "45"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch "o_18 = strPool(\"localhost\") TRUE"
                                                                  (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")))
                                                                  (rule "closeFalse" (formula "3"))
                                                               )
                                                               (branch "o_18 = strPool(\"localhost\") FALSE"
                                                                  (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "44"))
                                                                  (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "false_right" (formula "47"))
                                                                  (rule "cut_direct" (formula "77") (term "0,0"))
                                                                  (branch "CUT: o_18 = null TRUE"
                                                                     (builtin "One Step Simplification" (formula "78"))
                                                                     (rule "false_right" (formula "78"))
                                                                     (rule "replace_known_left" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "78")))
                                                                     (rule "closeFalse" (formula "2"))
                                                                  )
                                                                  (branch "CUT: o_18 = null FALSE"
                                                                     (builtin "One Step Simplification" (formula "78"))
                                                                     (rule "notRight" (formula "78"))
                                                                     (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "78")) (ifInst ""  (formula "79")))
                                                                     (rule "closeFalse" (formula "2"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE FALSE"
                                                               (builtin "One Step Simplification" (formula "44"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch "o_18 = strPool(\"localhost\") TRUE"
                                                                  (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "81")))
                                                                  (rule "closeFalse" (formula "3"))
                                                               )
                                                               (branch "o_18 = strPool(\"localhost\") FALSE"
                                                                  (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "44"))
                                                                  (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "false_right" (formula "48"))
                                                                  (rule "cut_direct" (formula "78") (term "0,0"))
                                                                  (branch "CUT: o_18 = null TRUE"
                                                                     (builtin "One Step Simplification" (formula "79"))
                                                                     (rule "false_right" (formula "79"))
                                                                     (rule "replace_known_left" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "79")))
                                                                     (rule "closeFalse" (formula "2"))
                                                                  )
                                                                  (branch "CUT: o_18 = null FALSE"
                                                                     (builtin "One Step Simplification" (formula "79"))
                                                                     (rule "notRight" (formula "79"))
                                                                     (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "79")) (ifInst ""  (formula "80")))
                                                                     (rule "closeFalse" (formula "2"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch " exc_6.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "48"))
                                             (rule "hideAuxiliaryEq" (formula "48"))
                                             (rule "replace_known_right" (formula "49") (term "1,0,0") (ifseqformula "52"))
                                             (builtin "One Step Simplification" (formula "49"))
                                             (rule "replace_known_right" (formula "48") (term "1,0,0") (ifseqformula "52"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "orRight" (formula "52"))
                                                (rule "orRight" (formula "52"))
                                                (rule "orRight" (formula "52"))
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_right" (formula "6") (term "0,1,0,0") (ifseqformula "55"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "54"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "51")) (ifInst ""  (formula "53")) (ifInst ""  (formula "52")))
                                                (rule "replace_known_right" (formula "4") (term "1,0,0,0,0,1,0,0") (ifseqformula "53"))
                                                (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "55")) (ifInst ""  (formula "51")) (ifInst ""  (formula "52")) (ifInst ""  (formula "54")))
                                                (rule "replace_known_right" (formula "3") (term "0,0,0,0,1,0,0") (ifseqformula "51"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")) (ifInst ""  (formula "52")) (ifInst ""  (formula "53")) (ifInst ""  (formula "54")))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "replace_known_right" (formula "84") (term "0,1") (ifseqformula "50"))
                                                (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "54")))
                                                (rule "closeTrue" (formula "84"))
                                             )
                                             (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "51"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "46") (term "0"))
                                                (branch " exc_6.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE TRUE"
                                                   (rule "applyEqReverse" (formula "48") (term "1,0") (ifseqformula "47"))
                                                   (rule "hideAuxiliaryEq" (formula "47"))
                                                   (rule "replace_known_left" (formula "47") (term "0,0,0") (ifseqformula "46"))
                                                   (builtin "One Step Simplification" (formula "47"))
                                                   (rule "applyEqReverse" (formula "48") (term "0,0") (ifseqformula "47"))
                                                   (rule "hideAuxiliaryEq" (formula "47"))
                                                   (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "46"))
                                                   (builtin "One Step Simplification" (formula "47"))
                                                   (rule "true_left" (formula "47"))
                                                   (rule "ifthenelse_split" (formula "1") (term "0"))
                                                   (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "orRight" (formula "49"))
                                                      (rule "orRight" (formula "49"))
                                                      (rule "orRight" (formula "49"))
                                                      (rule "orRight" (formula "49"))
                                                      (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_right" (formula "2") (term "0,0,0,0,0,1,0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "47")) (ifInst ""  (formula "49")) (ifInst ""  (formula "50")) (ifInst ""  (formula "51")) (ifInst ""  (formula "52")))
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "replace_known_right" (formula "81") (term "1") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "81"))
                                                      (rule "false_right" (formula "81"))
                                                      (rule "replace_known_right" (formula "80") (term "1") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "80"))
                                                      (rule "false_right" (formula "80"))
                                                      (rule "replace_known_right" (formula "80") (term "0,0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "47")))
                                                      (rule "closeTrue" (formula "80"))
                                                   )
                                                   (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                      (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "commute_or_2" (formula "46") (term "0,0,0,1"))
                                                      (rule "commute_or_2" (formula "46") (term "0,0,1"))
                                                      (rule "ifthenelse_split" (formula "1") (term "0"))
                                                      (branch "o_18 = strPool(\"localhost\") TRUE"
                                                         (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "79") (term "1") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "applyEqRigid" (formula "75") (term "0,1") (ifseqformula "1"))
                                                         (rule "eqSymm" (formula "75") (term "1"))
                                                         (rule "replace_known_right" (formula "75") (term "1") (ifseqformula "73"))
                                                         (builtin "One Step Simplification" (formula "75"))
                                                         (rule "false_right" (formula "75"))
                                                         (rule "applyEqRigid" (formula "45") (term "1,0,1,0,1") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "76") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "45") (term "1,0,0,0,0,0,0,1") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "45") (term "1,0,1,0,0,0,0,1") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "45") (term "1,0,1,0,0,0,1") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "50") (term "1,0,0,0,1") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "45") (term "0,0,0") (ifseqformula "1"))
                                                         (rule "eqSymm" (formula "45") (term "0,0"))
                                                         (rule "replace_known_right" (formula "45") (term "0,0") (ifseqformula "73"))
                                                         (builtin "One Step Simplification" (formula "45"))
                                                         (rule "notRight" (formula "45"))
                                                         (rule "applyEqRigid" (formula "74") (term "0,1") (ifseqformula "2"))
                                                         (rule "eqSymm" (formula "74") (term "1"))
                                                         (rule "replace_known_right" (formula "74") (term "1") (ifseqformula "73"))
                                                         (builtin "One Step Simplification" (formula "74"))
                                                         (rule "false_right" (formula "74"))
                                                         (rule "applyEq" (formula "46") (term "1,0,1,0,0,0,1") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "50") (term "1,0,1,0,1") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "46") (term "1,0,1,0,1") (ifseqformula "2"))
                                                         (rule "applyEqRigid" (formula "74") (term "0,0,0") (ifseqformula "2"))
                                                         (rule "eqSymm" (formula "74") (term "0,0"))
                                                         (rule "replace_known_right" (formula "74") (term "0,0") (ifseqformula "73"))
                                                         (builtin "One Step Simplification" (formula "74"))
                                                         (rule "notRight" (formula "74"))
                                                         (rule "replace_known_left" (formula "49") (term "0,0,0,1") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "false_right" (formula "49"))
                                                         (rule "replace_known_left" (formula "47") (term "0,0,0,0,1") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "false_right" (formula "47"))
                                                         (rule "applyEqRigid" (formula "49") (term "0,0,0") (ifseqformula "3"))
                                                         (rule "eqSymm" (formula "49") (term "0,0"))
                                                         (rule "replace_known_right" (formula "49") (term "0,0") (ifseqformula "72"))
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "notRight" (formula "49"))
                                                         (rule "applyEq" (formula "5") (term "1,2,0") (ifseqformula "4"))
                                                         (rule "applyEqRigid" (formula "3") (term "1,0,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                         (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "cut_direct" (formula "41") (term "0,0"))
                                                         (branch "CUT: result_3 = null TRUE"
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "true_left" (formula "42"))
                                                            (rule "replace_known_left" (formula "33") (term "0,0,0,0,0") (ifseqformula "41"))
                                                            (builtin "One Step Simplification" (formula "33"))
                                                            (rule "true_left" (formula "33"))
                                                            (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "40"))
                                                            (rule "cut_direct" (formula "6") (term "0"))
                                                            (branch "CUT: message = null TRUE"
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "true_left" (formula "7"))
                                                               (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "6"))
                                                               (builtin "One Step Simplification" (formula "31"))
                                                               (rule "true_left" (formula "31"))
                                                               (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "6"))
                                                               (rule "cut_direct" (formula "42") (term "1"))
                                                               (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE TRUE"
                                                                  (rule "instanceof_not_compatible_5" (formula "43") (term "0,0") (ifseqformula "42"))
                                                                  (rule "instanceof_not_compatible_5" (formula "43") (term "1,0") (ifseqformula "42"))
                                                                  (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "47")) (ifInst ""  (formula "47")))
                                                                  (rule "true_left" (formula "43"))
                                                                  (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                  (branch "f_18 = java.lang.Object::<created> TRUE"
                                                                     (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "applyEqRigid" (formula "68") (term "2,0") (ifseqformula "3"))
                                                                     (rule "castTrueImpliesOriginalTrue" (formula "68") (ifseqformula "1"))
                                                                     (rule "closeTrue" (formula "68"))
                                                                  )
                                                                  (branch "f_18 = java.lang.Object::<created> FALSE"
                                                                     (rule "close" (formula "69") (ifseqformula "3"))
                                                                  )
                                                               )
                                                               (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE FALSE"
                                                                  (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                  (branch "f_18 = java.lang.Object::<created> TRUE"
                                                                     (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "applyEq" (formula "69") (term "2,0") (ifseqformula "3"))
                                                                     (rule "castTrueImpliesOriginalTrue" (formula "69") (ifseqformula "1"))
                                                                     (rule "closeTrue" (formula "69"))
                                                                  )
                                                                  (branch "f_18 = java.lang.Object::<created> FALSE"
                                                                     (rule "close" (formula "70") (ifseqformula "3"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "CUT: message = null FALSE"
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "45"))
                                                               (builtin "One Step Simplification" (formula "31"))
                                                               (rule "applyEq" (formula "29") (term "0") (ifseqformula "31"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                                               (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                               (rule "mul_literals" (formula "29") (term "0,1"))
                                                               (rule "cut_direct" (formula "44") (term "1"))
                                                               (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE TRUE"
                                                                  (rule "instanceof_not_compatible_5" (formula "45") (term "0,0") (ifseqformula "44"))
                                                                  (rule "instanceof_not_compatible_5" (formula "45") (term "1,0") (ifseqformula "44"))
                                                                  (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "50")) (ifInst ""  (formula "50")))
                                                                  (rule "true_left" (formula "45"))
                                                                  (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                  (branch "f_18 = java.lang.Object::<created> TRUE"
                                                                     (rule "applyEqReverse" (formula "72") (term "1") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "applyEq" (formula "71") (term "2,0") (ifseqformula "3"))
                                                                     (rule "castTrueImpliesOriginalTrue" (formula "71") (ifseqformula "1"))
                                                                     (rule "closeTrue" (formula "71"))
                                                                  )
                                                                  (branch "f_18 = java.lang.Object::<created> FALSE"
                                                                     (rule "close" (formula "72") (ifseqformula "3"))
                                                                  )
                                                               )
                                                               (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE FALSE"
                                                                  (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                  (branch "f_18 = java.lang.Object::<created> TRUE"
                                                                     (rule "applyEqReverse" (formula "73") (term "1") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "applyEq" (formula "72") (term "2,0") (ifseqformula "3"))
                                                                     (rule "castTrueImpliesOriginalTrue" (formula "72") (ifseqformula "1"))
                                                                     (rule "closeTrue" (formula "72"))
                                                                  )
                                                                  (branch "f_18 = java.lang.Object::<created> FALSE"
                                                                     (rule "close" (formula "73") (ifseqformula "3"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "CUT: result_3 = null FALSE"
                                                            (builtin "One Step Simplification" (formula "41"))
                                                            (rule "replace_known_right" (formula "33") (term "0,0,0,0,0") (ifseqformula "46"))
                                                            (builtin "One Step Simplification" (formula "33"))
                                                            (rule "applyEq" (formula "39") (term "0") (ifseqformula "41"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                            (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "39") (term "1"))
                                                            (rule "mul_literals" (formula "39") (term "0,1"))
                                                            (rule "cut_direct" (formula "6") (term "0"))
                                                            (branch "CUT: message = null TRUE"
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "true_left" (formula "7"))
                                                               (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "6"))
                                                               (builtin "One Step Simplification" (formula "31"))
                                                               (rule "true_left" (formula "31"))
                                                               (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "6"))
                                                               (rule "cut_direct" (formula "44") (term "1"))
                                                               (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE TRUE"
                                                                  (rule "instanceof_not_compatible_5" (formula "45") (term "1,0") (ifseqformula "44"))
                                                                  (rule "instanceof_not_compatible_5" (formula "45") (term "0,0") (ifseqformula "44"))
                                                                  (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "50")) (ifInst ""  (formula "50")))
                                                                  (rule "true_left" (formula "45"))
                                                                  (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                  (branch "f_18 = java.lang.Object::<created> TRUE"
                                                                     (rule "applyEqReverse" (formula "72") (term "1") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "applyEq" (formula "71") (term "2,0") (ifseqformula "3"))
                                                                     (rule "castTrueImpliesOriginalTrue" (formula "71") (ifseqformula "1"))
                                                                     (rule "closeTrue" (formula "71"))
                                                                  )
                                                                  (branch "f_18 = java.lang.Object::<created> FALSE"
                                                                     (rule "close" (formula "72") (ifseqformula "3"))
                                                                  )
                                                               )
                                                               (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE FALSE"
                                                                  (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                  (branch "f_18 = java.lang.Object::<created> TRUE"
                                                                     (rule "applyEqReverse" (formula "73") (term "1") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "applyEqRigid" (formula "72") (term "2,0") (ifseqformula "3"))
                                                                     (rule "castTrueImpliesOriginalTrue" (formula "72") (ifseqformula "1"))
                                                                     (rule "closeTrue" (formula "72"))
                                                                  )
                                                                  (branch "f_18 = java.lang.Object::<created> FALSE"
                                                                     (rule "close" (formula "73") (ifseqformula "3"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "CUT: message = null FALSE"
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "46"))
                                                               (builtin "One Step Simplification" (formula "31"))
                                                               (rule "applyEq" (formula "39") (term "0,1,1") (ifseqformula "31"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "0,1,1"))
                                                               (rule "mul_literals" (formula "39") (term "0,0,1,1"))
                                                               (rule "polySimp_addAssoc" (formula "39") (term "1"))
                                                               (rule "polySimp_addAssoc" (formula "39") (term "0,1"))
                                                               (rule "add_literals" (formula "39") (term "0,0,1"))
                                                               (rule "applyEq" (formula "29") (term "0") (ifseqformula "31"))
                                                               (rule "applyEq" (formula "41") (term "1,0,1") (ifseqformula "31"))
                                                               (rule "polySimp_addAssoc" (formula "41") (term "0,1"))
                                                               (rule "polySimp_addAssoc" (formula "41") (term "0,0,1"))
                                                               (rule "add_literals" (formula "41") (term "0,0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                                               (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                               (rule "mul_literals" (formula "29") (term "0,1"))
                                                               (rule "cut_direct" (formula "45") (term "1"))
                                                               (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE TRUE"
                                                                  (rule "instanceof_not_compatible_5" (formula "46") (term "1,0") (ifseqformula "45"))
                                                                  (rule "instanceof_not_compatible_5" (formula "46") (term "0,0") (ifseqformula "45"))
                                                                  (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "52")) (ifInst ""  (formula "52")))
                                                                  (rule "true_left" (formula "46"))
                                                                  (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                  (branch "f_18 = java.lang.Object::<created> TRUE"
                                                                     (rule "applyEqReverse" (formula "74") (term "1") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "applyEqRigid" (formula "73") (term "2,0") (ifseqformula "3"))
                                                                     (rule "castTrueImpliesOriginalTrue" (formula "73") (ifseqformula "1"))
                                                                     (rule "closeTrue" (formula "73"))
                                                                  )
                                                                  (branch "f_18 = java.lang.Object::<created> FALSE"
                                                                     (rule "close" (formula "74") (ifseqformula "3"))
                                                                  )
                                                               )
                                                               (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE FALSE"
                                                                  (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                  (branch "f_18 = java.lang.Object::<created> TRUE"
                                                                     (rule "applyEqReverse" (formula "75") (term "1") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "applyEqRigid" (formula "74") (term "2,0") (ifseqformula "3"))
                                                                     (rule "castTrueImpliesOriginalTrue" (formula "74") (ifseqformula "1"))
                                                                     (rule "closeTrue" (formula "74"))
                                                                  )
                                                                  (branch "f_18 = java.lang.Object::<created> FALSE"
                                                                     (rule "close" (formula "75") (ifseqformula "3"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "o_18 = strPool(\"localhost\") FALSE"
                                                         (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "45"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "commute_and" (formula "1") (term "0,0"))
                                                         (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "76"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                )
                                                (branch " exc_6.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE FALSE"
                                                   (rule "applyEqReverse" (formula "47") (term "1,0") (ifseqformula "46"))
                                                   (rule "hideAuxiliaryEq" (formula "46"))
                                                   (rule "replace_known_right" (formula "46") (term "0,0,0") (ifseqformula "49"))
                                                   (builtin "One Step Simplification" (formula "46"))
                                                   (rule "ifthenelse_split" (formula "1") (term "0"))
                                                   (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "notLeft" (formula "1"))
                                                      (rule "orRight" (formula "50"))
                                                      (rule "orRight" (formula "50"))
                                                      (rule "orRight" (formula "50"))
                                                      (rule "orRight" (formula "50"))
                                                      (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "replace_known_right" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")) (ifInst ""  (formula "49")) (ifInst ""  (formula "51")) (ifInst ""  (formula "52")) (ifInst ""  (formula "53")))
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "replace_known_right" (formula "84") (term "0,0") (ifseqformula "47"))
                                                      (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "48")))
                                                      (rule "closeTrue" (formula "84"))
                                                   )
                                                   (branch " ¬o_18 = null ∧ ¬( o_18.<created> = TRUE ∨ o_18.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_18.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                      (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "commute_or_2" (formula "47") (term "0,0,0,1"))
                                                      (rule "commute_or_2" (formula "47") (term "0,0,1"))
                                                      (rule "ifthenelse_split" (formula "1") (term "0"))
                                                      (branch "o_18 = strPool(\"localhost\") TRUE"
                                                         (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "81") (term "1") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "52") (term "1,0,0,0,1") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "50") (term "1,0,1,0,1") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "78") (term "0,0,0") (ifseqformula "1"))
                                                         (rule "eqSymm" (formula "78") (term "0,0"))
                                                         (rule "replace_known_right" (formula "78") (term "0,0") (ifseqformula "75"))
                                                         (builtin "One Step Simplification" (formula "78"))
                                                         (rule "notRight" (formula "78"))
                                                         (rule "replace_known_left" (formula "51") (term "0,0,0,1") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "replace_known_left" (formula "49") (term "0,0,0,0,1") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "false_right" (formula "49"))
                                                         (rule "replace_known_left" (formula "47") (term "0,0,0,0,0,1") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "47"))
                                                         (rule "false_right" (formula "47"))
                                                         (rule "applyEqRigid" (formula "76") (term "1,0") (ifseqformula "2"))
                                                         (rule "applyEqRigid" (formula "74") (term "0,1") (ifseqformula "2"))
                                                         (rule "eqSymm" (formula "74") (term "1"))
                                                         (rule "replace_known_right" (formula "74") (term "1") (ifseqformula "73"))
                                                         (builtin "One Step Simplification" (formula "74"))
                                                         (rule "false_right" (formula "74"))
                                                         (rule "applyEqRigid" (formula "50") (term "0,0,0") (ifseqformula "2"))
                                                         (rule "eqSymm" (formula "50") (term "0,0"))
                                                         (rule "replace_known_right" (formula "50") (term "0,0") (ifseqformula "73"))
                                                         (builtin "One Step Simplification" (formula "50"))
                                                         (rule "notRight" (formula "50"))
                                                         (rule "applyEq" (formula "74") (term "0,1") (ifseqformula "3"))
                                                         (rule "eqSymm" (formula "74") (term "1"))
                                                         (rule "replace_known_right" (formula "74") (term "1") (ifseqformula "73"))
                                                         (builtin "One Step Simplification" (formula "74"))
                                                         (rule "false_right" (formula "74"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "3"))
                                                         (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "ifthenelse_split" (formula "44") (term "0"))
                                                         (branch " exc_6.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE TRUE"
                                                            (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "45"))
                                                            (rule "hideAuxiliaryEq" (formula "45"))
                                                            (rule "replace_known_left" (formula "45") (term "0") (ifseqformula "44"))
                                                            (builtin "One Step Simplification" (formula "45"))
                                                            (rule "true_left" (formula "45"))
                                                            (rule "cut_direct" (formula "41") (term "0,0"))
                                                            (branch "CUT: result_3 = null TRUE"
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "true_left" (formula "42"))
                                                               (rule "replace_known_left" (formula "33") (term "0,0,0,0,0") (ifseqformula "41"))
                                                               (builtin "One Step Simplification" (formula "33"))
                                                               (rule "true_left" (formula "33"))
                                                               (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "40"))
                                                               (rule "cut_direct" (formula "6") (term "0"))
                                                               (branch "CUT: message = null TRUE"
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "true_left" (formula "7"))
                                                                  (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "6"))
                                                                  (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "true_left" (formula "31"))
                                                                  (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "6"))
                                                                  (rule "cut_direct" (formula "42") (term "1"))
                                                                  (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE TRUE"
                                                                     (rule "instanceof_not_compatible_5" (formula "43") (term "0,0") (ifseqformula "42"))
                                                                     (rule "instanceof_not_compatible_5" (formula "43") (term "1,0") (ifseqformula "42"))
                                                                     (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "48")) (ifInst ""  (formula "48")))
                                                                     (rule "true_left" (formula "43"))
                                                                     (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                     (branch "f_18 = java.lang.Object::<created> TRUE"
                                                                        (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "4"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "applyEqRigid" (formula "69") (term "2,0") (ifseqformula "3"))
                                                                        (rule "castTrueImpliesOriginalTrue" (formula "69") (ifseqformula "1"))
                                                                        (rule "closeTrue" (formula "69"))
                                                                     )
                                                                     (branch "f_18 = java.lang.Object::<created> FALSE"
                                                                        (rule "close" (formula "70") (ifseqformula "3"))
                                                                     )
                                                                  )
                                                                  (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE FALSE"
                                                                     (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                     (branch "f_18 = java.lang.Object::<created> TRUE"
                                                                        (rule "applyEqReverse" (formula "71") (term "1") (ifseqformula "4"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "applyEq" (formula "70") (term "2,0") (ifseqformula "3"))
                                                                        (rule "castTrueImpliesOriginalTrue" (formula "70") (ifseqformula "1"))
                                                                        (rule "closeTrue" (formula "70"))
                                                                     )
                                                                     (branch "f_18 = java.lang.Object::<created> FALSE"
                                                                        (rule "close" (formula "71") (ifseqformula "3"))
                                                                     )
                                                                  )
                                                               )
                                                               (branch "CUT: message = null FALSE"
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "45"))
                                                                  (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "applyEq" (formula "29") (term "0") (ifseqformula "31"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                                                  (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                                  (rule "mul_literals" (formula "29") (term "0,1"))
                                                                  (rule "cut_direct" (formula "44") (term "1"))
                                                                  (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE TRUE"
                                                                     (rule "instanceof_not_compatible_5" (formula "45") (term "0,0") (ifseqformula "44"))
                                                                     (rule "instanceof_not_compatible_5" (formula "45") (term "1,0") (ifseqformula "44"))
                                                                     (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "51")) (ifInst ""  (formula "51")))
                                                                     (rule "true_left" (formula "45"))
                                                                     (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                     (branch "f_18 = java.lang.Object::<created> TRUE"
                                                                        (rule "applyEqReverse" (formula "73") (term "1") (ifseqformula "4"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "applyEqRigid" (formula "72") (term "2,0") (ifseqformula "3"))
                                                                        (rule "castTrueImpliesOriginalTrue" (formula "72") (ifseqformula "1"))
                                                                        (rule "closeTrue" (formula "72"))
                                                                     )
                                                                     (branch "f_18 = java.lang.Object::<created> FALSE"
                                                                        (rule "close" (formula "73") (ifseqformula "3"))
                                                                     )
                                                                  )
                                                                  (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE FALSE"
                                                                     (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                     (branch "f_18 = java.lang.Object::<created> TRUE"
                                                                        (rule "applyEqReverse" (formula "74") (term "1") (ifseqformula "4"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "applyEqRigid" (formula "73") (term "2,0") (ifseqformula "3"))
                                                                        (rule "castTrueImpliesOriginalTrue" (formula "73") (ifseqformula "1"))
                                                                        (rule "closeTrue" (formula "73"))
                                                                     )
                                                                     (branch "f_18 = java.lang.Object::<created> FALSE"
                                                                        (rule "close" (formula "74") (ifseqformula "3"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                            (branch "CUT: result_3 = null FALSE"
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "replace_known_right" (formula "33") (term "0,0,0,0,0") (ifseqformula "46"))
                                                               (builtin "One Step Simplification" (formula "33"))
                                                               (rule "applyEq" (formula "39") (term "0") (ifseqformula "41"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "1"))
                                                               (rule "mul_literals" (formula "39") (term "0,1"))
                                                               (rule "cut_direct" (formula "6") (term "0"))
                                                               (branch "CUT: message = null TRUE"
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "true_left" (formula "7"))
                                                                  (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "6"))
                                                                  (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "true_left" (formula "31"))
                                                                  (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "6"))
                                                                  (rule "cut_direct" (formula "44") (term "1"))
                                                                  (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE TRUE"
                                                                     (rule "instanceof_not_compatible_5" (formula "45") (term "1,0") (ifseqformula "44"))
                                                                     (rule "instanceof_not_compatible_5" (formula "45") (term "0,0") (ifseqformula "44"))
                                                                     (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "51")) (ifInst ""  (formula "51")))
                                                                     (rule "true_left" (formula "45"))
                                                                     (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                     (branch "f_18 = java.lang.Object::<created> TRUE"
                                                                        (rule "applyEqReverse" (formula "73") (term "1") (ifseqformula "4"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "applyEqRigid" (formula "72") (term "2,0") (ifseqformula "3"))
                                                                        (rule "castTrueImpliesOriginalTrue" (formula "72") (ifseqformula "1"))
                                                                        (rule "closeTrue" (formula "72"))
                                                                     )
                                                                     (branch "f_18 = java.lang.Object::<created> FALSE"
                                                                        (rule "close" (formula "73") (ifseqformula "3"))
                                                                     )
                                                                  )
                                                                  (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE FALSE"
                                                                     (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                     (branch "f_18 = java.lang.Object::<created> TRUE"
                                                                        (rule "applyEqReverse" (formula "74") (term "1") (ifseqformula "4"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "applyEqRigid" (formula "73") (term "2,0") (ifseqformula "3"))
                                                                        (rule "castTrueImpliesOriginalTrue" (formula "73") (ifseqformula "1"))
                                                                        (rule "closeTrue" (formula "73"))
                                                                     )
                                                                     (branch "f_18 = java.lang.Object::<created> FALSE"
                                                                        (rule "close" (formula "74") (ifseqformula "3"))
                                                                     )
                                                                  )
                                                               )
                                                               (branch "CUT: message = null FALSE"
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "46"))
                                                                  (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "applyEq" (formula "39") (term "0,1,1") (ifseqformula "31"))
                                                                  (rule "polySimp_mulComm0" (formula "39") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "39") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "39") (term "0,1,1"))
                                                                  (rule "mul_literals" (formula "39") (term "0,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "39") (term "1"))
                                                                  (rule "polySimp_addAssoc" (formula "39") (term "0,1"))
                                                                  (rule "add_literals" (formula "39") (term "0,0,1"))
                                                                  (rule "applyEq" (formula "29") (term "0") (ifseqformula "31"))
                                                                  (rule "applyEq" (formula "41") (term "1,0,1") (ifseqformula "31"))
                                                                  (rule "polySimp_addAssoc" (formula "41") (term "0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "41") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "41") (term "0,0,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                                                  (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                                  (rule "mul_literals" (formula "29") (term "0,1"))
                                                                  (rule "cut_direct" (formula "45") (term "1"))
                                                                  (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE TRUE"
                                                                     (rule "instanceof_not_compatible_5" (formula "46") (term "0,0") (ifseqformula "45"))
                                                                     (rule "instanceof_not_compatible_5" (formula "46") (term "1,0") (ifseqformula "45"))
                                                                     (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "53")) (ifInst ""  (formula "53")))
                                                                     (rule "true_left" (formula "46"))
                                                                     (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                     (branch "f_18 = java.lang.Object::<created> TRUE"
                                                                        (rule "applyEqReverse" (formula "75") (term "1") (ifseqformula "4"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "applyEqRigid" (formula "74") (term "2,0") (ifseqformula "3"))
                                                                        (rule "castTrueImpliesOriginalTrue" (formula "74") (ifseqformula "1"))
                                                                        (rule "closeTrue" (formula "74"))
                                                                     )
                                                                     (branch "f_18 = java.lang.Object::<created> FALSE"
                                                                        (rule "close" (formula "75") (ifseqformula "3"))
                                                                     )
                                                                  )
                                                                  (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE FALSE"
                                                                     (builtin "One Step Simplification" (formula "45"))
                                                                     (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                     (branch "f_18 = java.lang.Object::<created> TRUE"
                                                                        (rule "applyEqReverse" (formula "76") (term "1") (ifseqformula "4"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "applyEqRigid" (formula "75") (term "2,0") (ifseqformula "3"))
                                                                        (rule "castTrueImpliesOriginalTrue" (formula "75") (ifseqformula "1"))
                                                                        (rule "closeTrue" (formula "75"))
                                                                     )
                                                                     (branch "f_18 = java.lang.Object::<created> FALSE"
                                                                        (rule "close" (formula "76") (ifseqformula "3"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch " exc_6.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE FALSE"
                                                            (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "44"))
                                                            (rule "hideAuxiliaryEq" (formula "44"))
                                                            (rule "cut_direct" (formula "41") (term "0,0"))
                                                            (branch "CUT: result_3 = null TRUE"
                                                               (builtin "One Step Simplification" (formula "42"))
                                                               (rule "true_left" (formula "42"))
                                                               (rule "replace_known_left" (formula "33") (term "0,0,0,0,0") (ifseqformula "41"))
                                                               (builtin "One Step Simplification" (formula "33"))
                                                               (rule "true_left" (formula "33"))
                                                               (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "40"))
                                                               (rule "cut_direct" (formula "6") (term "0"))
                                                               (branch "CUT: message = null TRUE"
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "true_left" (formula "7"))
                                                                  (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "6"))
                                                                  (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "true_left" (formula "31"))
                                                                  (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "6"))
                                                                  (rule "cut_direct" (formula "42") (term "1"))
                                                                  (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE TRUE"
                                                                     (rule "instanceof_not_compatible_5" (formula "43") (term "1,0") (ifseqformula "42"))
                                                                     (rule "instanceof_not_compatible_5" (formula "43") (term "0,0") (ifseqformula "42"))
                                                                     (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "49")) (ifInst ""  (formula "49")))
                                                                     (rule "true_left" (formula "43"))
                                                                     (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                     (branch "f_18 = java.lang.Object::<created> TRUE"
                                                                        (rule "applyEqReverse" (formula "71") (term "1") (ifseqformula "4"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "applyEq" (formula "70") (term "2,0") (ifseqformula "3"))
                                                                        (rule "castTrueImpliesOriginalTrue" (formula "70") (ifseqformula "1"))
                                                                        (rule "closeTrue" (formula "70"))
                                                                     )
                                                                     (branch "f_18 = java.lang.Object::<created> FALSE"
                                                                        (rule "close" (formula "71") (ifseqformula "3"))
                                                                     )
                                                                  )
                                                                  (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE FALSE"
                                                                     (builtin "One Step Simplification" (formula "42"))
                                                                     (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                     (branch "f_18 = java.lang.Object::<created> TRUE"
                                                                        (rule "applyEqReverse" (formula "72") (term "1") (ifseqformula "4"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "applyEq" (formula "71") (term "2,0") (ifseqformula "3"))
                                                                        (rule "castTrueImpliesOriginalTrue" (formula "71") (ifseqformula "1"))
                                                                        (rule "closeTrue" (formula "71"))
                                                                     )
                                                                     (branch "f_18 = java.lang.Object::<created> FALSE"
                                                                        (rule "close" (formula "72") (ifseqformula "3"))
                                                                     )
                                                                  )
                                                               )
                                                               (branch "CUT: message = null FALSE"
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "45"))
                                                                  (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "applyEq" (formula "29") (term "0") (ifseqformula "31"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                                                  (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                                  (rule "mul_literals" (formula "29") (term "0,1"))
                                                                  (rule "cut_direct" (formula "44") (term "1"))
                                                                  (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE TRUE"
                                                                     (rule "instanceof_not_compatible_5" (formula "45") (term "0,0") (ifseqformula "44"))
                                                                     (rule "instanceof_not_compatible_5" (formula "45") (term "1,0") (ifseqformula "44"))
                                                                     (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "52")) (ifInst ""  (formula "52")))
                                                                     (rule "true_left" (formula "45"))
                                                                     (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                     (branch "f_18 = java.lang.Object::<created> TRUE"
                                                                        (rule "applyEqReverse" (formula "74") (term "1") (ifseqformula "4"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "applyEqRigid" (formula "73") (term "2,0") (ifseqformula "3"))
                                                                        (rule "castTrueImpliesOriginalTrue" (formula "73") (ifseqformula "1"))
                                                                        (rule "closeTrue" (formula "73"))
                                                                     )
                                                                     (branch "f_18 = java.lang.Object::<created> FALSE"
                                                                        (rule "close" (formula "74") (ifseqformula "3"))
                                                                     )
                                                                  )
                                                                  (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE FALSE"
                                                                     (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                     (branch "f_18 = java.lang.Object::<created> TRUE"
                                                                        (rule "applyEqReverse" (formula "75") (term "1") (ifseqformula "4"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "applyEq" (formula "74") (term "2,0") (ifseqformula "3"))
                                                                        (rule "castTrueImpliesOriginalTrue" (formula "74") (ifseqformula "1"))
                                                                        (rule "closeTrue" (formula "74"))
                                                                     )
                                                                     (branch "f_18 = java.lang.Object::<created> FALSE"
                                                                        (rule "close" (formula "75") (ifseqformula "3"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                            (branch "CUT: result_3 = null FALSE"
                                                               (builtin "One Step Simplification" (formula "41"))
                                                               (rule "replace_known_right" (formula "33") (term "0,0,0,0,0") (ifseqformula "46"))
                                                               (builtin "One Step Simplification" (formula "33"))
                                                               (rule "applyEq" (formula "39") (term "0") (ifseqformula "41"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                               (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "39") (term "1"))
                                                               (rule "mul_literals" (formula "39") (term "0,1"))
                                                               (rule "cut_direct" (formula "6") (term "0"))
                                                               (branch "CUT: message = null TRUE"
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "true_left" (formula "7"))
                                                                  (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "6"))
                                                                  (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "true_left" (formula "31"))
                                                                  (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "6"))
                                                                  (rule "cut_direct" (formula "44") (term "1"))
                                                                  (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE TRUE"
                                                                     (rule "instanceof_not_compatible_5" (formula "45") (term "0,0") (ifseqformula "44"))
                                                                     (rule "instanceof_not_compatible_5" (formula "45") (term "1,0") (ifseqformula "44"))
                                                                     (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "52")) (ifInst ""  (formula "52")))
                                                                     (rule "true_left" (formula "45"))
                                                                     (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                     (branch "f_18 = java.lang.Object::<created> TRUE"
                                                                        (rule "applyEqReverse" (formula "74") (term "1") (ifseqformula "4"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "applyEq" (formula "73") (term "2,0") (ifseqformula "3"))
                                                                        (rule "castTrueImpliesOriginalTrue" (formula "73") (ifseqformula "1"))
                                                                        (rule "closeTrue" (formula "73"))
                                                                     )
                                                                     (branch "f_18 = java.lang.Object::<created> FALSE"
                                                                        (rule "close" (formula "74") (ifseqformula "3"))
                                                                     )
                                                                  )
                                                                  (branch "CUT: java.lang.RuntimeException::instance(exc_6) = TRUE FALSE"
                                                                     (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                     (branch "f_18 = java.lang.Object::<created> TRUE"
                                                                        (rule "applyEqReverse" (formula "75") (term "1") (ifseqformula "4"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "applyEqRigid" (formula "74") (term "2,0") (ifseqformula "3"))
                                                                        (rule "castTrueImpliesOriginalTrue" (formula "74") (ifseqformula "1"))
                                                                        (rule "closeTrue" (formula "74"))
                                                                     )
                                                                     (branch "f_18 = java.lang.Object::<created> FALSE"
                                                                        (rule "close" (formula "75") (ifseqformula "3"))
                                                                     )
                                                                  )
                                                               )
                                                               (branch "CUT: message = null FALSE"
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "46"))
                                                                  (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "applyEq" (formula "29") (term "0") (ifseqformula "31"))
                                                                  (rule "applyEq" (formula "39") (term "0,1,1") (ifseqformula "31"))
                                                                  (rule "polySimp_mulComm0" (formula "39") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "39") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "39") (term "0,1,1"))
                                                                  (rule "mul_literals" (formula "39") (term "0,0,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "39") (term "1"))
                                                                  (rule "polySimp_addAssoc" (formula "39") (term "0,1"))
                                                                  (rule "add_literals" (formula "39") (term "0,0,1"))
                                                                  (rule "applyEq" (formula "41") (term "1,0,1") (ifseqformula "31"))
                                                                  (rule "polySimp_addAssoc" (formula "41") (term "0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "41") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "41") (term "0,0,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                                                  (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                                  (rule "mul_literals" (formula "29") (term "0,1"))
                                                                  (rule "cut_direct" (formula "45") (term "0,0"))
                                                                  (branch "CUT: de.uni.trier.infsec.lib.network.NetworkError::instance(exc_6) = TRUE TRUE"
                                                                     (rule "instanceof_not_compatible_5" (formula "46") (term "1") (ifseqformula "45"))
                                                                     (rule "instanceof_not_compatible_5" (formula "46") (term "1,0") (ifseqformula "45"))
                                                                     (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "54")) (ifInst ""  (formula "54")))
                                                                     (rule "true_left" (formula "46"))
                                                                     (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                     (branch "f_18 = java.lang.Object::<created> TRUE"
                                                                        (rule "applyEqReverse" (formula "76") (term "1") (ifseqformula "4"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "applyEq" (formula "75") (term "2,0") (ifseqformula "3"))
                                                                        (rule "castTrueImpliesOriginalTrue" (formula "75") (ifseqformula "1"))
                                                                        (rule "closeTrue" (formula "75"))
                                                                     )
                                                                     (branch "f_18 = java.lang.Object::<created> FALSE"
                                                                        (rule "close" (formula "76") (ifseqformula "3"))
                                                                     )
                                                                  )
                                                                  (branch "CUT: de.uni.trier.infsec.lib.network.NetworkError::instance(exc_6) = TRUE FALSE"
                                                                     (builtin "One Step Simplification" (formula "45"))
                                                                     (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                     (branch "f_18 = java.lang.Object::<created> TRUE"
                                                                        (rule "applyEqReverse" (formula "77") (term "1") (ifseqformula "4"))
                                                                        (rule "hideAuxiliaryEq" (formula "4"))
                                                                        (rule "applyEqRigid" (formula "76") (term "2,0") (ifseqformula "3"))
                                                                        (rule "castTrueImpliesOriginalTrue" (formula "76") (ifseqformula "1"))
                                                                        (rule "closeTrue" (formula "76"))
                                                                     )
                                                                     (branch "f_18 = java.lang.Object::<created> FALSE"
                                                                        (rule "close" (formula "77") (ifseqformula "3"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "o_18 = strPool(\"localhost\") FALSE"
                                                         (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "46"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "commute_and" (formula "1") (term "0,0"))
                                                         (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "78"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "ClassCastException (!(exc_6 instanceof java.lang.Throwable))"
                              (builtin "One Step Simplification" (formula "70"))
                              (rule "closeTrue" (formula "70"))
                           )
                        )
                        (branch "if exc_6 instanceof java.lang.Throwable false"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
                  (branch "Pre (send)"
                     (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "40")) (ifInst ""  (formula "40")))
                     (rule "wellFormedCreate" (formula "56") (term "0,0,1"))
                     (rule "wellFormedAnonEQ" (formula "56") (term "0,0,1") (ifseqformula "30"))
                     (rule "wellFormedAnonEQ" (formula "56") (term "0,0,0,1") (ifseqformula "22"))
                     (rule "wellFormedAnonEQ" (formula "56") (term "0,0,0,0,1") (ifseqformula "15"))
                     (rule "wellFormedAnonEQ" (formula "56") (term "0,0,0,0,0,1") (ifseqformula "10"))
                     (rule "wellFormedAnonEQ" (formula "56") (term "0,0,0,0,0,0,1") (ifseqformula "7"))
                     (rule "eqSymm" (formula "56") (term "0,1,1"))
                     (rule "eqSymm" (formula "56") (term "0,0"))
                     (rule "replace_known_left" (formula "56") (term "1,0,0,0,0,0,1") (ifseqformula "9"))
                     (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "55")) (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "14")) (ifInst ""  (formula "21")) (ifInst ""  (formula "29")) (ifInst ""  (formula "55")))
                     (rule "pullOutSelect" (formula "56") (term "0,0") (inst "selectSK=java_lang_Object_created__0"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,1,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "56"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "56"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "23"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "11"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "8"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "39"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "37")) (ifInst ""  (formula "38")) (ifInst ""  (formula "40")))
                     (rule "applyEqReverse" (formula "57") (term "0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "56") (term "0") (ifseqformula "32"))
                     (builtin "One Step Simplification" (formula "56"))
                     (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=java_lang_Object_created__1"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "56"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "57"))
                     (rule "closeTrue" (formula "57"))
                  )
               )
               (branch "Exceptional Post (concatenate)"
                  (builtin "One Step Simplification" (formula "45"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "34")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,1,1,0,1,0,1,1") (ifseqformula "21"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,0,1,1,0,1,0,1,1") (ifseqformula "15"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,0,0,1,1,0,1,0,1,1") (ifseqformula "10"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,0,0,0,1,1,0,1,0,1,1") (ifseqformula "7"))
                  (rule "translateJavaAddInt" (formula "29") (term "1,1,0,1,0,1,0,1,1"))
                  (rule "translateJavaAddInt" (formula "29") (term "0,1,1,0,1,0,1,0,1,1"))
                  (rule "andLeft" (formula "29"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "1,0") (ifseqformula "29"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,1,0") (ifseqformula "21"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,1,0") (ifseqformula "15"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0,1,0") (ifseqformula "10"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0,0,1,0") (ifseqformula "7"))
                  (rule "andLeft" (formula "30"))
                  (rule "andLeft" (formula "30"))
                  (rule "andLeft" (formula "32"))
                  (rule "notLeft" (formula "30"))
                  (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "33"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "33"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "true_left" (formula "31"))
                  (rule "commute_or_2" (formula "30") (term "0,0"))
                  (rule "commute_or_2" (formula "30") (term "0"))
                  (rule "commute_or_2" (formula "30"))
                  (rule "commute_or_2" (formula "30") (term "0,0,0"))
                  (rule "commute_or_2" (formula "30") (term "0,0"))
                  (rule "commute_or_2" (formula "30") (term "0"))
                  (rule "methodCallThrow" (formula "48") (term "1"))
                  (rule "tryCatchThrow" (formula "48") (term "1"))
                  (rule "arrayLengthNotNegative" (formula "12") (term "0"))
                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                  (rule "qeq_literals" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "arrayLengthIsAShort" (formula "12") (term "0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "ifElseUnfold" (formula "48") (term "1") (inst "#boolv=x"))
                  (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_4"))
                  (rule "equality_comparison_simple" (formula "48") (term "1"))
                  (builtin "One Step Simplification" (formula "48"))
                  (rule "replace_known_right" (formula "48") (term "0,0,1,0") (ifseqformula "32"))
                  (builtin "One Step Simplification" (formula "48"))
                  (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                  (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                  (rule "mul_literals" (formula "19") (term "1"))
                  (rule "arrayLengthIsAShort" (formula "20") (term "0"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "arrayLengthIsAShort" (formula "20") (term "1,1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "arrayLengthNotNegative" (formula "20") (term "1,1"))
                  (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "19"))
                  (rule "leq_literals" (formula "20") (term "0"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "arrayLengthIsAShort" (formula "26") (term "0,1"))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "true_left" (formula "26"))
                  (rule "arrayLengthNotNegative" (formula "26") (term "0,1"))
                  (rule "arrayLengthNotNegative" (formula "27") (term "1,0,1,1"))
                  (rule "arrayLengthIsAShort" (formula "28") (term "1,0,1,1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "true_left" (formula "28"))
                  (rule "ifElseSplit" (formula "51"))
                  (branch "if x_4 true"
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if x_4 false"
                     (builtin "One Step Simplification" (formula "52"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "ifElseSplit" (formula "51"))
                     (branch "if exc_5 instanceof java.lang.Throwable true"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                        (rule "true_left" (formula "1"))
                        (rule "variableDeclaration" (formula "51") (term "1") (newnames "e_4"))
                        (rule "reference_type_cast" (formula "51") (term "1"))
                        (branch "Normal Execution (exc_5 instanceof java.lang.Throwable)"
                           (builtin "One Step Simplification" (formula "52"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "assignment" (formula "51") (term "1"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "emptyModality" (formula "51") (term "1"))
                           (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "35")))
                           (rule "instanceof_not_compatible_5" (formula "51") (term "1,0") (ifseqformula "34"))
                           (rule "instanceof_not_compatible_5" (formula "51") (term "0,0,0") (ifseqformula "34"))
                           (rule "eqSymm" (formula "51") (term "1,0,0,1"))
                           (rule "replace_known_right" (formula "51") (term "1,0") (ifseqformula "35"))
                           (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "35")))
                           (rule "cut_direct" (formula "28") (term "0,0"))
                           (branch "CUT: message = null TRUE"
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "27"))
                              (rule "cut_direct" (formula "29") (term "0,0,0,0,0"))
                              (branch "CUT: result_3 = null TRUE"
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "true_left" (formula "30"))
                                 (rule "cut_direct" (formula "32") (term "0,0,0,0,0"))
                                 (branch "CUT: exc_5.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "true_left" (formula "33"))
                                    (rule "cut_direct" (formula "50") (term "0"))
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_5) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "51"))
                                       (rule "allRight" (formula "51") (inst "sk=f_17"))
                                       (rule "allRight" (formula "51") (inst "sk=o_17"))
                                       (rule "orRight" (formula "51"))
                                       (rule "orRight" (formula "51"))
                                       (rule "orRight" (formula "51"))
                                       (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=f_17_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "23"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "16"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "11"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "8"))
                                       (rule "eqSymm" (formula "55"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_17_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "17"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "12"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "9"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_17_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "13"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "10"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_17_3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "11"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_17_4"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "56"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "commute_and" (formula "55"))
                                       (rule "commute_and" (formula "56"))
                                       (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,1,0,0"))
                                       (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,0,0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " ¬o_17 = null ∧ ¬( o_17.<created> = TRUE ∨ o_17.<created>@anon_heap_get«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "40"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")) (ifInst ""  (formula "39")))
                                          (rule "replace_known_right" (formula "3") (term "0,0,0,0,0,1,0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")) (ifInst ""  (formula "40")))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")) (ifInst ""  (formula "40")))
                                          (rule "replace_known_right" (formula "57") (term "1") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "57"))
                                          (rule "false_right" (formula "57"))
                                          (rule "replace_known_right" (formula "58") (term "0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "39")))
                                          (rule "closeTrue" (formula "58"))
                                       )
                                       (branch " ¬o_17 = null ∧ ¬( o_17.<created> = TRUE ∨ o_17.<created>@anon_heap_get«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_17 = null ∧ ¬( o_17.<created> = TRUE ∨ o_17.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_17.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "39"))
                                             (rule "orRight" (formula "39"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0,0,1,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                             (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")))
                                             (rule "replace_known_right" (formula "60") (term "0,1") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "37")))
                                             (rule "closeTrue" (formula "60"))
                                          )
                                          (branch " ¬o_17 = null ∧ ¬( o_17.<created> = TRUE ∨ o_17.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_17.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " ¬o_17 = null ∧ ¬( o_17.<created> = TRUE ∨ o_17.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_17.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_17.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "orRight" (formula "38"))
                                                (rule "orRight" (formula "38"))
                                                (rule "orRight" (formula "38"))
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0,0,0,1,0,0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "60"))
                                                (rule "false_right" (formula "60"))
                                                (rule "replace_known_right" (formula "60") (term "0,0") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "37")))
                                                (rule "closeTrue" (formula "60"))
                                             )
                                             (branch " ¬o_17 = null ∧ ¬( o_17.<created> = TRUE ∨ o_17.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_17.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_17.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch " ¬o_17 = null ∧ ¬( o_17.<created> = TRUE ∨ o_17.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_17.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_17.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_17.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "orRight" (formula "37"))
                                                   (rule "orRight" (formula "37"))
                                                   (rule "orRight" (formula "37"))
                                                   (rule "orRight" (formula "37"))
                                                   (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "eqSymm" (formula "63"))
                                                   (rule "replace_known_right" (formula "61") (term "1") (ifseqformula "35"))
                                                   (builtin "One Step Simplification" (formula "61"))
                                                   (rule "false_right" (formula "61"))
                                                   (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "35"))
                                                   (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "36")))
                                                   (rule "closeTrue" (formula "61"))
                                                )
                                                (branch " ¬o_17 = null ∧ ¬( o_17.<created> = TRUE ∨ o_17.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_17.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_17.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_17.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                   (rule "close" (formula "59") (ifseqformula "1"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_5) = TRUE FALSE"
                                       (rule "closeType" (formula "33") (ifseqformula "50"))
                                    )
                                 )
                                 (branch "CUT: exc_5.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "cut_direct" (formula "51") (term "0"))
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_5) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "52"))
                                       (rule "allRight" (formula "52") (inst "sk=f_16"))
                                       (rule "allRight" (formula "52") (inst "sk=o_16"))
                                       (rule "orRight" (formula "52"))
                                       (rule "orRight" (formula "52"))
                                       (rule "orRight" (formula "52"))
                                       (rule "pullOutSelect" (formula "55") (term "0") (inst "selectSK=f_16_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "23"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "16"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "11"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "8"))
                                       (rule "eqSymm" (formula "56"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_16_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "17"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "12"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "9"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_16_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "13"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "10"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_16_3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "11"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_16_4"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "57"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "commute_and" (formula "56"))
                                       (rule "commute_and" (formula "57"))
                                       (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,1,0,0"))
                                       (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,0,0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " ¬o_16 = null ∧ ¬( o_16.<created> = TRUE ∨ o_16.<created>@anon_heap_get«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "39"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "3") (term "1,0,0,1,0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")) (ifInst ""  (formula "38")))
                                          (rule "replace_known_right" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")) (ifInst ""  (formula "39")))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")) (ifInst ""  (formula "38")))
                                          (rule "replace_known_right" (formula "60") (term "0,0") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "38")))
                                          (rule "closeTrue" (formula "60"))
                                       )
                                       (branch " ¬o_16 = null ∧ ¬( o_16.<created> = TRUE ∨ o_16.<created>@anon_heap_get«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_16 = null ∧ ¬( o_16.<created> = TRUE ∨ o_16.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_16.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "38"))
                                             (rule "orRight" (formula "38"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")) (ifInst ""  (formula "37")) (ifInst ""  (formula "38")))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")))
                                             (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "37")))
                                             (rule "closeTrue" (formula "61"))
                                          )
                                          (branch " ¬o_16 = null ∧ ¬( o_16.<created> = TRUE ∨ o_16.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_16.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " ¬o_16 = null ∧ ¬( o_16.<created> = TRUE ∨ o_16.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_16.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_16.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "orRight" (formula "38"))
                                                (rule "orRight" (formula "38"))
                                                (rule "orRight" (formula "38"))
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_right" (formula "1") (term "1,0,0,0,0,1,0,0") (ifseqformula "38"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "37")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "replace_known_right" (formula "61") (term "1") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "61"))
                                                (rule "false_right" (formula "61"))
                                                (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "37")))
                                                (rule "closeTrue" (formula "61"))
                                             )
                                             (branch " ¬o_16 = null ∧ ¬( o_16.<created> = TRUE ∨ o_16.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_16.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_16.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch " ¬o_16 = null ∧ ¬( o_16.<created> = TRUE ∨ o_16.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_16.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_16.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_16.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "orRight" (formula "37"))
                                                   (rule "orRight" (formula "37"))
                                                   (rule "orRight" (formula "37"))
                                                   (rule "orRight" (formula "37"))
                                                   (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "eqSymm" (formula "64"))
                                                   (rule "replace_known_right" (formula "63") (term "0,0") (ifseqformula "35"))
                                                   (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "36")))
                                                   (rule "closeTrue" (formula "63"))
                                                )
                                                (branch " ¬o_16 = null ∧ ¬( o_16.<created> = TRUE ∨ o_16.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_16.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_16.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_16.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                   (rule "close" (formula "60") (ifseqformula "1"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_5) = TRUE FALSE"
                                       (rule "closeTypeSwitched" (formula "51") (ifseqformula "33"))
                                    )
                                 )
                              )
                              (branch "CUT: result_3 = null FALSE"
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "cut_direct" (formula "32") (term "0,0,0,0,0"))
                                 (branch "CUT: exc_5.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "true_left" (formula "33"))
                                    (rule "cut_direct" (formula "51") (term "0"))
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_5) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "52"))
                                       (rule "allRight" (formula "52") (inst "sk=f_15"))
                                       (rule "allRight" (formula "52") (inst "sk=o_15"))
                                       (rule "orRight" (formula "52"))
                                       (rule "orRight" (formula "52"))
                                       (rule "orRight" (formula "52"))
                                       (rule "pullOutSelect" (formula "55") (term "0") (inst "selectSK=f_15_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "23"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "16"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "11"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "8"))
                                       (rule "eqSymm" (formula "56"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_15_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "17"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "12"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "9"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_15_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "13"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "10"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_15_3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "11"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_15_4"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "57"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "commute_and" (formula "56"))
                                       (rule "commute_and" (formula "57"))
                                       (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,1,0,0"))
                                       (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,0,0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " ¬o_15 = null ∧ ¬( o_15.<created> = TRUE ∨ o_15.<created>@anon_heap_get«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "40"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "3") (term "0,0,0,0,0,1,0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")) (ifInst ""  (formula "40")))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")) (ifInst ""  (formula "39")))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")) (ifInst ""  (formula "39")))
                                          (rule "replace_known_right" (formula "60") (term "0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "39")))
                                          (rule "closeTrue" (formula "60"))
                                       )
                                       (branch " ¬o_15 = null ∧ ¬( o_15.<created> = TRUE ∨ o_15.<created>@anon_heap_get«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_15 = null ∧ ¬( o_15.<created> = TRUE ∨ o_15.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_15.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "39"))
                                             (rule "orRight" (formula "39"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0,0,1,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                             (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "38")))
                                             (rule "closeTrue" (formula "61"))
                                          )
                                          (branch " ¬o_15 = null ∧ ¬( o_15.<created> = TRUE ∨ o_15.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_15.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " ¬o_15 = null ∧ ¬( o_15.<created> = TRUE ∨ o_15.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_15.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_15.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "orRight" (formula "37"))
                                                (rule "orRight" (formula "37"))
                                                (rule "orRight" (formula "37"))
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "39"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")) (ifInst ""  (formula "36")) (ifInst ""  (formula "37")) (ifInst ""  (formula "38")))
                                                (rule "replace_known_right" (formula "62") (term "0,1") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "40")))
                                                (rule "closeTrue" (formula "62"))
                                             )
                                             (branch " ¬o_15 = null ∧ ¬( o_15.<created> = TRUE ∨ o_15.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_15.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_15.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch " ¬o_15 = null ∧ ¬( o_15.<created> = TRUE ∨ o_15.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_15.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_15.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_15.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "orRight" (formula "36"))
                                                   (rule "orRight" (formula "36"))
                                                   (rule "orRight" (formula "36"))
                                                   (rule "orRight" (formula "36"))
                                                   (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "eqSymm" (formula "64"))
                                                   (rule "replace_known_right" (formula "63") (term "0,0") (ifseqformula "40"))
                                                   (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "35")))
                                                   (rule "closeTrue" (formula "63"))
                                                )
                                                (branch " ¬o_15 = null ∧ ¬( o_15.<created> = TRUE ∨ o_15.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_15.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_15.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_15.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                   (rule "close" (formula "60") (ifseqformula "1"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_5) = TRUE FALSE"
                                       (rule "closeType" (formula "33") (ifseqformula "51"))
                                    )
                                 )
                                 (branch "CUT: exc_5.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "cut_direct" (formula "52") (term "0"))
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_5) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "53"))
                                       (rule "allRight" (formula "53") (inst "sk=f_14"))
                                       (rule "allRight" (formula "53") (inst "sk=o_14"))
                                       (rule "orRight" (formula "53"))
                                       (rule "orRight" (formula "53"))
                                       (rule "orRight" (formula "53"))
                                       (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=f_14_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "23"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "16"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "11"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "8"))
                                       (rule "eqSymm" (formula "57"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_14_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "17"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "12"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "9"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_14_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "13"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "10"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_14_3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "11"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_14_4"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "58"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "commute_and" (formula "58"))
                                       (rule "commute_and" (formula "57"))
                                       (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,1,0,0"))
                                       (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,0,0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " ¬o_14 = null ∧ ¬( o_14.<created> = TRUE ∨ o_14.<created>@anon_heap_get«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "40"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")) (ifInst ""  (formula "39")))
                                          (rule "replace_known_right" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")) (ifInst ""  (formula "40")))
                                          (rule "replace_known_right" (formula "3") (term "0,0,0,0,0,1,0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")) (ifInst ""  (formula "40")))
                                          (rule "replace_known_right" (formula "59") (term "1") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "false_right" (formula "59"))
                                          (rule "replace_known_right" (formula "59") (term "1") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "false_right" (formula "59"))
                                          (rule "replace_known_right" (formula "59") (term "0,1") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "38")))
                                          (rule "closeTrue" (formula "59"))
                                       )
                                       (branch " ¬o_14 = null ∧ ¬( o_14.<created> = TRUE ∨ o_14.<created>@anon_heap_get«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_14 = null ∧ ¬( o_14.<created> = TRUE ∨ o_14.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_14.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "39"))
                                             (rule "orRight" (formula "39"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,1,0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                             (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "60"))
                                             (rule "false_right" (formula "60"))
                                             (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "38")))
                                             (rule "closeTrue" (formula "61"))
                                          )
                                          (branch " ¬o_14 = null ∧ ¬( o_14.<created> = TRUE ∨ o_14.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_14.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " ¬o_14 = null ∧ ¬( o_14.<created> = TRUE ∨ o_14.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_14.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_14.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "orRight" (formula "38"))
                                                (rule "orRight" (formula "38"))
                                                (rule "orRight" (formula "38"))
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "39"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "37")) (ifInst ""  (formula "38")) (ifInst ""  (formula "40")))
                                                (rule "replace_known_right" (formula "63") (term "0,0") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "37")))
                                                (rule "closeTrue" (formula "63"))
                                             )
                                             (branch " ¬o_14 = null ∧ ¬( o_14.<created> = TRUE ∨ o_14.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_14.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_14.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch " ¬o_14 = null ∧ ¬( o_14.<created> = TRUE ∨ o_14.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_14.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_14.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_14.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "orRight" (formula "37"))
                                                   (rule "orRight" (formula "37"))
                                                   (rule "orRight" (formula "37"))
                                                   (rule "orRight" (formula "37"))
                                                   (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "eqSymm" (formula "65"))
                                                   (rule "replace_known_right" (formula "62") (term "1") (ifseqformula "35"))
                                                   (builtin "One Step Simplification" (formula "62"))
                                                   (rule "false_right" (formula "62"))
                                                   (rule "replace_known_right" (formula "63") (term "0,0") (ifseqformula "35"))
                                                   (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "36")))
                                                   (rule "closeTrue" (formula "63"))
                                                )
                                                (branch " ¬o_14 = null ∧ ¬( o_14.<created> = TRUE ∨ o_14.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_14.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_14.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_14.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                   (rule "close" (formula "61") (ifseqformula "1"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_5) = TRUE FALSE"
                                       (rule "closeType" (formula "33") (ifseqformula "52"))
                                    )
                                 )
                              )
                           )
                           (branch "CUT: message = null FALSE"
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "35"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEq" (formula "26") (term "0") (ifseqformula "28"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1"))
                              (rule "polySimp_rightDist" (formula "26") (term "1"))
                              (rule "mul_literals" (formula "26") (term "0,1"))
                              (rule "cut_direct" (formula "30") (term "0,0,0,0,0"))
                              (branch "CUT: result_3 = null TRUE"
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "true_left" (formula "31"))
                                 (rule "cut_direct" (formula "33") (term "0,0,0,0,0"))
                                 (branch "CUT: exc_5.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "true_left" (formula "34"))
                                    (rule "cut_direct" (formula "52") (term "0"))
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_5) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "53"))
                                       (rule "allRight" (formula "53") (inst "sk=f_13"))
                                       (rule "allRight" (formula "53") (inst "sk=o_13"))
                                       (rule "orRight" (formula "53"))
                                       (rule "orRight" (formula "53"))
                                       (rule "orRight" (formula "53"))
                                       (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=f_13_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "24"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "17"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "12"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "9"))
                                       (rule "eqSymm" (formula "57"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_13_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "18"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "13"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "10"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_13_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "11"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_13_3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "12"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_13_4"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "58"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "commute_and" (formula "58"))
                                       (rule "commute_and" (formula "57"))
                                       (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,1,0,0"))
                                       (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,0,0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_get«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "41"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "41"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "41"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                          (rule "replace_known_right" (formula "60") (term "1") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "60"))
                                          (rule "false_right" (formula "60"))
                                          (rule "replace_known_right" (formula "59") (term "1") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "false_right" (formula "59"))
                                          (rule "replace_known_right" (formula "59") (term "0,1") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "39")))
                                          (rule "closeTrue" (formula "59"))
                                       )
                                       (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_get«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_13.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "40"))
                                             (rule "orRight" (formula "40"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,1,0,0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                             (rule "replace_known_right" (formula "62") (term "0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "39")))
                                             (rule "closeTrue" (formula "62"))
                                          )
                                          (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_13.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_13.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_13.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "orRight" (formula "38"))
                                                (rule "orRight" (formula "38"))
                                                (rule "orRight" (formula "38"))
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_right" (formula "1") (term "1,0,0,0,0,1,0,0") (ifseqformula "38"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")) (ifInst ""  (formula "37")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                                (rule "replace_known_right" (formula "63") (term "0,1") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "41")))
                                                (rule "closeTrue" (formula "63"))
                                             )
                                             (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_13.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_13.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_13.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_13.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_13.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "orRight" (formula "38"))
                                                   (rule "orRight" (formula "38"))
                                                   (rule "orRight" (formula "38"))
                                                   (rule "orRight" (formula "38"))
                                                   (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "eqSymm" (formula "65"))
                                                   (rule "replace_known_right" (formula "62") (term "1") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "62"))
                                                   (rule "false_right" (formula "62"))
                                                   (rule "replace_known_right" (formula "62") (term "1") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "62"))
                                                   (rule "false_right" (formula "62"))
                                                   (rule "replace_known_right" (formula "62") (term "0,1") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "36")))
                                                   (rule "closeTrue" (formula "62"))
                                                )
                                                (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_13.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_13.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_13.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                   (rule "close" (formula "61") (ifseqformula "1"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_5) = TRUE FALSE"
                                       (rule "closeTypeSwitched" (formula "52") (ifseqformula "34"))
                                    )
                                 )
                                 (branch "CUT: exc_5.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "cut_direct" (formula "53") (term "0"))
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_5) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "allRight" (formula "54") (inst "sk=f_12"))
                                       (rule "allRight" (formula "54") (inst "sk=o_12"))
                                       (rule "orRight" (formula "54"))
                                       (rule "orRight" (formula "54"))
                                       (rule "orRight" (formula "54"))
                                       (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=f_12_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "24"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "17"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "12"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "9"))
                                       (rule "eqSymm" (formula "58"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_12_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "18"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "13"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "10"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_12_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "11"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_12_3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "12"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_12_4"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "59"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "commute_and" (formula "58"))
                                       (rule "commute_and" (formula "59"))
                                       (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,1,0,0"))
                                       (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,0,0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_get«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "41"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "41"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                          (rule "replace_known_right" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")) (ifInst ""  (formula "41")))
                                          (rule "replace_known_right" (formula "3") (term "1,0,0,1,0,0") (ifseqformula "41"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                          (rule "replace_known_right" (formula "62") (term "0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "40")))
                                          (rule "closeTrue" (formula "62"))
                                       )
                                       (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_get«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_12.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "40"))
                                             (rule "orRight" (formula "40"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0,0,1,0,0") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "41")))
                                             (rule "replace_known_right" (formula "63") (term "0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "39")))
                                             (rule "closeTrue" (formula "63"))
                                          )
                                          (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_12.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_12.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_12.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "orRight" (formula "39"))
                                                (rule "orRight" (formula "39"))
                                                (rule "orRight" (formula "39"))
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                                (rule "replace_known_right" (formula "62") (term "1") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "62"))
                                                (rule "false_right" (formula "62"))
                                                (rule "replace_known_right" (formula "62") (term "1") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "62"))
                                                (rule "false_right" (formula "62"))
                                                (rule "replace_known_right" (formula "62") (term "0,0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "38")))
                                                (rule "closeTrue" (formula "62"))
                                             )
                                             (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_12.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_12.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_12.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_12.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_12.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "orRight" (formula "37"))
                                                   (rule "orRight" (formula "37"))
                                                   (rule "orRight" (formula "37"))
                                                   (rule "orRight" (formula "37"))
                                                   (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "eqSymm" (formula "66"))
                                                   (rule "replace_known_right" (formula "65") (term "0,1") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "41")))
                                                   (rule "closeTrue" (formula "65"))
                                                )
                                                (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_12.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_12.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_12.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                   (rule "close" (formula "62") (ifseqformula "1"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_5) = TRUE FALSE"
                                       (rule "closeTypeSwitched" (formula "53") (ifseqformula "34"))
                                    )
                                 )
                              )
                              (branch "CUT: result_3 = null FALSE"
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "cut_direct" (formula "33") (term "0,0,0,0,0"))
                                 (branch "CUT: exc_5.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "true_left" (formula "34"))
                                    (rule "cut_direct" (formula "53") (term "0"))
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_5) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "allRight" (formula "54") (inst "sk=f_11"))
                                       (rule "allRight" (formula "54") (inst "sk=o_11"))
                                       (rule "orRight" (formula "54"))
                                       (rule "orRight" (formula "54"))
                                       (rule "orRight" (formula "54"))
                                       (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=f_11_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "24"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "17"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "12"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "9"))
                                       (rule "eqSymm" (formula "58"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_11_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "18"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "13"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "10"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_11_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "11"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_11_3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "12"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_11_4"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "59"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "commute_and" (formula "59"))
                                       (rule "commute_and" (formula "58"))
                                       (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,1,0,0"))
                                       (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,0,0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " ¬o_11 = null ∧ ¬( o_11.<created> = TRUE ∨ o_11.<created>@anon_heap_get«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "41"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "3") (term "1,0,0,1,0,0") (ifseqformula "41"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "41"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "41")))
                                          (rule "replace_known_right" (formula "62") (term "0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "40")))
                                          (rule "closeTrue" (formula "62"))
                                       )
                                       (branch " ¬o_11 = null ∧ ¬( o_11.<created> = TRUE ∨ o_11.<created>@anon_heap_get«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_11 = null ∧ ¬( o_11.<created> = TRUE ∨ o_11.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_11.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "39"))
                                             (rule "orRight" (formula "39"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")) (ifInst ""  (formula "38")) (ifInst ""  (formula "40")))
                                             (rule "replace_known_right" (formula "62") (term "1") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "62"))
                                             (rule "false_right" (formula "62"))
                                             (rule "replace_known_right" (formula "61") (term "1") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "61"))
                                             (rule "false_right" (formula "61"))
                                             (rule "replace_known_right" (formula "61") (term "0,1") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "41")))
                                             (rule "closeTrue" (formula "61"))
                                          )
                                          (branch " ¬o_11 = null ∧ ¬( o_11.<created> = TRUE ∨ o_11.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_11.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " ¬o_11 = null ∧ ¬( o_11.<created> = TRUE ∨ o_11.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_11.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_11.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "orRight" (formula "39"))
                                                (rule "orRight" (formula "39"))
                                                (rule "orRight" (formula "39"))
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                                (rule "replace_known_right" (formula "62") (term "1") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "62"))
                                                (rule "false_right" (formula "62"))
                                                (rule "replace_known_right" (formula "63") (term "0,0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "38")))
                                                (rule "closeTrue" (formula "63"))
                                             )
                                             (branch " ¬o_11 = null ∧ ¬( o_11.<created> = TRUE ∨ o_11.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_11.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_11.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch " ¬o_11 = null ∧ ¬( o_11.<created> = TRUE ∨ o_11.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_11.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_11.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_11.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "orRight" (formula "37"))
                                                   (rule "orRight" (formula "37"))
                                                   (rule "orRight" (formula "37"))
                                                   (rule "orRight" (formula "37"))
                                                   (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "eqSymm" (formula "66"))
                                                   (rule "replace_known_right" (formula "65") (term "0,1") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "41")))
                                                   (rule "closeTrue" (formula "65"))
                                                )
                                                (branch " ¬o_11 = null ∧ ¬( o_11.<created> = TRUE ∨ o_11.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_11.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_11.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_11.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                   (rule "close" (formula "62") (ifseqformula "1"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_5) = TRUE FALSE"
                                       (rule "closeTypeSwitched" (formula "53") (ifseqformula "34"))
                                    )
                                 )
                                 (branch "CUT: exc_5.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "cut_direct" (formula "54") (term "0"))
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_5) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "55"))
                                       (rule "allRight" (formula "55") (inst "sk=f_10"))
                                       (rule "allRight" (formula "55") (inst "sk=o_10"))
                                       (rule "orRight" (formula "55"))
                                       (rule "orRight" (formula "55"))
                                       (rule "orRight" (formula "55"))
                                       (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=f_10_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "24"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "17"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "12"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "9"))
                                       (rule "eqSymm" (formula "59"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_10_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "18"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "13"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "10"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_10_2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "11"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_10_3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "12"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_10_4"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "60"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "commute_and" (formula "60"))
                                       (rule "commute_and" (formula "59"))
                                       (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,1,0,0"))
                                       (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,0,0,1,0,0"))
                                       (rule "commute_or_2" (formula "4") (term "0,0,1,0,0"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " ¬o_10 = null ∧ ¬( o_10.<created> = TRUE ∨ o_10.<created>@anon_heap_get«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "41"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "3") (term "0,0,0,0,0,1,0,0") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")) (ifInst ""  (formula "41")))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                          (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                          (rule "replace_known_right" (formula "62") (term "1") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "62"))
                                          (rule "false_right" (formula "62"))
                                          (rule "replace_known_right" (formula "62") (term "0,1") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "39")))
                                          (rule "closeTrue" (formula "62"))
                                       )
                                       (branch " ¬o_10 = null ∧ ¬( o_10.<created> = TRUE ∨ o_10.<created>@anon_heap_get«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_10 = null ∧ ¬( o_10.<created> = TRUE ∨ o_10.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_10.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "40"))
                                             (rule "orRight" (formula "40"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "41")))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                             (rule "replace_known_right" (formula "62") (term "1") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "62"))
                                             (rule "false_right" (formula "62"))
                                             (rule "replace_known_right" (formula "63") (term "0,1") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "38")))
                                             (rule "closeTrue" (formula "63"))
                                          )
                                          (branch " ¬o_10 = null ∧ ¬( o_10.<created> = TRUE ∨ o_10.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_10.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " ¬o_10 = null ∧ ¬( o_10.<created> = TRUE ∨ o_10.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_10.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_10.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "orRight" (formula "39"))
                                                (rule "orRight" (formula "39"))
                                                (rule "orRight" (formula "39"))
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0,0,0,1,0,0") (ifseqformula "38"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                                (rule "replace_known_right" (formula "63") (term "1") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "false_right" (formula "63"))
                                                (rule "replace_known_right" (formula "63") (term "1") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "false_right" (formula "63"))
                                                (rule "replace_known_right" (formula "63") (term "0,0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "38")))
                                                (rule "closeTrue" (formula "63"))
                                             )
                                             (branch " ¬o_10 = null ∧ ¬( o_10.<created> = TRUE ∨ o_10.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_10.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_10.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch " ¬o_10 = null ∧ ¬( o_10.<created> = TRUE ∨ o_10.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_10.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_10.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_10.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "orRight" (formula "37"))
                                                   (rule "orRight" (formula "37"))
                                                   (rule "orRight" (formula "37"))
                                                   (rule "orRight" (formula "37"))
                                                   (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "eqSymm" (formula "67"))
                                                   (rule "replace_known_right" (formula "66") (term "0,1") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "41")))
                                                   (rule "closeTrue" (formula "66"))
                                                )
                                                (branch " ¬o_10 = null ∧ ¬( o_10.<created> = TRUE ∨ o_10.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_10.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_10.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_10.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                                   (rule "close" (formula "63") (ifseqformula "1"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: java.lang.RuntimeException::instance(exc_5) = TRUE FALSE"
                                       (rule "closeTypeSwitched" (formula "54") (ifseqformula "34"))
                                    )
                                 )
                              )
                           )
                        )
                        (branch "ClassCastException (!(exc_5 instanceof java.lang.Throwable))"
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "closeTrue" (formula "51"))
                        )
                     )
                     (branch "if exc_5 instanceof java.lang.Throwable false"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "Pre (concatenate)"
                  (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "32")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "1,1") (ifseqformula "21"))
                  (rule "wellFormedAnonEQ" (formula "43") (term "0,0") (ifseqformula "21"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "1,0") (ifseqformula "21"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,1,1") (ifseqformula "15"))
                  (rule "wellFormedAnonEQ" (formula "43") (term "0,0,0") (ifseqformula "15"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,1,0") (ifseqformula "15"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,1,1") (ifseqformula "10"))
                  (rule "wellFormedAnonEQ" (formula "43") (term "0,0,0,0") (ifseqformula "10"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,1,0") (ifseqformula "10"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,1,1") (ifseqformula "7"))
                  (rule "wellFormedAnonEQ" (formula "43") (term "0,0,0,0,0") (ifseqformula "7"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0,1,0") (ifseqformula "7"))
                  (rule "replace_known_left" (formula "43") (term "1,0,0") (ifseqformula "20"))
                  (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "9")) (ifInst ""  (formula "14")) (ifInst ""  (formula "28")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")) (ifInst ""  (formula "23")))
                  (rule "orRight" (formula "43"))
                  (rule "orRight" (formula "44"))
                  (rule "orRight" (formula "44"))
                  (rule "orRight" (formula "44"))
                  (rule "orRight" (formula "44"))
                  (rule "replace_known_right" (formula "27") (term "1,0") (ifseqformula "45"))
                  (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "43")) (ifInst ""  (formula "44")) (ifInst ""  (formula "47")) (ifInst ""  (formula "48")) (ifInst ""  (formula "46")))
                  (rule "closeFalse" (formula "27"))
               )
            )
            (branch "Exceptional Post (sign)"
               (builtin "One Step Simplification" (formula "42"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1,0") (ifseqformula "21"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1,0") (ifseqformula "15"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,1,0") (ifseqformula "10"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,0,1,0") (ifseqformula "7"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "notLeft" (formula "26"))
               (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "28"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "commute_or_2" (formula "26") (term "0"))
               (rule "commute_or_2" (formula "26"))
               (rule "commute_or_2" (formula "26") (term "0,0"))
               (rule "commute_or_2" (formula "26") (term "0"))
               (rule "methodCallThrow" (formula "44") (term "1"))
               (builtin "One Step Simplification" (formula "44"))
               (rule "tryCatchThrow" (formula "44") (term "1"))
               (rule "arrayLengthIsAShort" (formula "12") (term "0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "arrayLengthNotNegative" (formula "12") (term "0"))
               (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
               (rule "qeq_literals" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "ifElseUnfold" (formula "44") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "44") (term "1") (newnames "x_3"))
               (rule "equality_comparison_simple" (formula "44") (term "1"))
               (builtin "One Step Simplification" (formula "44"))
               (rule "replace_known_right" (formula "44") (term "0,0,1,0") (ifseqformula "28"))
               (builtin "One Step Simplification" (formula "44"))
               (rule "arrayLengthIsAShort" (formula "19") (term "0"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "true_left" (formula "19"))
               (rule "arrayLengthNotNegative" (formula "19") (term "0"))
               (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
               (rule "inEqSimp_sepPosMonomial1" (formula "19"))
               (rule "mul_literals" (formula "19") (term "1"))
               (rule "arrayLengthIsAShort" (formula "20") (term "1,1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "arrayLengthNotNegative" (formula "20") (term "1,1"))
               (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "19"))
               (rule "leq_literals" (formula "20") (term "0"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "ifElseSplit" (formula "45"))
               (branch "if x_3 true"
                  (builtin "One Step Simplification" (formula "46"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if x_3 false"
                  (builtin "One Step Simplification" (formula "46"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "arrayLengthIsAShort" (formula "26") (term "0,1"))
                  (builtin "One Step Simplification" (formula "26"))
                  (rule "true_left" (formula "26"))
                  (rule "arrayLengthNotNegative" (formula "26") (term "0,1"))
                  (rule "arrayLengthNotNegative" (formula "27") (term "1,0,1,1"))
                  (rule "arrayLengthIsAShort" (formula "28") (term "1,0,1,1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "true_left" (formula "28"))
                  (rule "ifElseSplit" (formula "47"))
                  (branch "if exc_4 instanceof java.lang.Throwable true"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                     (rule "true_left" (formula "1"))
                     (rule "variableDeclaration" (formula "47") (term "1") (newnames "e_3"))
                     (rule "reference_type_cast" (formula "47") (term "1"))
                     (branch "Normal Execution (exc_4 instanceof java.lang.Throwable)"
                        (builtin "One Step Simplification" (formula "48"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "assignment" (formula "47") (term "1"))
                        (builtin "One Step Simplification" (formula "47"))
                        (rule "emptyModality" (formula "47") (term "1"))
                        (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "31")) (ifInst ""  (formula "30")))
                        (rule "allRight" (formula "47") (inst "sk=f_9"))
                        (rule "allRight" (formula "47") (inst "sk=o_9"))
                        (rule "orRight" (formula "47"))
                        (rule "orRight" (formula "47"))
                        (rule "orRight" (formula "47"))
                        (rule "eqSymm" (formula "50"))
                        (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=f_9_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "16"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "11"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "8"))
                        (rule "eqSymm" (formula "51"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_9_1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "12"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "9"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_9_2"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "10"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_9_3"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "51"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "commute_and" (formula "50"))
                        (rule "commute_and" (formula "51"))
                        (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                        (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch " ¬o_9 = null ∧ ¬( o_9.<created> = TRUE ∨ o_9.<created>@anon_heap_get«anonHeapFunction» = TRUE) TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "2"))
                           (rule "notLeft" (formula "1"))
                           (rule "orRight" (formula "35"))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "35"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "34")))
                           (rule "replace_known_right" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "34"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "33")) (ifInst ""  (formula "35")))
                           (rule "replace_known_right" (formula "54") (term "0,1") (ifseqformula "34"))
                           (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "33")))
                           (rule "closeTrue" (formula "54"))
                        )
                        (branch " ¬o_9 = null ∧ ¬( o_9.<created> = TRUE ∨ o_9.<created>@anon_heap_get«anonHeapFunction» = TRUE) FALSE"
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch " ¬o_9 = null ∧ ¬( o_9.<created> = TRUE ∨ o_9.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_9.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "orRight" (formula "33"))
                              (rule "orRight" (formula "33"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "34"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")))
                              (rule "replace_known_right" (formula "55") (term "0,0") (ifseqformula "35"))
                              (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "32")))
                              (rule "closeTrue" (formula "55"))
                           )
                           (branch " ¬o_9 = null ∧ ¬( o_9.<created> = TRUE ∨ o_9.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_9.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch " ¬o_9 = null ∧ ¬( o_9.<created> = TRUE ∨ o_9.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_9.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_9.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "orRight" (formula "32"))
                                 (rule "orRight" (formula "32"))
                                 (rule "orRight" (formula "32"))
                                 (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "eqSymm" (formula "57"))
                                 (rule "replace_known_right" (formula "56") (term "0,0") (ifseqformula "35"))
                                 (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "31")))
                                 (rule "closeTrue" (formula "56"))
                              )
                              (branch " ¬o_9 = null ∧ ¬( o_9.<created> = TRUE ∨ o_9.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_9.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_9.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                 (rule "close" (formula "54") (ifseqformula "1"))
                              )
                           )
                        )
                     )
                     (branch "ClassCastException (!(exc_4 instanceof java.lang.Throwable))"
                        (builtin "One Step Simplification" (formula "47"))
                        (rule "closeTrue" (formula "47"))
                     )
                  )
                  (branch "if exc_4 instanceof java.lang.Throwable false"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
            (branch "Pre (sign)"
               (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "30")) (ifInst ""  (formula "30")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "1") (ifseqformula "21"))
               (rule "wellFormedAnonEQ" (formula "41") (term "0") (ifseqformula "21"))
               (rule "wellFormedAnonEQ" (formula "41") (term "0,0") (ifseqformula "15"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,1") (ifseqformula "15"))
               (rule "wellFormedAnonEQ" (formula "41") (term "0,0,0") (ifseqformula "10"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,0,1") (ifseqformula "10"))
               (rule "wellFormedAnonEQ" (formula "41") (term "0,0,0,0") (ifseqformula "7"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,0,0,1") (ifseqformula "7"))
               (rule "replace_known_right" (formula "41") (term "1,0,1") (ifseqformula "29"))
               (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "9")) (ifInst ""  (formula "14")) (ifInst ""  (formula "20")) (ifInst ""  (formula "26")) (ifInst ""  (formula "27")) (ifInst ""  (formula "28")) (ifInst ""  (formula "23")))
               (rule "closeTrue" (formula "41"))
            )
            (branch "Null reference (_signer = null)"
               (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "38")))
               (rule "closeTrue" (formula "41"))
            )
         )
         (branch "Exceptional Post (concatenate)"
            (builtin "One Step Simplification" (formula "32"))
            (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "25")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,1,1,0,1,0,1,1") (ifseqformula "15"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,0,1,1,0,1,0,1,1") (ifseqformula "10"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,0,0,1,1,0,1,0,1,1") (ifseqformula "7"))
            (rule "translateJavaAddInt" (formula "21") (term "1,1,0,1,0,1,0,1,1"))
            (rule "translateJavaAddInt" (formula "21") (term "0,1,1,0,1,0,1,0,1,1"))
            (rule "andLeft" (formula "21"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1,0") (ifseqformula "21"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,1,0") (ifseqformula "15"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,0,1,0") (ifseqformula "10"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,0,0,1,0") (ifseqformula "7"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "22"))
            (rule "notLeft" (formula "22"))
            (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "25"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "25"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "true_left" (formula "23"))
            (rule "commute_or_2" (formula "22") (term "0"))
            (rule "commute_or_2" (formula "22"))
            (rule "commute_or_2" (formula "22") (term "0,0"))
            (rule "commute_or_2" (formula "22") (term "0"))
            (rule "methodCallThrow" (formula "35") (term "1"))
            (builtin "One Step Simplification" (formula "35"))
            (rule "tryCatchThrow" (formula "35") (term "1"))
            (rule "ifElseUnfold" (formula "35") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "35") (term "1") (newnames "x_2"))
            (rule "equality_comparison_simple" (formula "35") (term "1"))
            (builtin "One Step Simplification" (formula "35"))
            (rule "replace_known_right" (formula "35") (term "0,0,1,0") (ifseqformula "24"))
            (builtin "One Step Simplification" (formula "35"))
            (rule "arrayLengthIsAShort" (formula "12") (term "0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "arrayLengthNotNegative" (formula "12") (term "0"))
            (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
            (rule "qeq_literals" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "ifElseSplit" (formula "35"))
            (branch "if x_2 true"
               (builtin "One Step Simplification" (formula "36"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_2 false"
               (builtin "One Step Simplification" (formula "36"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "ifElseSplit" (formula "35"))
               (branch "if exc_3 instanceof java.lang.Throwable true"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclaration" (formula "35") (term "1") (newnames "e_2"))
                  (rule "reference_type_cast" (formula "35") (term "1"))
                  (branch "Normal Execution (exc_3 instanceof java.lang.Throwable)"
                     (builtin "One Step Simplification" (formula "36"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "assignment" (formula "35") (term "1"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "emptyModality" (formula "35") (term "1"))
                     (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "24")))
                     (rule "instanceof_not_compatible_5" (formula "35") (term "1,0") (ifseqformula "23"))
                     (rule "instanceof_not_compatible_5" (formula "35") (term "0,0,0") (ifseqformula "23"))
                     (rule "eqSymm" (formula "35") (term "1,0,0,1"))
                     (rule "replace_known_right" (formula "35") (term "1,0") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "24")))
                     (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                     (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                     (rule "mul_literals" (formula "19") (term "1"))
                     (rule "arrayLengthIsAShort" (formula "20") (term "0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "true_left" (formula "20"))
                     (rule "arrayLengthIsAShort" (formula "20") (term "1,1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "true_left" (formula "20"))
                     (rule "arrayLengthNotNegative" (formula "20") (term "1,1"))
                     (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "19"))
                     (rule "leq_literals" (formula "20") (term "0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "true_left" (formula "20"))
                     (rule "cut_direct" (formula "3") (term "0"))
                     (branch "CUT: message = null TRUE"
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "cut_direct" (formula "23") (term "0,0,0,0"))
                        (branch "CUT: exc_3.<created> = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "cut_direct" (formula "36") (term "0"))
                           (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "allRight" (formula "37") (inst "sk=f_8"))
                              (rule "allRight" (formula "37") (inst "sk=o_8"))
                              (rule "orRight" (formula "37"))
                              (rule "orRight" (formula "37"))
                              (rule "orRight" (formula "37"))
                              (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=f_8_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "17"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "12"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "9"))
                              (rule "eqSymm" (formula "41"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_8_1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "13"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "10"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_8_2"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "11"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_8_3"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "41"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "commute_and" (formula "40"))
                              (rule "commute_and" (formula "41"))
                              (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                              (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch " ¬o_8 = null ∧ ¬( o_8.<created> = TRUE ∨ o_8.<created>@anon_heap_get«anonHeapFunction» = TRUE) TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "orRight" (formula "29"))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "30")) (ifInst ""  (formula "28")))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")) (ifInst ""  (formula "28")))
                                 (rule "replace_known_right" (formula "44") (term "0,0") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "28")))
                                 (rule "closeTrue" (formula "44"))
                              )
                              (branch " ¬o_8 = null ∧ ¬( o_8.<created> = TRUE ∨ o_8.<created>@anon_heap_get«anonHeapFunction» = TRUE) FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_8 = null ∧ ¬( o_8.<created> = TRUE ∨ o_8.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_8.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "28"))
                                    (rule "orRight" (formula "28"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")) (ifInst ""  (formula "27")) (ifInst ""  (formula "28")))
                                    (rule "replace_known_right" (formula "45") (term "0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "27")))
                                    (rule "closeTrue" (formula "45"))
                                 )
                                 (branch " ¬o_8 = null ∧ ¬( o_8.<created> = TRUE ∨ o_8.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_8.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " ¬o_8 = null ∧ ¬( o_8.<created> = TRUE ∨ o_8.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_8.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_8.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "orRight" (formula "28"))
                                       (rule "orRight" (formula "28"))
                                       (rule "orRight" (formula "28"))
                                       (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "47"))
                                       (rule "replace_known_right" (formula "46") (term "0,1") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "26")))
                                       (rule "closeTrue" (formula "46"))
                                    )
                                    (branch " ¬o_8 = null ∧ ¬( o_8.<created> = TRUE ∨ o_8.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_8.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_8.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                       (rule "close" (formula "44") (ifseqformula "1"))
                                    )
                                 )
                              )
                           )
                           (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE FALSE"
                              (rule "closeTypeSwitched" (formula "36") (ifseqformula "24"))
                           )
                        )
                        (branch "CUT: exc_3.<created> = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "cut_direct" (formula "37") (term "0"))
                           (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "38"))
                              (rule "allRight" (formula "38") (inst "sk=f_7"))
                              (rule "allRight" (formula "38") (inst "sk=o_7"))
                              (rule "orRight" (formula "38"))
                              (rule "orRight" (formula "38"))
                              (rule "orRight" (formula "38"))
                              (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=f_7_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "17"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "12"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "9"))
                              (rule "eqSymm" (formula "42"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_7_1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "13"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "10"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_7_2"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "11"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_7_3"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "42"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "commute_and" (formula "42"))
                              (rule "commute_and" (formula "41"))
                              (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                              (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch " ¬o_7 = null ∧ ¬( o_7.<created> = TRUE ∨ o_7.<created>@anon_heap_get«anonHeapFunction» = TRUE) TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "orRight" (formula "29"))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "30")) (ifInst ""  (formula "28")))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")) (ifInst ""  (formula "29")))
                                 (rule "replace_known_right" (formula "44") (term "1") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "false_right" (formula "44"))
                                 (rule "replace_known_right" (formula "44") (term "0,0") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "28")))
                                 (rule "closeTrue" (formula "44"))
                              )
                              (branch " ¬o_7 = null ∧ ¬( o_7.<created> = TRUE ∨ o_7.<created>@anon_heap_get«anonHeapFunction» = TRUE) FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_7 = null ∧ ¬( o_7.<created> = TRUE ∨ o_7.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_7.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "29"))
                                    (rule "orRight" (formula "29"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")) (ifInst ""  (formula "28")) (ifInst ""  (formula "29")))
                                    (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "false_right" (formula "45"))
                                    (rule "replace_known_right" (formula "45") (term "0,0") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "28")))
                                    (rule "closeTrue" (formula "45"))
                                 )
                                 (branch " ¬o_7 = null ∧ ¬( o_7.<created> = TRUE ∨ o_7.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_7.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " ¬o_7 = null ∧ ¬( o_7.<created> = TRUE ∨ o_7.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_7.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_7.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "orRight" (formula "28"))
                                       (rule "orRight" (formula "28"))
                                       (rule "orRight" (formula "28"))
                                       (rule "applyEqReverse" (formula "49") (term "1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "48"))
                                       (rule "replace_known_right" (formula "47") (term "0,0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "27")))
                                       (rule "closeTrue" (formula "47"))
                                    )
                                    (branch " ¬o_7 = null ∧ ¬( o_7.<created> = TRUE ∨ o_7.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_7.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_7.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                       (rule "close" (formula "45") (ifseqformula "1"))
                                    )
                                 )
                              )
                           )
                           (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE FALSE"
                              (rule "closeTypeSwitched" (formula "37") (ifseqformula "24"))
                           )
                        )
                     )
                     (branch "CUT: message = null FALSE"
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "cut_direct" (formula "23") (term "0,0,0,0"))
                        (branch "CUT: exc_3.<created> = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "cut_direct" (formula "37") (term "0"))
                           (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "38"))
                              (rule "allRight" (formula "38") (inst "sk=f_6"))
                              (rule "allRight" (formula "38") (inst "sk=o_6"))
                              (rule "orRight" (formula "38"))
                              (rule "orRight" (formula "38"))
                              (rule "orRight" (formula "38"))
                              (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=f_6_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "17"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "12"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "9"))
                              (rule "eqSymm" (formula "42"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_6_1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "13"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "10"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_6_2"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "11"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_6_3"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "42"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "commute_and" (formula "42"))
                              (rule "commute_and" (formula "41"))
                              (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                              (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch " ¬o_6 = null ∧ ¬( o_6.<created> = TRUE ∨ o_6.<created>@anon_heap_get«anonHeapFunction» = TRUE) TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "orRight" (formula "29"))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "28")) (ifInst ""  (formula "29")))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "28"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")) (ifInst ""  (formula "29")))
                                 (rule "replace_known_right" (formula "45") (term "0,0") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "28")))
                                 (rule "closeTrue" (formula "45"))
                              )
                              (branch " ¬o_6 = null ∧ ¬( o_6.<created> = TRUE ∨ o_6.<created>@anon_heap_get«anonHeapFunction» = TRUE) FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_6 = null ∧ ¬( o_6.<created> = TRUE ∨ o_6.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_6.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "29"))
                                    (rule "orRight" (formula "29"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")))
                                    (rule "replace_known_right" (formula "46") (term "0,0") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "28")))
                                    (rule "closeTrue" (formula "46"))
                                 )
                                 (branch " ¬o_6 = null ∧ ¬( o_6.<created> = TRUE ∨ o_6.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_6.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " ¬o_6 = null ∧ ¬( o_6.<created> = TRUE ∨ o_6.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_6.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_6.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "orRight" (formula "28"))
                                       (rule "orRight" (formula "28"))
                                       (rule "orRight" (formula "28"))
                                       (rule "applyEqReverse" (formula "49") (term "1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "48"))
                                       (rule "replace_known_right" (formula "47") (term "0,1") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "26")))
                                       (rule "closeTrue" (formula "47"))
                                    )
                                    (branch " ¬o_6 = null ∧ ¬( o_6.<created> = TRUE ∨ o_6.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_6.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_6.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                       (rule "close" (formula "45") (ifseqformula "1"))
                                    )
                                 )
                              )
                           )
                           (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE FALSE"
                              (rule "closeType" (formula "24") (ifseqformula "37"))
                           )
                        )
                        (branch "CUT: exc_3.<created> = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "cut_direct" (formula "38") (term "0"))
                           (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "39"))
                              (rule "allRight" (formula "39") (inst "sk=f_5"))
                              (rule "allRight" (formula "39") (inst "sk=o_5"))
                              (rule "orRight" (formula "39"))
                              (rule "orRight" (formula "39"))
                              (rule "orRight" (formula "39"))
                              (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=f_5_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "17"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "12"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "9"))
                              (rule "eqSymm" (formula "43"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_5_1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "13"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "10"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_5_2"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "11"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_5_3"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "43"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "commute_and" (formula "42"))
                              (rule "commute_and" (formula "43"))
                              (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                              (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch " ¬o_5 = null ∧ ¬( o_5.<created> = TRUE ∨ o_5.<created>@anon_heap_get«anonHeapFunction» = TRUE) TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "orRight" (formula "30"))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "28"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")) (ifInst ""  (formula "30")))
                                 (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "28"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "29")) (ifInst ""  (formula "30")))
                                 (rule "replace_known_right" (formula "44") (term "1") (ifseqformula "28"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "false_right" (formula "44"))
                                 (rule "replace_known_right" (formula "44") (term "1") (ifseqformula "28"))
                                 (builtin "One Step Simplification" (formula "44"))
                                 (rule "false_right" (formula "44"))
                                 (rule "replace_known_right" (formula "44") (term "0,1") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "28")))
                                 (rule "closeTrue" (formula "44"))
                              )
                              (branch " ¬o_5 = null ∧ ¬( o_5.<created> = TRUE ∨ o_5.<created>@anon_heap_get«anonHeapFunction» = TRUE) FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_5 = null ∧ ¬( o_5.<created> = TRUE ∨ o_5.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_5.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "28"))
                                    (rule "orRight" (formula "28"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")) (ifInst ""  (formula "28")) (ifInst ""  (formula "29")))
                                    (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "false_right" (formula "46"))
                                    (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "false_right" (formula "45"))
                                    (rule "replace_known_right" (formula "45") (term "0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "27")))
                                    (rule "closeTrue" (formula "45"))
                                 )
                                 (branch " ¬o_5 = null ∧ ¬( o_5.<created> = TRUE ∨ o_5.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_5.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " ¬o_5 = null ∧ ¬( o_5.<created> = TRUE ∨ o_5.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_5.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_5.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "orRight" (formula "27"))
                                       (rule "orRight" (formula "27"))
                                       (rule "orRight" (formula "27"))
                                       (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "49"))
                                       (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "false_right" (formula "47"))
                                       (rule "replace_known_right" (formula "47") (term "0,0") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "26")))
                                       (rule "closeTrue" (formula "47"))
                                    )
                                    (branch " ¬o_5 = null ∧ ¬( o_5.<created> = TRUE ∨ o_5.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_5.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_5.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                       (rule "close" (formula "46") (ifseqformula "1"))
                                    )
                                 )
                              )
                           )
                           (branch "CUT: java.lang.RuntimeException::instance(exc_3) = TRUE FALSE"
                              (rule "closeTypeSwitched" (formula "38") (ifseqformula "24"))
                           )
                        )
                     )
                  )
                  (branch "ClassCastException (!(exc_3 instanceof java.lang.Throwable))"
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "closeTrue" (formula "35"))
                  )
               )
               (branch "if exc_3 instanceof java.lang.Throwable false"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Pre (concatenate)"
            (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "23")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "1,0") (ifseqformula "15"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "1,1") (ifseqformula "15"))
            (rule "wellFormedAnonEQ" (formula "30") (term "0,0") (ifseqformula "15"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,1,0") (ifseqformula "10"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,1,1") (ifseqformula "10"))
            (rule "wellFormedAnonEQ" (formula "30") (term "0,0,0") (ifseqformula "10"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,1,0") (ifseqformula "7"))
            (rule "wellFormedAnonEQ" (formula "30") (term "0,0,0,0") (ifseqformula "7"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,1,1") (ifseqformula "7"))
            (rule "replace_known_right" (formula "30") (term "1,0,1,0") (ifseqformula "22"))
            (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "9")) (ifInst ""  (formula "14")) (ifInst ""  (formula "20")) (ifInst ""  (formula "21")) (ifInst ""  (formula "17")))
            (rule "orRight" (formula "30"))
            (rule "orRight" (formula "31"))
            (rule "orRight" (formula "31"))
            (rule "orRight" (formula "31"))
            (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "30"))
            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "31")))
            (rule "closeFalse" (formula "3"))
         )
      )
      (branch "Exceptional Post (concatenate)"
         (builtin "One Step Simplification" (formula "22"))
         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "20")) (ifInst ""  (formula "18")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,0,1,1,0,1,0,1,1") (ifseqformula "10"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,0,0,1,1,0,1,0,1,1") (ifseqformula "7"))
         (rule "translateJavaAddInt" (formula "15") (term "1,0,1,0,1,0,1,1"))
         (rule "translateJavaAddInt" (formula "15") (term "0,1,0,1,0,1,0,1,1"))
         (rule "andLeft" (formula "15"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1,0") (ifseqformula "15"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,1,0") (ifseqformula "10"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,0,1,0") (ifseqformula "7"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "16"))
         (rule "notLeft" (formula "16"))
         (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "19"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "true_left" (formula "17"))
         (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "18"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "blockThrow" (formula "25") (term "1"))
         (rule "commute_or_2" (formula "16"))
         (rule "commute_or_2" (formula "16") (term "0"))
         (rule "methodCallThrow" (formula "25") (term "1"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "tryCatchThrow" (formula "25") (term "1"))
         (rule "ifElseUnfold" (formula "25") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_1"))
         (rule "equality_comparison_simple" (formula "25") (term "1"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "replace_known_right" (formula "25") (term "0,0,1,0") (ifseqformula "18"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "ifElseSplit" (formula "25"))
         (branch "if x_1 true"
            (builtin "One Step Simplification" (formula "26"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_1 false"
            (builtin "One Step Simplification" (formula "26"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "ifElseSplit" (formula "25"))
            (branch "if exc_2 instanceof java.lang.Throwable true"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
               (rule "true_left" (formula "1"))
               (rule "variableDeclaration" (formula "25") (term "1") (newnames "e_1"))
               (rule "reference_type_cast" (formula "25") (term "1"))
               (branch "Normal Execution (exc_2 instanceof java.lang.Throwable)"
                  (builtin "One Step Simplification" (formula "26"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "assignment" (formula "25") (term "1"))
                  (builtin "One Step Simplification" (formula "25"))
                  (rule "emptyModality" (formula "25") (term "1"))
                  (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "18")))
                  (rule "instanceof_not_compatible_5" (formula "25") (term "1,0") (ifseqformula "17"))
                  (rule "instanceof_not_compatible_5" (formula "25") (term "0,0,0") (ifseqformula "17"))
                  (rule "eqSymm" (formula "25") (term "1,0,0,1"))
                  (rule "replace_known_right" (formula "25") (term "0,0,0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "18")))
                  (rule "arrayLengthNotNegative" (formula "12") (term "0"))
                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                  (rule "qeq_literals" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "arrayLengthIsAShort" (formula "12") (term "0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "cut_direct" (formula "16") (term "0,0,0"))
                  (branch "CUT: exc_2.<created> = TRUE TRUE"
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "cut_direct" (formula "3") (term "0"))
                     (branch "CUT: message = null TRUE"
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "cut_direct" (formula "25") (term "0"))
                        (branch "CUT: java.lang.RuntimeException::instance(exc_2) = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "allRight" (formula "26") (inst "sk=f_4"))
                           (rule "allRight" (formula "26") (inst "sk=o_4"))
                           (rule "orRight" (formula "26"))
                           (rule "orRight" (formula "26"))
                           (rule "orRight" (formula "26"))
                           (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=f_4_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "12"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "9"))
                           (rule "eqSymm" (formula "30"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_4_1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "10"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_4_2"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "29"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "commute_and" (formula "29"))
                           (rule "commute_and" (formula "28"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch " ¬o_4 = null ∧ ¬( o_4.<created> = TRUE ∨ o_4.<created>@anon_heap_get«anonHeapFunction» = TRUE) TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "orRight" (formula "21"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")) (ifInst ""  (formula "21")))
                              (rule "replace_known_right" (formula "31") (term "1") (ifseqformula "22"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "false_right" (formula "31"))
                              (rule "replace_known_right" (formula "31") (term "0,1") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "22")))
                              (rule "closeTrue" (formula "31"))
                           )
                           (branch " ¬o_4 = null ∧ ¬( o_4.<created> = TRUE ∨ o_4.<created>@anon_heap_get«anonHeapFunction» = TRUE) FALSE"
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch " ¬o_4 = null ∧ ¬( o_4.<created> = TRUE ∨ o_4.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_4.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "orRight" (formula "20"))
                                 (rule "orRight" (formula "20"))
                                 (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "eqSymm" (formula "34"))
                                 (rule "replace_known_right" (formula "33") (term "0,1") (ifseqformula "19"))
                                 (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "22")))
                                 (rule "closeTrue" (formula "33"))
                              )
                              (branch " ¬o_4 = null ∧ ¬( o_4.<created> = TRUE ∨ o_4.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_4.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                 (rule "close" (formula "32") (ifseqformula "1"))
                              )
                           )
                        )
                        (branch "CUT: java.lang.RuntimeException::instance(exc_2) = TRUE FALSE"
                           (rule "closeTypeSwitched" (formula "25") (ifseqformula "17"))
                        )
                     )
                     (branch "CUT: message = null FALSE"
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "cut_direct" (formula "26") (term "0"))
                        (branch "CUT: java.lang.RuntimeException::instance(exc_2) = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "allRight" (formula "27") (inst "sk=f_3"))
                           (rule "allRight" (formula "27") (inst "sk=o_3"))
                           (rule "orRight" (formula "27"))
                           (rule "orRight" (formula "27"))
                           (rule "orRight" (formula "27"))
                           (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=f_3_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "12"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "9"))
                           (rule "eqSymm" (formula "31"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "10"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_2"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "30"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "commute_and" (formula "29"))
                           (rule "commute_and" (formula "30"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch " ¬o_3 = null ∧ ¬( o_3.<created> = TRUE ∨ o_3.<created>@anon_heap_get«anonHeapFunction» = TRUE) TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "2"))
                              (rule "notLeft" (formula "1"))
                              (rule "orRight" (formula "22"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "22"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "21")))
                              (rule "replace_known_right" (formula "31") (term "1") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "false_right" (formula "31"))
                              (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "21")))
                              (rule "closeTrue" (formula "32"))
                           )
                           (branch " ¬o_3 = null ∧ ¬( o_3.<created> = TRUE ∨ o_3.<created>@anon_heap_get«anonHeapFunction» = TRUE) FALSE"
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch " ¬o_3 = null ∧ ¬( o_3.<created> = TRUE ∨ o_3.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_3.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "orRight" (formula "20"))
                                 (rule "orRight" (formula "20"))
                                 (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "eqSymm" (formula "35"))
                                 (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "22"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "false_right" (formula "33"))
                                 (rule "replace_known_right" (formula "33") (term "0,1") (ifseqformula "19"))
                                 (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "22")))
                                 (rule "closeTrue" (formula "33"))
                              )
                              (branch " ¬o_3 = null ∧ ¬( o_3.<created> = TRUE ∨ o_3.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_3.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                 (rule "close" (formula "33") (ifseqformula "1"))
                              )
                           )
                        )
                        (branch "CUT: java.lang.RuntimeException::instance(exc_2) = TRUE FALSE"
                           (rule "closeTypeSwitched" (formula "26") (ifseqformula "17"))
                        )
                     )
                  )
                  (branch "CUT: exc_2.<created> = TRUE FALSE"
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "cut_direct" (formula "3") (term "0"))
                     (branch "CUT: message = null TRUE"
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "cut_direct" (formula "26") (term "0"))
                        (branch "CUT: java.lang.RuntimeException::instance(exc_2) = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "allRight" (formula "27") (inst "sk=f_2"))
                           (rule "allRight" (formula "27") (inst "sk=o_2"))
                           (rule "orRight" (formula "27"))
                           (rule "orRight" (formula "27"))
                           (rule "orRight" (formula "27"))
                           (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=f_2_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "12"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "9"))
                           (rule "eqSymm" (formula "31"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "10"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_2"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "30"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "commute_and" (formula "29"))
                           (rule "commute_and" (formula "30"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_get«anonHeapFunction» = TRUE) TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "orRight" (formula "21"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")) (ifInst ""  (formula "21")))
                              (rule "replace_known_right" (formula "31") (term "1") (ifseqformula "22"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "false_right" (formula "31"))
                              (rule "replace_known_right" (formula "32") (term "0,1") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "22")))
                              (rule "closeTrue" (formula "32"))
                           )
                           (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_get«anonHeapFunction» = TRUE) FALSE"
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_2.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "orRight" (formula "21"))
                                 (rule "orRight" (formula "21"))
                                 (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "eqSymm" (formula "35"))
                                 (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "19"))
                                 (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "20")))
                                 (rule "closeTrue" (formula "34"))
                              )
                              (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_2.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                 (rule "close" (formula "33") (ifseqformula "1"))
                              )
                           )
                        )
                        (branch "CUT: java.lang.RuntimeException::instance(exc_2) = TRUE FALSE"
                           (rule "closeTypeSwitched" (formula "26") (ifseqformula "17"))
                        )
                     )
                     (branch "CUT: message = null FALSE"
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "cut_direct" (formula "27") (term "0"))
                        (branch "CUT: java.lang.RuntimeException::instance(exc_2) = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "allRight" (formula "28") (inst "sk=f_1"))
                           (rule "allRight" (formula "28") (inst "sk=o_1"))
                           (rule "orRight" (formula "28"))
                           (rule "orRight" (formula "28"))
                           (rule "orRight" (formula "28"))
                           (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=f_1_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "12"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "9"))
                           (rule "eqSymm" (formula "32"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "10"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_2"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "31"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "commute_and" (formula "30"))
                           (rule "commute_and" (formula "31"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_get«anonHeapFunction» = TRUE) TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "2"))
                              (rule "notLeft" (formula "1"))
                              (rule "orRight" (formula "22"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "22"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "21")))
                              (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "false_right" (formula "33"))
                              (rule "replace_known_right" (formula "32") (term "1") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "false_right" (formula "32"))
                              (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "21")))
                              (rule "closeTrue" (formula "32"))
                           )
                           (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_get«anonHeapFunction» = TRUE) FALSE"
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_1.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "orRight" (formula "21"))
                                 (rule "orRight" (formula "21"))
                                 (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "eqSymm" (formula "36"))
                                 (rule "replace_known_right" (formula "35") (term "0,0") (ifseqformula "19"))
                                 (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "20")))
                                 (rule "closeTrue" (formula "35"))
                              )
                              (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_get«anonHeapFunction» = TRUE ∨ o_1.<created>@anon_heap_longToByteArray«anonHeapFunction» = TRUE) FALSE"
                                 (rule "close" (formula "34") (ifseqformula "1"))
                              )
                           )
                        )
                        (branch "CUT: java.lang.RuntimeException::instance(exc_2) = TRUE FALSE"
                           (rule "closeType" (formula "17") (ifseqformula "27"))
                        )
                     )
                  )
               )
               (branch "ClassCastException (!(exc_2 instanceof java.lang.Throwable))"
                  (builtin "One Step Simplification" (formula "25"))
                  (rule "closeTrue" (formula "25"))
               )
            )
            (branch "if exc_2 instanceof java.lang.Throwable false"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Pre (concatenate)"
         (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "18")) (ifInst ""  (formula "16")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1") (ifseqformula "10"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1,0") (ifseqformula "10"))
         (rule "wellFormedAnonEQ" (formula "20") (term "0,0") (ifseqformula "10"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,1") (ifseqformula "7"))
         (rule "wellFormedAnonEQ" (formula "20") (term "0,0,0") (ifseqformula "7"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,1,0") (ifseqformula "7"))
         (rule "replace_known_left" (formula "20") (term "1,1") (ifseqformula "11"))
         (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "9")) (ifInst ""  (formula "2")) (ifInst ""  (formula "14")) (ifInst ""  (formula "15")))
         (rule "closeTrue" (formula "20"))
      )
   )
   (branch "Exceptional Post (longToByteArray)"
      (builtin "One Step Simplification" (formula "10"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "0,0,1,0,0,1,1") (ifseqformula "7"))
      (rule "andLeft" (formula "10"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,0") (ifseqformula "10"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "0,1,0") (ifseqformula "7"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "13"))
      (rule "notLeft" (formula "11"))
      (rule "close" (formula "14") (ifseqformula "13"))
   )
   (branch "Pre (longToByteArray)"
      (builtin "One Step Simplification" (formula "12"))
      (rule "wellFormedAnonEQ" (formula "12") (ifseqformula "7"))
      (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "6")))
      (rule "closeTrue" (formula "12"))
   )
)
(branch "Exceptional Post (get)"
   (builtin "One Step Simplification" (formula "7"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "andLeft" (formula "7"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "1,0") (ifseqformula "7"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "8"))
   (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "10"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "methodCallThrow" (formula "14") (term "1"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "tryCatchThrow" (formula "14") (term "1"))
   (rule "ifElseUnfold" (formula "14") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "14") (term "1") (newnames "x"))
   (rule "equality_comparison_simple" (formula "14") (term "1"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "replace_known_right" (formula "14") (term "0,0,1,0") (ifseqformula "10"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "ifElseSplit" (formula "14"))
   (branch "if x true"
      (builtin "One Step Simplification" (formula "15"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x false"
      (builtin "One Step Simplification" (formula "15"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "ifElseSplit" (formula "14"))
      (branch "if exc_0 instanceof java.lang.Throwable true"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
         (rule "true_left" (formula "1"))
         (rule "variableDeclaration" (formula "14") (term "1") (newnames "e"))
         (rule "reference_type_cast" (formula "14") (term "1"))
         (branch "Normal Execution (exc_0 instanceof java.lang.Throwable)"
            (builtin "One Step Simplification" (formula "15"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "assignment" (formula "14") (term "1"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "emptyModality" (formula "14") (term "1"))
            (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "10")) (ifInst ""  (formula "9")))
            (rule "allRight" (formula "14") (inst "sk=f_0"))
            (rule "allRight" (formula "14") (inst "sk=o_0"))
            (rule "orRight" (formula "14"))
            (rule "orRight" (formula "14"))
            (rule "orRight" (formula "14"))
            (rule "eqSymm" (formula "17"))
            (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=f_0_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "8"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
            (rule "eqSymm" (formula "18"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
            (rule "closeFalse" (formula "1"))
         )
         (branch "ClassCastException (!(exc_0 instanceof java.lang.Throwable))"
            (builtin "One Step Simplification" (formula "14"))
            (rule "closeTrue" (formula "14"))
         )
      )
      (branch "if exc_0 instanceof java.lang.Throwable false"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Pre (get)"
   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "1")))
   (rule "closeTrue" (formula "9"))
)
)

}
