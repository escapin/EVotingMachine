\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Feb 02 15:23:41 CET 2015
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=80000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Mon Feb 02 15:23:41 CET 2015
name=verif.eVotingMachine.core.EntryQueue[verif.eVotingMachine.core.EntryQueue\\:\\:add([B)].JML normal_behavior operation contract.1
contract=verif.eVotingMachine.core.EntryQueue[verif.eVotingMachine.core.EntryQueue\\:\\:add([B)].JML normal_behavior operation contract.1
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "kirsten" ) (keyVersion "31a2f66d4110d575b74cc5815e7ca260a8d03cf2"))

(autoModeTime "287")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "heapAtPre"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "9") (term "1,0,0,1,0,1"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "elementOfUnion" (formula "9") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "9") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "9") (term "0,0,0,0,0,1,0,1"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_add,savedHeapBefore_add"))
(builtin "One Step Simplification" (formula "9"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "newEntry"))
(builtin "Use Operation Contract" (formula "9") (newnames "heapBefore_Node,self_0,exc_0,heapAfter_Node,anon_heap_Node") (contract "verif.eVotingMachine.core.EntryQueue.Node[verif.eVotingMachine.core.EntryQueue.Node::Node([B)].JML normal_behavior operation contract.0"))
(branch "Post (Node)"
   (builtin "One Step Simplification" (formula "7"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "andLeft" (formula "7"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "1,1,0,1,0") (ifseqformula "7"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "9"))
   (rule "notLeft" (formula "8"))
   (rule "notLeft" (formula "8"))
   (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "14"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "assignment" (formula "19") (term "1"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=verif_eVotingMachine_core_EntryQueue_Node_next_0"))
   (rule "simplifySelectOfAnonEQ" (formula "11") (ifseqformula "7"))
   (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "16")) (ifInst ""  (formula "15")))
   (rule "applyEqReverse" (formula "12") (term "0") (ifseqformula "11"))
   (rule "hideAuxiliaryEq" (formula "11"))
   (rule "pullOutSelect" (formula "10") (term "0") (inst "selectSK=verif_eVotingMachine_core_EntryQueue_Node_entry_0"))
   (rule "simplifySelectOfAnonEQ" (formula "10") (ifseqformula "7"))
   (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "16")) (ifInst ""  (formula "15")))
   (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "10"))
   (rule "hideAuxiliaryEq" (formula "10"))
   (rule "ifElseUnfold" (formula "19") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "19") (term "1") (newnames "x"))
   (rule "compound_equality_comparison_1" (formula "19") (term "1") (inst "#v0=n"))
   (rule "variableDeclarationAssign" (formula "19") (term "1"))
   (rule "variableDeclaration" (formula "19") (term "1") (newnames "n"))
   (rule "assignment_read_attribute_this" (formula "19") (term "1"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "pullOutSelect" (formula "19") (term "0,1,0") (inst "selectSK=verif_eVotingMachine_core_EntryQueue_head_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "8"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")) (ifInst ""  (formula "3")))
   (rule "elementOfUnion" (formula "1") (term "0,0"))
   (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "applyEqReverse" (formula "20") (term "0,1,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "equality_comparison_simple" (formula "19") (term "1"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "replace_known_right" (formula "19") (term "0,0,1,0") (ifseqformula "18"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "ifElseSplit" (formula "19"))
   (branch "if x true"
      (builtin "One Step Simplification" (formula "20"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x false"
      (builtin "One Step Simplification" (formula "20"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "eval_order_access1" (formula "19") (term "1") (inst "#v0=n"))
      (rule "variableDeclarationAssign" (formula "19") (term "1"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "n_1"))
      (rule "assignment_read_attribute_this" (formula "19") (term "1"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "pullOutSelect" (formula "19") (term "0,1,0") (inst "selectSK=verif_eVotingMachine_core_EntryQueue_last_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")) (ifInst ""  (formula "3")))
      (rule "assignment_write_attribute" (formula "20") (term "1"))
      (branch "Normal Execution (n_1 != null)"
         (builtin "One Step Simplification" (formula "21"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "assignment_write_attribute_this" (formula "21") (term "1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "elementOfUnion" (formula "1") (term "0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfSingleton" (formula "1") (term "0,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "applyEqReverse" (formula "21") (term "1,0,0,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "methodCallEmpty" (formula "19") (term "1"))
         (rule "tryEmpty" (formula "19") (term "1"))
         (rule "emptyModality" (formula "19") (term "1"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "eqSymm" (formula "19") (term "1,0,0,1"))
         (rule "dismissNonSelectedField" (formula "19") (term "0,0,1,0"))
         (rule "dismissNonSelectedField" (formula "19") (term "0,0,1,0"))
         (rule "pullOutSelect" (formula "19") (term "1,0,0,0,1,1,0") (inst "selectSK=verif_eVotingMachine_core_EntryQueue_last_1"))
         (rule "applyEq" (formula "20") (term "0,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "20") (term "1,0,0,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "20") (term "0,0,1,1,1,0") (ifseqformula "1"))
         (rule "simplifySelectOfStore" (formula "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "20") (term "1,0,0,0,1,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "20") (term "0,0,0,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "20") (term "1,0,0,1,0") (ifseqformula "1"))
         (rule "replaceKnownSelect_taclet0_2" (formula "20") (term "0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "20") (term "0,0,1,0"))
         (rule "applyEqReverse" (formula "20") (term "0,0,1,1,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replace_known_right" (formula "19") (term "0,1,1,1,0") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "15")) (ifInst ""  (formula "10")) (ifInst ""  (formula "14")))
         (rule "allRight" (formula "19") (inst "sk=f_0"))
         (rule "allRight" (formula "19") (inst "sk=o_0"))
         (rule "orRight" (formula "19"))
         (rule "orRight" (formula "19"))
         (rule "orRight" (formula "19"))
         (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=f_0_0"))
         (rule "simplifySelectOfStore" (formula "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "23"))
         (rule "eqSymm" (formula "1") (term "1,0,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "20"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfStore" (formula "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "1") (term "1,0,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "21"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
         (rule "elementOfUnion" (formula "1") (term "0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
         (rule "commute_and" (formula "21"))
         (rule "commute_and" (formula "20"))
         (rule "commute_and" (formula "1") (term "0,0,0,0"))
         (rule "commute_and" (formula "1") (term "1,0,0,0"))
         (rule "cnf_rightDist" (formula "1") (term "0,0,0"))
         (rule "commute_or" (formula "1") (term "0,0,0,0"))
         (rule "cnf_rightDist" (formula "1") (term "1,0,0,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "commute_or" (formula "1") (term "0,1,0,0,0"))
         (rule "commute_and" (formula "1") (term "1,0,0,0"))
         (rule "cnf_rightDist" (formula "1") (term "0,0,0,0"))
         (rule "commute_and_2" (formula "1") (term "0,0,0"))
         (rule "commute_or" (formula "1") (term "1,0,0,0"))
         (rule "commute_or" (formula "1") (term "0,0,0,0,0"))
         (rule "shift_paren_and" (formula "1") (term "0,0,0,0"))
         (rule "commute_and_2" (formula "1") (term "0,0"))
         (rule "commute_and_2" (formula "1") (term "0,0,0"))
         (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
         (rule "commute_and" (formula "1") (term "0,0,0,0,0"))
         (rule "commute_and_2" (formula "1") (term "0,0,0,0"))
         (rule "ifthenelse_split" (formula "1") (term "0"))
         (branch " ¬f_0 = java.lang.Object::<created> ∧ o_0 = self_0 ∧ (f_0 = Node::$entry ∨ f_0 = Node::$next) ∧ (f_0 = Node::$entry ∨ o_0 = self_0) ∧ (f_0 = Node::$next ∨ o_0 = self_0) TRUE"
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "5"))
            (rule "hideAuxiliaryEq" (formula "5"))
            (rule "eqSymm" (formula "27"))
            (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "true_left" (formula "4"))
            (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "true_left" (formula "3"))
            (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "1"))
            (rule "eqSymm" (formula "23") (term "1"))
            (rule "applyEq" (formula "24") (term "1,0,0,1") (ifseqformula "1"))
            (rule "replace_known_right" (formula "24") (term "0,1") (ifseqformula "17"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "notRight" (formula "24"))
            (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "2"))
            (rule "sortsDisjointModuloNull" (formula "23") (term "1"))
            (rule "replace_known_right" (formula "23") (term "1,1") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "19")))
            (rule "false_right" (formula "23"))
            (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "2"))
            (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
            (rule "eqSymm" (formula "2"))
            (rule "close" (formula "19") (ifseqformula "2"))
         )
         (branch " ¬f_0 = java.lang.Object::<created> ∧ o_0 = self_0 ∧ (f_0 = Node::$entry ∨ f_0 = Node::$next) ∧ (f_0 = Node::$entry ∨ o_0 = self_0) ∧ (f_0 = Node::$next ∨ o_0 = self_0) FALSE"
            (rule "close" (formula "24") (ifseqformula "1"))
         )
      )
      (branch "Null Reference (n_1 = null)"
         (builtin "One Step Simplification" (formula "21"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "applyEq" (formula "2") (term "1") (ifseqformula "1"))
         (rule "ifEqualsNull" (formula "2"))
         (rule "replace_known_right" (formula "2") (term "1,1") (ifseqformula "19"))
         (builtin "One Step Simplification" (formula "2"))
         (rule "andLeft" (formula "2"))
         (rule "elementOfUnion" (formula "2"))
         (rule "elementOfSingleton" (formula "2") (term "1"))
         (builtin "One Step Simplification" (formula "2"))
         (rule "elementOfSingleton" (formula "2"))
         (builtin "One Step Simplification" (formula "2"))
         (rule "closeFalse" (formula "2"))
      )
   )
)
(branch "Exceptional Post (Node)"
   (builtin "One Step Simplification" (formula "11"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "andLeft" (formula "7"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "1,0,0") (ifseqformula "7"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "1,1,0,1,0") (ifseqformula "7"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "10"))
   (rule "notLeft" (formula "8"))
   (rule "close" (formula "15") (ifseqformula "14"))
)
(branch "Pre (Node)"
   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "1")) (ifInst ""  (formula "4")))
   (rule "closeTrue" (formula "9"))
)
)

}
