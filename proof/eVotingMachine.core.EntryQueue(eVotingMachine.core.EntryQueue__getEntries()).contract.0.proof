\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Feb 02 15:21:28 CET 2015
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=80000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Mon Feb 02 15:21:28 CET 2015
name=de.uni.trier.infsec.eVotingMachine.core.EntryQueue[de.uni.trier.infsec.eVotingMachine.core.EntryQueue\\:\\:getEntries()].JML behavior operation contract.0
contract=de.uni.trier.infsec.eVotingMachine.core.EntryQueue[de.uni.trier.infsec.eVotingMachine.core.EntryQueue\\:\\:getEntries()].JML behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "kirsten" ) (keyVersion "31a2f66d4110d575b74cc5815e7ca260a8d03cf2"))

(autoModeTime "832")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "heapAtPre"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "6") (term "1,0,0,1,0,1"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_getEntries,savedHeapBefore_getEntries"))
(builtin "One Step Simplification" (formula "6"))
(rule "ifUnfold" (formula "6") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "x"))
(rule "compound_equality_comparison_1" (formula "6") (term "1") (inst "#v0=n_1"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "n_1"))
(rule "assignment_read_attribute_this" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "equality_comparison_simple" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "ifSplit" (formula "6"))
(branch "if x true"
   (builtin "One Step Simplification" (formula "7"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "returnUnfold" (formula "7") (term "1") (inst "#v0=x_arr"))
   (rule "variableDeclarationAssign" (formula "7") (term "1"))
   (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_arr"))
   (rule "arrayCreation" (formula "7") (term "1") (inst "#v0=x_arr_1"))
   (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_arr_1"))
   (rule "arrayCreation" (formula "7") (term "1") (inst "#v0=x_arr_2"))
   (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_arr_2"))
   (rule "variableDeclarationAssign" (formula "7") (term "1"))
   (rule "variableDeclaration" (formula "7") (term "1") (newnames "dim0"))
   (rule "assignment" (formula "7") (term "1"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "ifUnfold" (formula "7") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_4"))
   (rule "less_than_comparison_simple" (formula "7") (term "1"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "less_literals" (formula "7") (term "0,0,1,0"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "ifSplit" (formula "7"))
   (branch "if x_4 true"
      (builtin "One Step Simplification" (formula "8"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x_4 false"
      (builtin "One Step Simplification" (formula "8"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "2"))
      (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "7") (term "1") (inst "#v0=x_arr_3"))
      (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_arr_3"))
      (rule "variableDeclarationAssign" (formula "7") (term "1"))
      (rule "variableDeclaration" (formula "7") (term "1") (newnames "length_1"))
      (rule "assignment" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "variableDeclaration" (formula "7") (term "1") (newnames "newObject"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "7") (term "1") (inst "#v0=x_arr_4"))
      (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_arr_4"))
      (rule "variableDeclarationAssign" (formula "7") (term "1"))
      (rule "variableDeclaration" (formula "7") (term "1") (newnames "length_2"))
      (rule "assignment" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "allocateInstanceWithLength" (formula "7"))
      (builtin "One Step Simplification" (formula "8"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "2"))
      (rule "notLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "blockEmpty" (formula "11") (term "1"))
      (rule "assignment" (formula "11") (term "1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "arrayLengthNotNegative" (formula "1") (term "0"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
      (rule "qeq_literals" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "arrayLengthIsAShort" (formula "1") (term "0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "methodCall" (formula "11") (term "1"))
      (branch "Normal Execution (newObject != null )"
         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "9")))
         (rule "false_right" (formula "11"))
         (rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "assignment_write_attribute_this" (formula "11") (term "1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "methodCallWithinClass" (formula "11") (term "1"))
         (rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "arrayInitialisation" (formula "11") (term "1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "polySimp_elimSub" (formula "11") (term "2,1,0,1,0"))
         (rule "mul_literals" (formula "11") (term "1,2,1,0,1,0"))
         (rule "polySimp_addComm0" (formula "11") (term "2,1,0,1,0"))
         (rule "applyEq" (formula "11") (term "1,2,1,0,1,0") (ifseqformula "1"))
         (rule "add_zero_right" (formula "11") (term "2,1,0,1,0"))
         (rule "methodCallEmpty" (formula "11") (term "1"))
         (rule "blockEmpty" (formula "11") (term "1"))
         (rule "assignment_write_attribute_this" (formula "11") (term "1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "methodCallReturnIgnoreResult" (formula "11") (term "1"))
         (rule "blockEmpty" (formula "11") (term "1"))
         (rule "methodCallReturn" (formula "11") (term "1"))
         (rule "assignment" (formula "11") (term "1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "methodCallEmpty" (formula "11") (term "1"))
         (rule "blockEmpty" (formula "11") (term "1"))
         (rule "assignment" (formula "11") (term "1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "blockEmpty" (formula "11") (term "1"))
         (rule "assignment" (formula "11") (term "1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "blockEmpty" (formula "11") (term "1"))
         (rule "assignment" (formula "11") (term "1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "methodCallReturn" (formula "11") (term "1"))
         (rule "assignment" (formula "11") (term "1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "methodCallEmpty" (formula "11") (term "1"))
         (rule "tryEmpty" (formula "11") (term "1"))
         (rule "emptyModality" (formula "11") (term "1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "allRight" (formula "11") (inst "sk=f_3"))
         (rule "allRight" (formula "11") (inst "sk=o_3"))
         (rule "orRight" (formula "11"))
         (rule "eqSymm" (formula "12"))
         (rule "pullOutSelect" (formula "12") (term "0") (inst "selectSK=f_3_0"))
         (rule "simplifySelectOfStore" (formula "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "13"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "eqSymm" (formula "1") (term "1,0,0"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_1"))
         (rule "simplifySelectOfMemset" (formula "1"))
         (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
         (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_2"))
         (rule "simplifySelectOfStore" (formula "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "1") (term "1,0,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_3"))
         (rule "simplifySelectOfStore" (formula "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "1") (term "1,0,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_4"))
         (rule "simplifySelectOfStore" (formula "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "1") (term "1,0,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_5"))
         (rule "simplifySelectOfCreate" (formula "1"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "eqSymm" (formula "1") (term "0,0,0,0"))
         (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "commute_and" (formula "6") (term "0,0"))
         (rule "commute_and" (formula "4") (term "0,0"))
         (rule "commute_and" (formula "3") (term "0,0"))
         (rule "commute_and" (formula "2") (term "0,0"))
         (rule "commute_and" (formula "1") (term "0,0"))
         (rule "commute_and_2" (formula "5") (term "0,1,0,0,0"))
         (rule "inEqSimp_and_contradInEq1" (formula "5") (term "0,1,0,0,0"))
         (rule "qeq_literals" (formula "5") (term "1,0,1,0,0,0"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
         (rule "hideAuxiliaryEq" (formula "5"))
         (rule "ifthenelse_split" (formula "1") (term "0"))
         (branch "f_3 = java.lang.Object::<created> ∧ o_3 = x_arr_4 TRUE"
            (rule "andLeft" (formula "1"))
            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "5"))
            (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "applyEq" (formula "17") (term "1,0,0,1") (ifseqformula "2"))
            (rule "replace_known_right" (formula "17") (term "0,1") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "notRight" (formula "17"))
            (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "3"))
            (rule "applyEqRigid" (formula "18") (term "2,0") (ifseqformula "2"))
            (rule "narrowSelectType" (formula "18") (term "0") (ifseqformula "11"))
            (rule "eqSymm" (formula "18"))
            (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "7"))
            (rule "hideAuxiliaryEq" (formula "7"))
            (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
            (rule "hideAuxiliaryEq" (formula "4"))
            (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "5"))
            (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "5"))
            (rule "hideAuxiliaryEq" (formula "5"))
            (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "4"))
            (rule "hideAuxiliaryEq" (formula "4"))
            (rule "eqSymm" (formula "14"))
            (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
            (rule "eqSymm" (formula "3"))
            (rule "close" (formula "12") (ifseqformula "3"))
         )
         (branch "f_3 = java.lang.Object::<created> ∧ o_3 = x_arr_4 FALSE"
            (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "ifthenelse_split" (formula "1") (term "0"))
            (branch "f_3 = java.lang.Object::<transient> ∧ o_3 = x_arr_4 TRUE"
               (rule "andLeft" (formula "1"))
               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
               (rule "hideAuxiliaryEq" (formula "3"))
               (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "applyEq" (formula "17") (term "0,0,0") (ifseqformula "2"))
               (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "15"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "notRight" (formula "17"))
               (rule "applyEqRigid" (formula "18") (term "2,0") (ifseqformula "2"))
               (rule "narrowSelectType" (formula "18") (term "0") (ifseqformula "10"))
               (rule "eqSymm" (formula "18"))
               (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "6"))
               (rule "hideAuxiliaryEq" (formula "6"))
               (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
               (rule "hideAuxiliaryEq" (formula "4"))
               (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "4"))
               (rule "hideAuxiliaryEq" (formula "4"))
               (rule "eqSymm" (formula "15"))
               (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "false_right" (formula "11"))
               (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "3"))
               (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
               (rule "close" (formula "11") (ifseqformula "1"))
            )
            (branch "f_3 = java.lang.Object::<transient> ∧ o_3 = x_arr_4 FALSE"
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "ifthenelse_split" (formula "1") (term "0"))
               (branch " f_3 = java.lang.Object::<transactionConditionallyUpdated> ∧ o_3 = x_arr_4 TRUE"
                  (rule "andLeft" (formula "1"))
                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "applyEq" (formula "16") (term "1,0,0,1") (ifseqformula "2"))
                  (rule "replace_known_right" (formula "16") (term "0,1") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "notRight" (formula "16"))
                  (rule "applyEq" (formula "17") (term "2,0") (ifseqformula "2"))
                  (rule "narrowSelectType" (formula "17") (term "0") (ifseqformula "8"))
                  (rule "eqSymm" (formula "17"))
                  (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "4"))
                  (rule "hideAuxiliaryEq" (formula "4"))
                  (rule "eqSymm" (formula "16"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "notRight" (formula "16"))
                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "false_right" (formula "12"))
                  (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "false_right" (formula "12"))
                  (rule "applyEq" (formula "4") (term "0") (ifseqformula "2"))
                  (rule "eqSymm" (formula "4"))
                  (rule "close" (formula "13") (ifseqformula "4"))
               )
               (branch " f_3 = java.lang.Object::<transactionConditionallyUpdated> ∧ o_3 = x_arr_4 FALSE"
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "ifthenelse_split" (formula "1") (term "0"))
                  (branch "f_3 = java.lang.Object::<initialized> ∧ o_3 = x_arr_4 TRUE"
                     (rule "andLeft" (formula "1"))
                     (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                     (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "applyEq" (formula "11") (term "0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "false_right" (formula "11"))
                     (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "false_right" (formula "10"))
                     (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "15") (term "2,0") (ifseqformula "1"))
                     (rule "narrowSelectType" (formula "15") (term "0") (ifseqformula "6"))
                     (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "false_right" (formula "10"))
                     (rule "applyEq" (formula "13") (term "1,0,0,1") (ifseqformula "2"))
                     (rule "replace_known_right" (formula "13") (term "0,1") (ifseqformula "10"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "notRight" (formula "13"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                     (rule "close" (formula "12") (ifseqformula "1"))
                  )
                  (branch "f_3 = java.lang.Object::<initialized> ∧ o_3 = x_arr_4 FALSE"
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "9"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
         )
      )
      (branch "Null Reference (newObject = null)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "if x false"
   (builtin "One Step Simplification" (formula "7"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "variableDeclarationAssign" (formula "7") (term "1"))
   (rule "variableDeclaration" (formula "7") (term "1") (newnames "entries"))
   (rule "eval_order_access2" (formula "7") (term "1") (inst "#v0=n_1"))
   (rule "variableDeclarationAssign" (formula "7") (term "1"))
   (rule "variableDeclaration" (formula "7") (term "1") (newnames "n_2"))
   (rule "assignment_read_attribute_this" (formula "7") (term "1"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "assignment_read_attribute" (formula "7") (term "1"))
   (branch "Normal Execution (n_2 != null)"
      (builtin "One Step Simplification" (formula "8"))
      (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "5")))
      (rule "false_right" (formula "7"))
      (rule "for_to_while" (formula "7") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
      (rule "variableDeclarationAssign" (formula "7") (term "1"))
      (rule "variableDeclaration" (formula "7") (term "1") (newnames "n"))
      (rule "eval_order_access2" (formula "7") (term "1") (inst "#v0=n_1"))
      (rule "variableDeclarationAssign" (formula "7") (term "1"))
      (rule "variableDeclaration" (formula "7") (term "1") (newnames "n_3"))
      (rule "assignment_read_attribute_this" (formula "7") (term "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "assignment_read_attribute" (formula "7") (term "1"))
      (branch "Normal Execution (n_3 != null)"
         (builtin "One Step Simplification" (formula "8"))
         (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "5")))
         (rule "false_right" (formula "7"))
         (builtin "Loop Invariant" (formula "7") (newnames "variant,b,heapBefore_LOOP,nBefore_LOOP,entriesBefore_LOOP,n_0,entries_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
         (branch "Invariant Initially Valid"
            (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "5")) (ifInst ""  (formula "1")))
            (rule "closeTrue" (formula "7"))
         )
         (branch "Body Preserves Invariant"
            (builtin "One Step Simplification" (formula "6"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "andLeft" (formula "6"))
            (rule "impRight" (formula "10"))
            (rule "andLeft" (formula "8"))
            (rule "notLeft" (formula "7"))
            (rule "eqSymm" (formula "12") (term "1,0,0,1,1,1,0,1"))
            (rule "variableDeclarationAssign" (formula "1") (term "1"))
            (rule "variableDeclarationAssign" (formula "12") (term "1"))
            (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_2"))
            (rule "variableDeclaration" (formula "12") (term "1") (newnames "exc_1"))
            (rule "assignment" (formula "12") (term "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "variableDeclaration" (formula "12") (term "1") (newnames "thrownExc"))
            (rule "blockThrow" (formula "12") (term "1,0,0,1"))
            (rule "blockThrow" (formula "12") (term "1,0,0,1"))
            (rule "pullOutSelect" (formula "9") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingMachine_core_EntryQueue_head_1"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")) (ifInst ""  (formula "4")))
            (rule "applyEqReverse" (formula "10") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "boxToDiamond" (formula "1") (term "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "shift_paren_or" (formula "6"))
            (rule "shift_paren_or" (formula "7"))
            (rule "inequality_comparison_simple" (formula "8") (term "1"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "methodCallEmpty" (formula "8") (term "1"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "emptyModality" (formula "8") (term "1"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "8"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "ifUnfold" (formula "11") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_1"))
            (rule "inequality_comparison_simple" (formula "11") (term "1"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "replace_known_right" (formula "11") (term "0,0,1,0") (ifseqformula "8"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "ifSplit" (formula "11"))
            (branch "if x_1 true"
               (builtin "One Step Simplification" (formula "12"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "methodCallWithAssignmentUnfoldArguments" (formula "11") (term "1"))
               (rule "variableDeclarationAssign" (formula "11") (term "1"))
               (rule "variableDeclaration" (formula "11") (term "1") (newnames "var"))
               (rule "assignment" (formula "11") (term "1"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "variableDeclarationAssign" (formula "11") (term "1"))
               (rule "variableDeclaration" (formula "11") (term "1") (newnames "var_1"))
               (rule "assignment_read_attribute" (formula "11") (term "1"))
               (branch "Normal Execution (n != null)"
                  (builtin "One Step Simplification" (formula "12"))
                  (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "8")))
                  (rule "false_right" (formula "11"))
                  (rule "pullOutSelect" (formula "11") (term "0,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingMachine_core_EntryQueue_Node_entry_0"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (builtin "Use Operation Contract" (formula "12") (newnames "heapBefore_concatenate,result_0,exc_0,heapAfter_concatenate,anon_heap_concatenate") (contract "de.uni.trier.infsec.utils.MessageTools[de.uni.trier.infsec.utils.MessageTools::concatenate([B,[B)].JML behavior operation contract.0"))
                  (branch "Post (concatenate)"
                     (builtin "One Step Simplification" (formula "14"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "translateJavaAddInt" (formula "10") (term "0,1,1,0,1,0,1,0,1,1"))
                     (rule "translateJavaAddInt" (formula "10") (term "1,1,0,1,0,1,0,1,1"))
                     (rule "andLeft" (formula "10"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,1,0") (ifseqformula "10"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "andLeft" (formula "11"))
                     (rule "andLeft" (formula "12"))
                     (rule "andLeft" (formula "11"))
                     (rule "typeEqDerived" (formula "14") (term "0,1") (ifseqformula "11"))
                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "11")))
                     (rule "true_left" (formula "14"))
                     (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "11"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "andLeft" (formula "13"))
                     (rule "andLeft" (formula "13"))
                     (rule "notLeft" (formula "15"))
                     (rule "andLeft" (formula "14"))
                     (rule "andLeft" (formula "15"))
                     (rule "notLeft" (formula "16"))
                     (rule "notLeft" (formula "15"))
                     (rule "orRight" (formula "15"))
                     (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "15")) (ifInst ""  (formula "16")))
                     (rule "polySimp_addComm1" (formula "14") (term "1,1"))
                     (rule "polySimp_addComm0" (formula "14") (term "0,1,1"))
                     (rule "polySimp_addComm1" (formula "14") (term "1,1"))
                     (rule "assignment" (formula "21") (term "1"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "blockEmpty" (formula "21") (term "1"))
                     (rule "assignment_read_attribute" (formula "21") (term "1"))
                     (branch "Normal Execution (n != null)"
                        (builtin "One Step Simplification" (formula "22"))
                        (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "18")))
                        (rule "false_right" (formula "21"))
                        (rule "commute_and" (formula "14") (term "0"))
                        (rule "tryEmpty" (formula "21") (term "1"))
                        (rule "methodCallEmpty" (formula "21") (term "1"))
                        (rule "emptyModality" (formula "21") (term "1"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "eqSymm" (formula "21") (term "1,0,0,1"))
                        (rule "pullOutSelect" (formula "21") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_eVotingMachine_core_EntryQueue_head_2"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")) (ifInst ""  (formula "4")))
                        (rule "replaceKnownSelect_taclet1001_0" (formula "1") (term "0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet1001_1" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "22") (term "0,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "allRight" (formula "21") (inst "sk=f_2"))
                        (rule "allRight" (formula "21") (inst "sk=o_2"))
                        (rule "orRight" (formula "21"))
                        (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=f_2_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "23"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_1"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "n_0.<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "16") (term "0,0,0,0") (ifseqformula "3"))
                           (rule "applyEqReverse" (formula "16") (term "0,1,0,1,1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "polySimp_homoEq" (formula "14") (term "1"))
                           (rule "polySimp_addComm1" (formula "14") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "14") (term "0,1"))
                           (rule "polySimp_sepPosMonomial" (formula "14") (term "1"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1,1"))
                           (rule "polySimp_rightDist" (formula "14") (term "0,1,1"))
                           (rule "mul_literals" (formula "14") (term "0,0,1,1"))
                           (rule "commute_and" (formula "14") (term "0"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "2"))
                              (rule "notLeft" (formula "1"))
                              (rule "orRight" (formula "16"))
                              (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "eqSymm" (formula "24"))
                              (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "14"))
                              (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "15")))
                              (rule "closeTrue" (formula "23"))
                           )
                           (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                              (rule "close" (formula "23") (ifseqformula "1"))
                           )
                        )
                        (branch "n_0.<created> = TRUE FALSE"
                           (rule "applyEqReverse" (formula "15") (term "0,0,0,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "15") (term "0,1,0,1,1") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "15"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "polySimp_homoEq" (formula "14") (term "1"))
                           (rule "polySimp_addComm1" (formula "14") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "14") (term "0,1"))
                           (rule "polySimp_sepPosMonomial" (formula "14") (term "1"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1,1"))
                           (rule "polySimp_rightDist" (formula "14") (term "0,1,1"))
                           (rule "mul_literals" (formula "14") (term "0,0,1,1"))
                           (rule "commute_and" (formula "14") (term "0"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "orRight" (formula "15"))
                              (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "eqSymm" (formula "25"))
                              (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "16"))
                              (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "14")))
                              (rule "closeTrue" (formula "24"))
                           )
                           (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                              (rule "close" (formula "24") (ifseqformula "1"))
                           )
                        )
                     )
                     (branch "Null Reference (n = null)"
                        (builtin "One Step Simplification" (formula "22"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Exceptional Post (concatenate)"
                     (builtin "One Step Simplification" (formula "10"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "translateJavaAddInt" (formula "10") (term "1,1,0,1,0,1,0,1,1"))
                     (rule "translateJavaAddInt" (formula "10") (term "0,1,1,0,1,0,1,0,1,1"))
                     (rule "andLeft" (formula "10"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,0") (ifseqformula "10"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "andLeft" (formula "11"))
                     (rule "andLeft" (formula "12"))
                     (rule "andLeft" (formula "11"))
                     (rule "notLeft" (formula "11"))
                     (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "14"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "14"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "blockThrow" (formula "17") (term "1"))
                     (rule "tryCatchThrow" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "ifElseUnfold" (formula "17") (term "1") (inst "#boolv=x"))
                     (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_2"))
                     (rule "equality_comparison_simple" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "replace_known_right" (formula "17") (term "0,0,1,0") (ifseqformula "13"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "ifElseSplit" (formula "17"))
                     (branch "if x_2 true"
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_2 false"
                        (builtin "One Step Simplification" (formula "18"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "ifElseSplit" (formula "17"))
                        (branch "if exc_0 instanceof java.lang.Throwable true"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                           (rule "true_left" (formula "1"))
                           (rule "variableDeclaration" (formula "17") (term "1") (newnames "e"))
                           (rule "reference_type_cast" (formula "17") (term "1"))
                           (branch "Normal Execution (exc_0 instanceof java.lang.Throwable)"
                              (builtin "One Step Simplification" (formula "18"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "assignment" (formula "17") (term "1"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "assignment" (formula "17") (term "1"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "methodCallEmpty" (formula "17") (term "1"))
                              (rule "emptyModality" (formula "17") (term "1"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "methodCallParamThrow" (formula "17") (term "1"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "tryCatchThrow" (formula "17") (term "1"))
                              (rule "ifElseUnfold" (formula "17") (term "1") (inst "#boolv=x"))
                              (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_3"))
                              (rule "equality_comparison_simple" (formula "17") (term "1"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "replace_known_right" (formula "17") (term "0,0,1,0") (ifseqformula "13"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0") (ifseqformula "2"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "16"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "ifElseSplit" (formula "18"))
                              (branch "if x_3 true"
                                 (builtin "One Step Simplification" (formula "19"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "if x_3 false"
                                 (builtin "One Step Simplification" (formula "19"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "ifElseSplit" (formula "18"))
                                 (branch "if thrownExc instanceof java.lang.Throwable true"
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                    (rule "true_left" (formula "1"))
                                    (rule "variableDeclaration" (formula "18") (term "1") (newnames "e_1"))
                                    (rule "reference_type_cast" (formula "18") (term "1"))
                                    (branch "Normal Execution (thrownExc instanceof java.lang.Throwable)"
                                       (builtin "One Step Simplification" (formula "19"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "assignment" (formula "18") (term "1"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "emptyModality" (formula "18") (term "1"))
                                       (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "14")) (ifInst ""  (formula "13")))
                                       (rule "allRight" (formula "18") (inst "sk=f_1"))
                                       (rule "allRight" (formula "18") (inst "sk=o_1"))
                                       (rule "orRight" (formula "18"))
                                       (rule "eqSymm" (formula "19"))
                                       (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=f_1_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "eqSymm" (formula "20"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_1"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch "n_0.<created> = TRUE TRUE"
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "14"))
                                             (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "eqSymm" (formula "21"))
                                             (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "15"))
                                             (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "13")))
                                             (rule "closeTrue" (formula "20"))
                                          )
                                          (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                                             (rule "close" (formula "20") (ifseqformula "1"))
                                          )
                                       )
                                       (branch "n_0.<created> = TRUE FALSE"
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "14"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "14"))
                                             (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "eqSymm" (formula "22"))
                                             (rule "replace_known_right" (formula "21") (term "0,1") (ifseqformula "13"))
                                             (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "15")))
                                             (rule "closeTrue" (formula "21"))
                                          )
                                          (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                                             (rule "close" (formula "21") (ifseqformula "1"))
                                          )
                                       )
                                    )
                                    (branch "ClassCastException (!(thrownExc instanceof java.lang.Throwable))"
                                       (builtin "One Step Simplification" (formula "19"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "closeTrue" (formula "18"))
                                    )
                                 )
                                 (branch "if thrownExc instanceof java.lang.Throwable false"
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch "ClassCastException (!(exc_0 instanceof java.lang.Throwable))"
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "closeTrue" (formula "17"))
                           )
                        )
                        (branch "if exc_0 instanceof java.lang.Throwable false"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
                  (branch "Pre (concatenate)"
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "wellFormedAnon" (formula "12") (term "0,0"))
                     (rule "replace_known_left" (formula "12") (term "1,0,0") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "2")))
                     (rule "shift_paren_or" (formula "12") (term "1"))
                     (rule "shift_paren_or" (formula "12") (term "0"))
                     (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "8"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "orRight" (formula "12"))
                     (rule "orRight" (formula "12"))
                     (rule "ifthenelse_split" (formula "1") (term "0"))
                     (branch "n_0.<created> = TRUE TRUE"
                        (rule "referencedObjectIsCreatedRightEQ" (formula "14") (ifseqformula "2") (ifseqformula "13"))
                        (rule "close" (formula "14") (ifseqformula "3"))
                     )
                     (branch "n_0.<created> = TRUE FALSE"
                        (rule "referencedObjectIsCreatedRightEQ" (formula "15") (ifseqformula "1") (ifseqformula "13"))
                        (rule "close" (formula "15") (ifseqformula "6"))
                     )
                  )
               )
               (branch "Null Reference (n = null)"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "if x_1 false"
               (builtin "One Step Simplification" (formula "12"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Use Case"
            (builtin "One Step Simplification" (formula "9"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "6"))
            (rule "variableDeclarationAssign" (formula "11") (term "1"))
            (rule "variableDeclaration" (formula "11") (term "1") (newnames "b_1"))
            (rule "blockEmpty" (formula "11") (term "1,0,1"))
            (rule "pullOutSelect" (formula "8") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingMachine_core_EntryQueue_head_0"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")) (ifInst ""  (formula "3")))
            (rule "applyEqReverse" (formula "9") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "shift_paren_or" (formula "7"))
            (rule "shift_paren_or" (formula "6"))
            (rule "inequality_comparison_simple" (formula "10") (term "1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "methodCallEmpty" (formula "10") (term "1"))
            (rule "emptyModality" (formula "10") (term "1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "impRight" (formula "10"))
            (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "methodCallReturn" (formula "10") (term "1"))
            (rule "assignment" (formula "10") (term "1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "methodCallEmpty" (formula "10") (term "1"))
            (rule "tryEmpty" (formula "10") (term "1"))
            (rule "emptyModality" (formula "10") (term "1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "allRight" (formula "10") (inst "sk=f_0"))
            (rule "allRight" (formula "10") (inst "sk=o_0"))
            (rule "orRight" (formula "10"))
            (rule "eqSymm" (formula "11"))
            (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=f_0_0"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
            (rule "applyEqReverse" (formula "12") (term "0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "closeTrue" (formula "12"))
         )
      )
      (branch "Null Reference (n_3 = null)"
         (builtin "One Step Simplification" (formula "8"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Null Reference (n_2 = null)"
      (builtin "One Step Simplification" (formula "8"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
      (rule "closeFalse" (formula "1"))
   )
)
)

}
